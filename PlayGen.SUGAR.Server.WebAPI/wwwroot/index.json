{
  "development/index.html": {
    "href": "development/index.html",
    "title": "Development and Deployment | SUGAR",
    "keywords": "Development and Deployment SUGAR is currently in active development and subject to change. We are committed to delivering a feature complete version of the components by the end of 2017. For upcoming features and development direction see the Roadmap Source Repositories All source code is provided under the Apache License, Version 2.0 and is hosten on GitHub. We welcome pull requests for bug fixes and engagement in discussion on feture development. API Service Repository Admin Web UI Repository Unity Demo Repository API Service The SUGAR API Service is build using ASP.NET Core (MVC/WebAPI) as a .NET Core project. Currently the service is built for the .NETFramework 4.6 target so will only run on Windows systems, however this will soon be made compatible with the cross-platform NetStandard runtimes. Building the WebAPI project produces a Windows executable that can be executed directly to run the service in a console mode for debugging, or alternatively the service can be hosted in IIS or IIS express. In future releases the service will be made available as a Docker image for easy deployment. Database The service currently uses MySQL for it's data storage, we reccomend using the MariaDB release if you are hosting your own database instance. In the near future the GameData key/value storage will most likely be migrated to a NoSQL data store, however no decision on this technology has been taken yet. Development Dependencies Visual Studio 2015 with Update 3 .NET Core SDK for your platform The API documentation is generated with DocFX ; currently the DNX version of this must be used for .NET Core projects Building the entire solution including client assemblies has additional requirements for compatibility with Unity3D See Below IIS Hosting The server requires the .NET Core Windows (Server Hosting) runtime URL Rewrite is reccomended to redirect HTTP requests to a HTTPS endpoint, using a web.config rewrite rule as below <rewrite> <rules> <rule name=\"HTTPS-Upgrade\" enabled=\"true\" stopProcessing=\"true\"> <match url=\"(.*)\" /> <conditions> <add input=\"{HTTPS}\" pattern=\"^OFF$\" /> </conditions> <action type=\"Redirect\" url=\"https://{HTTP_HOST}/{R:1}\" /> </rule> </rules> </rewrite> API Client The API client provides a C# interface to the RESTful API exposed by the service. The client is intended to be hosted in C# projects and in Unity3D applications. Development Dependencies JSON Serialization .NET MVC Uses the tried and tested JSON.NET library from Newtonsoft. For API consistency the C# client uses JSON.net for explicit serialization operations, however the generally released version of this library utilises System.Reflection operations that are not available in Unity's WebGL environment. This issue has been addressed by SaladLab who have produced a lightweight version of the JSON.Net library specifically for use in Unity projects ( https://github.com/SaladLab/Json.Net.Unity3D ). We have decided to use this library for the C# client regardless of the target platform as it provided all required functionality. SaladLab only currently provide this in the unitypackage format, we have packaged this for NuGet which can currently be downloaded here , however this will be published to the nuget.org package feed in the near future. For details on how to configure a local filesystem based NuGeT package feed see here . Unity Unity uses Mono in place of Microsoft's .NET implementation and provides .NET 3.5 compatibility, because of this there a number or limitations on different platforms and those that we are currently aware of are detailed below: WebClient In Unity WebGL builds the socket operations performed by the System.Net.WebClient are not available and an alternative method must be used to perform HTTP operations. This has been solved in the <xref:PlayGen.SUGAR.Client> by delegating the HTTP operations to a platform specific implementation. Unity WebGL applications can use the browsers native XMLHttpRequest via external calls to a JavaScript library embedded in the project. TODO: JSLib installation instructions HTTPS Mono does not use the system certificate store and by default has no root trust certificates present causing all SSL certificates to be treated as untrusted. Mono can be configured to trust certificates from any source via the methods detailed here , however there does not currently appear to be a way to use the machines trust store by default. This issue is discussed extensively by the Unity community We have not currently arrived at a satisfactory solution with the options below being considered at present: Validate the fingerprint of specific certifictes by intercepting the validation operation as detailed here Add specific certificates corresponding to the root of trust for your instance of the API service to the mono trust store during application installation or initialization Both of these methods have limitations that undermine the security and maintenance of the system as approved certificates or fingerprints must be embedded in the application deployable. Application updates must be deployed if server certificates change. Security could be undermined if application integrity cannot be verified and binaries were tampered with by a 3rd party. Certificate revocation checks would have to be performed explicitly and could also be subject to tampering."
  },
  "development/roadmap.html": {
    "href": "development/roadmap.html",
    "title": "Roadmap | SUGAR",
    "keywords": "Roadmap This page provides an overview of upcoming development for the platform. Features Matches Track play sessions and associated data Schedule competitive/cooperative games Pre-configure player to game role mapping Provide synchronisation mechanism for match/round/session start Matchmaking Matching players based on arbitrary criteria using game data evaluation Score matching History matching Plugin external matching algorithms (to support matching functions from RAGE) Integration with Tournaments Tournaments Providing a variety of team based game dynamics, tournaments can be configured as: Round-robin Knock-out Combination of both Challenge system Issue challenges to players, groups or globally Set time and arbitary criteria restrictions on challenge eligibility Portable achievement system Integration with achievement systems on popular app stores and game distribution platforms. Rewards Resources can be awarded for participation in Matches and Tournaments. Group Permissioning Group roles with configurable permissions Group resource accessibility restrictions Group Alliance Extended Group Achievements See Groups Tech Standalone API Create an offline and/or in memory GameData store and expose criteria evaluation functions. Implement state machine and game logic decisions using GameData evaluation WebSockets Add push messaging and event/message aggregation to API. ???"
  },
  "api/PlayGen.SUGAR.Server.Model.SentEvaluationNotification.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.SentEvaluationNotification.html",
    "title": "Class SentEvaluationNotification | SUGAR",
    "keywords": "Class SentEvaluationNotification Inheritance System.Object SentEvaluationNotification Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class SentEvaluationNotification Properties ActorId Declaration public int ActorId { get; set; } Property Value Type Description System.Int32 EvaluationId Declaration public int EvaluationId { get; set; } Property Value Type Description System.Int32 GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 Progress Declaration public float Progress { get; set; } Property Value Type Description System.Single"
  },
  "api/PlayGen.SUGAR.Server.Model.Skill.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Skill.html",
    "title": "Class Skill | SUGAR",
    "keywords": "Class Skill Inheritance System.Object Evaluation Skill Inherited Members Evaluation.Id Evaluation.GameId Evaluation.Name Evaluation.Description Evaluation.ActorType Evaluation.Token Evaluation.EvaluationCriterias Evaluation.Rewards System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Skill : Evaluation Properties EvaluationType Declaration public override EvaluationType EvaluationType { get; } Property Value Type Description EvaluationType Overrides Evaluation.EvaluationType Extension Methods SkillExtensions.ToContract(Skill)"
  },
  "api/PlayGen.SUGAR.Server.Model.User.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.User.html",
    "title": "Class User | SUGAR",
    "keywords": "Class User Inheritance System.Object Actor User Inherited Members Actor.Id Actor.Name Actor.Description Actor.Requestors Actor.Acceptors Actor.RequestAcceptors Actor.RequestRequestors System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class User : Actor Properties ActorType Declaration public override ActorType ActorType { get; } Property Value Type Description ActorType Overrides Actor.ActorType Extension Methods ActorExtensions.ToActorContract(Actor) UserExtensions.ToContract(User)"
  },
  "api/PlayGen.SUGAR.Server.Model.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.html",
    "title": "Namespace PlayGen.SUGAR.Server.Model | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Model Classes Account AccountSource Achievement Actor ActorClaim ActorData ActorRelationship ActorRelationshipRequest ActorRole Claim Evaluation EvaluationCriteria EvaluationData Game Group Leaderboard Match Reward Role RoleClaim SentEvaluationNotification Skill User"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ActorRoleController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ActorRoleController.html",
    "title": "Class ActorRoleController | SUGAR",
    "keywords": "Class ActorRoleController Web Controller that facilitates ActorRole specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ActorRoleController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class ActorRoleController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ActorRoleController(ActorRoleController, ActorClaimController, RoleClaimController, RoleController, IAuthorizationService) Declaration public ActorRoleController(ActorRoleController actorRoleCoreController, ActorClaimController actorClaimController, RoleClaimController roleClaimController, RoleController roleController, IAuthorizationService authorizationService) Parameters Type Name Description ActorRoleController actorRoleCoreController ActorClaimController actorClaimController RoleClaimController roleClaimController RoleController roleController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(ActorRoleRequest) Create a new ActorRole. Example Usage: POST api/actorrole Declaration [HttpPost] public Task<IActionResult> Create([FromBody] ActorRoleRequest newRole) Parameters Type Name Description ActorRoleRequest newRole object that contains the details of the new ActorRole. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new ActorRole details. Delete(Int32) Delete ActorRole with the ID provided. Example Usage: DELETE api/actorrole/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id ActorRole ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > GetActorEntityRoles(Int32, Int32, String) Get a list of all Roles for this Actor, ClaimScope and Entity. Example Usage: GET api/actorrole/actor/1/entity/1/claimscope/game Declaration [HttpGet(\"actor/{actorId:int}/entity/{entityId:int}/claimscope/{scopeName}\")] public Task<IActionResult> GetActorEntityRoles([FromRoute] int actorId, [FromRoute] int entityId, [FromRoute] string scopeName) Parameters Type Name Description System.Int32 actorId System.Int32 entityId System.String scopeName Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold Role details. GetControlled() Get a list of all Roles this Actor has control over. Example Usage: GET api/actorrole/controlled Declaration [HttpGet(\"controlled\")] public IActionResult GetControlled() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of that hold Role details. GetRoleActors(Int32, Int32) Get a list of all Actors for this Role and Entity. Example Usage: GET api/actorrole/role/1/entity/1 Declaration [HttpGet(\"role/{roleId:int}/entity/{entityId:int}\")] public Task<IActionResult> GetRoleActors([FromRoute] int roleId, [FromRoute] int entityId) Parameters Type Name Description System.Int32 roleId System.Int32 entityId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold Actor details. Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.EvaluationsController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.EvaluationsController.html",
    "title": "Class EvaluationsController | SUGAR",
    "keywords": "Class EvaluationsController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller EvaluationsController AchievementsController SkillsController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public abstract class EvaluationsController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors EvaluationsController(EvaluationController, EvaluationTracker, IAuthorizationService) Declaration protected EvaluationsController(EvaluationController evaluationCoreController, EvaluationTracker evaluationTracker, IAuthorizationService authorizationService) Parameters Type Name Description EvaluationController evaluationCoreController EvaluationTracker evaluationTracker Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Fields _authorizationService Declaration protected readonly IAuthorizationService _authorizationService Field Value Type Description Microsoft.AspNetCore.Authorization.IAuthorizationService EvaluationCoreController Declaration protected readonly EvaluationController EvaluationCoreController Field Value Type Description EvaluationController Methods Delete(String, Int32) Declaration protected Task<IActionResult> Delete(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get(Int32, EvaluationType) Declaration protected Task<IActionResult> Get(int gameId, EvaluationType evaluationType) Parameters Type Name Description System.Int32 gameId EvaluationType evaluationType Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get(String, Int32) Declaration protected Task<IActionResult> Get(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > GetEvaluationProgress(String, Int32, Int32) Declaration protected IActionResult GetEvaluationProgress(string token, int gameId, int actorId) Parameters Type Name Description System.String token System.Int32 gameId System.Int32 actorId Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult GetGameProgress(Int32, Int32) Declaration protected IActionResult GetGameProgress(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GameController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GameController.html",
    "title": "Class GameController | SUGAR",
    "keywords": "Class GameController Web Controller that facilitates Game specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller GameController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class GameController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors GameController(GameController, IAuthorizationService) Declaration public GameController(GameController gameCoreController, IAuthorizationService authorizationService) Parameters Type Name Description GameController gameCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(GameRequest) Create a new Game. Requires the to be unique. Example Usage: POST api/game Declaration [HttpPost] public Task<IActionResult> Create([FromBody] GameRequest newGame) Parameters Type Name Description GameRequest newGame object that contains the details of the new Game. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new Game details. Delete(Int32) Delete Game with the ID provided. Example Usage: DELETE api/game/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id Game ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get() Get a list of all Games. Example Usage: GET api/game/list Declaration [HttpGet(\"list\")] public IActionResult Get() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of that hold Game details. Get(String) Get a list of Games that match provided. Example Usage: GET api/game/find/game1 Declaration [HttpGet(\"find/{name}\")] public IActionResult Get([FromRoute] string name) Parameters Type Name Description System.String name Game name Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. GetById(Int32) Get Game that matches provided. Example Usage: GET api/game/findbyid/1 Declaration [HttpGet(\"findbyid/{id:int}\", Name = \"GetByGameId\")] public IActionResult GetById([FromRoute] int id) Parameters Type Name Description System.Int32 id Game id Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult which matches search criteria. GetControlled() Get a list of all Games this Actor has control over. Example Usage: GET api/game/controlled Declaration [HttpGet(\"controlled\")] public IActionResult GetControlled() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of that hold Game details. Update(Int32, GameRequest) Update an existing Game. Example Usage: PUT api/game/update/1 Declaration [HttpPut(\"update/{id:int}\")] public Task<IActionResult> Update([FromRoute] int id, [FromBody] GameRequest game) Parameters Type Name Description System.Int32 id Id of the existing Game. GameRequest game object that holds the details of the Game. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GameDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GameDataController.html",
    "title": "Class GameDataController | SUGAR",
    "keywords": "Class GameDataController Web Controller that facilitates GameData specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller GameDataController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class GameDataController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors GameDataController(GameDataController, IAuthorizationService) Declaration public GameDataController(GameDataController gameDataCoreController, IAuthorizationService authorizationService) Parameters Type Name Description GameDataController gameDataCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Add(EvaluationDataRequest) Create a new GameData record. Example Usage: POST api/gamedata Declaration [HttpPost] public Task<IActionResult> Add([FromBody] EvaluationDataRequest newData) Parameters Type Name Description EvaluationDataRequest newData object that holds the details of the new GameData. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new GameData details. Get(Nullable<Int32>, Nullable<Int32>, String[]) Find a list of all GameData that match the , and provided. Example Usage: GET api/gamedata?actorId=1&gameId=1&key=key1&key=key2 Declaration [HttpGet] public Task<IActionResult> Get(int ? actorId, int ? gameId, string[] key) Parameters Type Name Description System.Nullable < System.Int32 > actorId ID of a User/Group. System.Nullable < System.Int32 > gameId ID of a Game. System.String [] key Array of Key names. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. GetByLeaderboardType(Int32, Int32, String, EvaluationDataType, LeaderboardType) Example Usage: GET api/gamedata/highest?actorId=1&gameId=1&key=key1&key=key2&dataType=1 Declaration [HttpGet(\"highest\")] public Task<IActionResult> GetByLeaderboardType(int actorId, int gameId, string key, EvaluationDataType dataType, LeaderboardType sortType) Parameters Type Name Description System.Int32 actorId ID of a User/Group. System.Int32 gameId ID of a Game. System.String key Array of Key names. EvaluationDataType dataType Data type of value LeaderboardType sortType Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > GetGameActors(Int32) Find a list of all Actors that have data saved for the game provided. Example Usage: GET api/gamedata/gameactors/1 Declaration [HttpGet(\"gameactors/{id:int}\")] public IActionResult GetGameActors(int id) Parameters Type Name Description System.Int32 id ID of a Game. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. GetGameKeys(Int32) Find a list of all GameData keys for the provided. Example Usage: GET api/gamedata/gamekeys/1 Declaration [HttpGet(\"gamekeys/{id:int}\")] public Task<IActionResult> GetGameKeys(int id) Parameters Type Name Description System.Int32 id ID of a Game. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of GameData keys and their EvaluationDataType that has data saved for the provided game ID Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.AchievementExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.AchievementExtensions.html",
    "title": "Class AchievementExtensions | SUGAR",
    "keywords": "Class AchievementExtensions Inheritance System.Object AchievementExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class AchievementExtensions Methods ToAchievementModel(EvaluationCreateRequest) Declaration public static Achievement ToAchievementModel(this EvaluationCreateRequest achievementContract) Parameters Type Name Description EvaluationCreateRequest achievementContract Returns Type Description Achievement ToAchievementModel(EvaluationUpdateRequest) Declaration public static Achievement ToAchievementModel(this EvaluationUpdateRequest achievementContract) Parameters Type Name Description EvaluationUpdateRequest achievementContract Returns Type Description Achievement ToContract(Achievement) Declaration public static EvaluationResponse ToContract(this Achievement model) Parameters Type Name Description Achievement model Returns Type Description EvaluationResponse ToContractList(IEnumerable<Achievement>) Declaration public static IEnumerable<EvaluationResponse> ToContractList(this IEnumerable<Achievement> models) Parameters Type Name Description System.Collections.Generic.IEnumerable < Achievement > models Returns Type Description System.Collections.Generic.IEnumerable < EvaluationResponse >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorClaimExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorClaimExtensions.html",
    "title": "Class ActorClaimExtensions | SUGAR",
    "keywords": "Class ActorClaimExtensions Inheritance System.Object ActorClaimExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class ActorClaimExtensions Methods ToContract(ActorClaim) Declaration public static ActorClaimResponse ToContract(this ActorClaim actorClaimModel) Parameters Type Name Description ActorClaim actorClaimModel Returns Type Description ActorClaimResponse ToContractList(IEnumerable<ActorClaim>) Declaration public static IEnumerable<ActorClaimResponse> ToContractList(this IEnumerable<ActorClaim> actorClaimModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < ActorClaim > actorClaimModels Returns Type Description System.Collections.Generic.IEnumerable < ActorClaimResponse > ToModel(ActorClaimRequest) Declaration public static ActorClaim ToModel(this ActorClaimRequest actorClaimContract) Parameters Type Name Description ActorClaimRequest actorClaimContract Returns Type Description ActorClaim"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorDataExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorDataExtensions.html",
    "title": "Class ActorDataExtensions | SUGAR",
    "keywords": "Class ActorDataExtensions Inheritance System.Object ActorDataExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class ActorDataExtensions Methods ToActorDataModel(EvaluationDataRequest) Declaration public static ActorData ToActorDataModel(this EvaluationDataRequest dataContract) Parameters Type Name Description EvaluationDataRequest dataContract Returns Type Description ActorData ToContract(ActorData) Declaration public static EvaluationDataResponse ToContract(this ActorData actorData) Parameters Type Name Description ActorData actorData Returns Type Description EvaluationDataResponse ToContractList(IEnumerable<ActorData>) Declaration public static IEnumerable<EvaluationDataResponse> ToContractList(this IEnumerable<ActorData> actorDatas) Parameters Type Name Description System.Collections.Generic.IEnumerable < ActorData > actorDatas Returns Type Description System.Collections.Generic.IEnumerable < EvaluationDataResponse >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorExtensions.html",
    "title": "Class ActorExtensions | SUGAR",
    "keywords": "Class ActorExtensions Inheritance System.Object ActorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class ActorExtensions Methods ToActorContract(Actor) Declaration public static ActorResponse ToActorContract(this Actor model) Parameters Type Name Description Actor model Returns Type Description ActorResponse ToActorContractList(IEnumerable<Actor>) Declaration public static IEnumerable<ActorResponse> ToActorContractList(this IEnumerable<Actor> actorModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < Actor > actorModels Returns Type Description System.Collections.Generic.IEnumerable < ActorResponse >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.LeaderboardExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.LeaderboardExtensions.html",
    "title": "Class LeaderboardExtensions | SUGAR",
    "keywords": "Class LeaderboardExtensions Inheritance System.Object LeaderboardExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class LeaderboardExtensions Methods ToContract(StandingsResponse) Declaration public static LeaderboardStandingsResponse ToContract(this StandingsResponse standingsCore) Parameters Type Name Description StandingsResponse standingsCore Returns Type Description LeaderboardStandingsResponse ToContract(Leaderboard) Declaration public static LeaderboardResponse ToContract(this Leaderboard leaderboardModel) Parameters Type Name Description Leaderboard leaderboardModel Returns Type Description LeaderboardResponse ToContractList(IEnumerable<StandingsResponse>) Declaration public static IEnumerable<LeaderboardStandingsResponse> ToContractList(this IEnumerable<StandingsResponse> standingsCores) Parameters Type Name Description System.Collections.Generic.IEnumerable < StandingsResponse > standingsCores Returns Type Description System.Collections.Generic.IEnumerable < LeaderboardStandingsResponse > ToContractList(IEnumerable<Leaderboard>) Declaration public static IEnumerable<LeaderboardResponse> ToContractList(this IEnumerable<Leaderboard> leaderboardModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < Leaderboard > leaderboardModels Returns Type Description System.Collections.Generic.IEnumerable < LeaderboardResponse > ToCore(LeaderboardStandingsRequest) Declaration public static StandingsRequest ToCore(this LeaderboardStandingsRequest standingsContract) Parameters Type Name Description LeaderboardStandingsRequest standingsContract Returns Type Description StandingsRequest ToModel(LeaderboardRequest) Declaration public static Leaderboard ToModel(this LeaderboardRequest leaderboardContract) Parameters Type Name Description LeaderboardRequest leaderboardContract Returns Type Description Leaderboard"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.MatchExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.MatchExtensions.html",
    "title": "Class MatchExtensions | SUGAR",
    "keywords": "Class MatchExtensions Inheritance System.Object MatchExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class MatchExtensions Methods ToContract(Match) Declaration public static MatchResponse ToContract(this Match model) Parameters Type Name Description Match model Returns Type Description MatchResponse ToContractList(List<Match>) Declaration public static List<MatchResponse> ToContractList(this List<Match> models) Parameters Type Name Description System.Collections.Generic.List < Match > models Returns Type Description System.Collections.Generic.List < MatchResponse > ToMatchDataModel(EvaluationDataRequest) Declaration public static EvaluationData ToMatchDataModel(this EvaluationDataRequest contract) Parameters Type Name Description EvaluationDataRequest contract Returns Type Description EvaluationData"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RelationshipExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RelationshipExtensions.html",
    "title": "Class RelationshipExtensions | SUGAR",
    "keywords": "Class RelationshipExtensions Inheritance System.Object RelationshipExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class RelationshipExtensions Methods ToContract(ActorRelationship) Declaration public static RelationshipResponse ToContract(this ActorRelationship relationshipModel) Parameters Type Name Description ActorRelationship relationshipModel Returns Type Description RelationshipResponse ToRelationshipModel(RelationshipRequest) Declaration public static ActorRelationship ToRelationshipModel(this RelationshipRequest relationContract) Parameters Type Name Description RelationshipRequest relationContract Returns Type Description ActorRelationship"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ResourceExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ResourceExtensions.html",
    "title": "Class ResourceExtensions | SUGAR",
    "keywords": "Class ResourceExtensions Inheritance System.Object ResourceExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class ResourceExtensions Methods ToModel(ResourceAddRequest) Declaration public static EvaluationData ToModel(this ResourceAddRequest resourceContract) Parameters Type Name Description ResourceAddRequest resourceContract Returns Type Description EvaluationData ToResourceContract(EvaluationData) Declaration public static ResourceResponse ToResourceContract(this EvaluationData evaluationData) Parameters Type Name Description EvaluationData evaluationData Returns Type Description ResourceResponse ToResourceContractList(IEnumerable<EvaluationData>) Declaration public static IEnumerable<ResourceResponse> ToResourceContractList(this IEnumerable<EvaluationData> gameData) Parameters Type Name Description System.Collections.Generic.IEnumerable < EvaluationData > gameData Returns Type Description System.Collections.Generic.IEnumerable < ResourceResponse >"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.RewardController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.RewardController.html",
    "title": "Class RewardController | SUGAR",
    "keywords": "Class RewardController Inheritance System.Object CriteriaEvaluator RewardController Inherited Members CriteriaEvaluator.RelationshipCoreController CriteriaEvaluator.ContextFactory CriteriaEvaluator.EvaluationDataLogger CriteriaEvaluator.IsCriteriaSatisified(Int32, Int32, List<EvaluationCriteria>, ActorType, EvaluationType) CriteriaEvaluator.Evaluate(Int32, Int32, EvaluationCriteria, ActorType, EvaluationType) CriteriaEvaluator.EvaluateLong(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateFloat(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateString(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateBool(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateManyLong(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyFloat(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyString(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyBool(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.CompareValues<T>(T, T, ComparisonType, EvaluationDataType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class RewardController : CriteriaEvaluator Constructors RewardController(ILogger<RewardController>, ILogger<EvaluationDataController>, SUGARContextFactory, RelationshipController) Declaration public RewardController(ILogger<RewardController> logger, ILogger<EvaluationDataController> evaluationDataLogger, SUGARContextFactory contextFactory, RelationshipController relationshipController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < RewardController > logger Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger SUGARContextFactory contextFactory RelationshipController relationshipController Methods AddReward(Int32, Int32, Reward) Declaration public bool AddReward(int actorId, int gameId, Reward reward) Parameters Type Name Description System.Int32 actorId System.Int32 gameId Reward reward Returns Type Description System.Boolean"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.RoleClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.RoleClaimController.html",
    "title": "Class RoleClaimController | SUGAR",
    "keywords": "Class RoleClaimController Inheritance System.Object RoleClaimController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class RoleClaimController Constructors RoleClaimController(ILogger<RoleClaimController>, RoleClaimController) Declaration public RoleClaimController(ILogger<RoleClaimController> logger, RoleClaimController roleClaimDbController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < RoleClaimController > logger RoleClaimController roleClaimDbController Methods Create(RoleClaim) Declaration public RoleClaim Create(RoleClaim newRoleClaim) Parameters Type Name Description RoleClaim newRoleClaim Returns Type Description RoleClaim Delete(Int32, Int32) Declaration public void Delete(int roleId, int claimId) Parameters Type Name Description System.Int32 roleId System.Int32 claimId GetClaimsByRole(Int32) Declaration public List<Claim> GetClaimsByRole(int roleId) Parameters Type Name Description System.Int32 roleId Returns Type Description System.Collections.Generic.List < Claim > GetClaimsByRoles(List<Int32>) Declaration public List<Claim> GetClaimsByRoles(List<int> ids) Parameters Type Name Description System.Collections.Generic.List < System.Int32 > ids Returns Type Description System.Collections.Generic.List < Claim > GetRolesByClaim(Int32) Declaration public List<Role> GetRolesByClaim(int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Collections.Generic.List < Role >"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.EvaluationProgress.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.EvaluationProgress.html",
    "title": "Class EvaluationProgress | SUGAR",
    "keywords": "Class EvaluationProgress Inheritance System.Object EvaluationProgress Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class EvaluationProgress Properties Actor Declaration public Actor Actor { get; set; } Property Value Type Description Actor Name Declaration public string Name { get; set; } Property Value Type Description System.String Progress Declaration public float Progress { get; set; } Property Value Type Description System.Single"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.EvaluationTracker.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.EvaluationTracker.html",
    "title": "Class EvaluationTracker | SUGAR",
    "keywords": "Class EvaluationTracker Inheritance System.Object EvaluationTracker Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class EvaluationTracker : IDisposable Constructors EvaluationTracker(ProgressEvaluator, EvaluationController, SessionTracker) Declaration public EvaluationTracker(ProgressEvaluator progressEvaluator, EvaluationController evaluationController, SessionTracker sessionTracker) Parameters Type Name Description ProgressEvaluator progressEvaluator EvaluationController evaluationController SessionTracker sessionTracker Methods Dispose() Declaration public void Dispose() Finalize() Declaration protected void Finalize() GetPendingNotifications(Int32, Int32) Declaration public ConcurrentDictionary<int, ConcurrentDictionary<Evaluation, float>> GetPendingNotifications(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Collections.Concurrent.ConcurrentDictionary < System.Int32 , System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single >> MapExistingEvaluations() Declaration public void MapExistingEvaluations() Implements System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.Core.Exceptions.InvalidDataException.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Exceptions.InvalidDataException.html",
    "title": "Class InvalidDataException | SUGAR",
    "keywords": "Class InvalidDataException Inheritance System.Object InvalidDataException Namespace : PlayGen.SUGAR.Server.Core.Exceptions Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class InvalidDataException : SUGARException Constructors InvalidDataException() Declaration public InvalidDataException() InvalidDataException(String) Declaration public InvalidDataException(string message) Parameters Type Name Description System.String message InvalidDataException(String, Exception) Declaration public InvalidDataException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException"
  },
  "api/PlayGen.SUGAR.Server.Core.Exceptions.InvalidOperationException.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Exceptions.InvalidOperationException.html",
    "title": "Class InvalidOperationException | SUGAR",
    "keywords": "Class InvalidOperationException Inheritance System.Object InvalidOperationException Namespace : PlayGen.SUGAR.Server.Core.Exceptions Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class InvalidOperationException : SUGARException Constructors InvalidOperationException() Declaration public InvalidOperationException() InvalidOperationException(String) Declaration public InvalidOperationException(string message) Parameters Type Name Description System.String message InvalidOperationException(String, Exception) Declaration public InvalidOperationException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.ClearDatabaseFixtureCollection.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.ClearDatabaseFixtureCollection.html",
    "title": "Class ClearDatabaseFixtureCollection | SUGAR",
    "keywords": "Class ClearDatabaseFixtureCollection Inheritance System.Object ClearDatabaseFixtureCollection Implements Xunit.ICollectionFixture < ClearDatabaseFixture > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax [CollectionDefinition(\"ClearDatabaseFixture\")] public class ClearDatabaseFixtureCollection : ICollectionFixture<ClearDatabaseFixture> Implements Xunit.ICollectionFixture<TFixture>"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.ControllerLocator.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.ControllerLocator.html",
    "title": "Class ControllerLocator | SUGAR",
    "keywords": "Class ControllerLocator Inheritance System.Object ControllerLocator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public abstract class ControllerLocator Properties AccountController Declaration public static AccountController AccountController { get; } Property Value Type Description AccountController AccountSourceController Declaration public static AccountSourceController AccountSourceController { get; } Property Value Type Description AccountSourceController ActorClaimController Declaration public static ActorClaimController ActorClaimController { get; } Property Value Type Description ActorClaimController ActorController Declaration public static ActorController ActorController { get; } Property Value Type Description ActorController ActorRoleController Declaration public static ActorRoleController ActorRoleController { get; } Property Value Type Description ActorRoleController ClaimController Declaration public static ClaimController ClaimController { get; } Property Value Type Description ClaimController EvaluationController Declaration public static EvaluationController EvaluationController { get; } Property Value Type Description EvaluationController GameController Declaration public static GameController GameController { get; } Property Value Type Description GameController GameDataController Declaration public static GameDataController GameDataController { get; } Property Value Type Description GameDataController GroupController Declaration public static GroupController GroupController { get; } Property Value Type Description GroupController LeaderboardController Declaration public static LeaderboardController LeaderboardController { get; } Property Value Type Description LeaderboardController MatchController Declaration public static MatchController MatchController { get; } Property Value Type Description MatchController RelationshipController Declaration public static RelationshipController RelationshipController { get; } Property Value Type Description RelationshipController ResourceController Declaration public static ResourceController ResourceController { get; } Property Value Type Description ResourceController RewardController Declaration public static RewardController RewardController { get; } Property Value Type Description RewardController RoleClaimController Declaration public static RoleClaimController RoleClaimController { get; } Property Value Type Description RoleClaimController RoleController Declaration public static RoleController RoleController { get; } Property Value Type Description RoleController UserController Declaration public static UserController UserController { get; } Property Value Type Description UserController"
  },
  "api/PlayGen.SUGAR.Server.Core.Utilities.PasswordEncryption.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Utilities.PasswordEncryption.html",
    "title": "Class PasswordEncryption | SUGAR",
    "keywords": "Class PasswordEncryption Inheritance System.Object PasswordEncryption Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Utilities Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class PasswordEncryption Methods Encrypt(String) Declaration public static string Encrypt(string password) Parameters Type Name Description System.String password Returns Type Description System.String Verify(String, String) Declaration public static bool Verify(string password, string hash) Parameters Type Name Description System.String password System.String hash Returns Type Description System.Boolean"
  },
  "api/PlayGen.SUGAR.Server.Core.Utilities.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Utilities.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Utilities | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Utilities Classes PasswordEncryption"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.EvaluationController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.EvaluationController.html",
    "title": "Class EvaluationController | SUGAR",
    "keywords": "Class EvaluationController Inheritance System.Object DbController EvaluationController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class EvaluationController : DbController Constructors EvaluationController(SUGARContextFactory) Declaration public EvaluationController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Evaluation) Declaration public Evaluation Create(Evaluation evaluation) Parameters Type Name Description Evaluation evaluation Returns Type Description Evaluation Delete(String, Int32) Declaration public void Delete(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Get() Declaration public List<Evaluation> Get() Returns Type Description System.Collections.Generic.List < Evaluation > Get(String, Int32) Declaration public Evaluation Get(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Returns Type Description Evaluation GetByEvaluationType(Int32, EvaluationType) Declaration public List<Evaluation> GetByEvaluationType(int gameId, EvaluationType evaluationType) Parameters Type Name Description System.Int32 gameId EvaluationType evaluationType Returns Type Description System.Collections.Generic.List < Evaluation > GetByGame(Int32) Declaration public List<Evaluation> GetByGame(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < Evaluation > Update(Evaluation) Declaration public void Update(Evaluation evaluation) Parameters Type Name Description Evaluation evaluation"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.EvaluationDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.EvaluationDataController.html",
    "title": "Class EvaluationDataController | SUGAR",
    "keywords": "Class EvaluationDataController Inheritance System.Object DbController EvaluationDataController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class EvaluationDataController : DbController Constructors EvaluationDataController(SUGARContextFactory) Declaration [Obsolete] public EvaluationDataController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory EvaluationDataController(SUGARContextFactory, EvaluationDataCategory) Declaration public EvaluationDataController(SUGARContextFactory contextFactory, EvaluationDataCategory category) Parameters Type Name Description SUGARContextFactory contextFactory EvaluationDataCategory category Methods CountKeys(Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public int CountKeys(int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Int32 Create(EvaluationData) Declaration public EvaluationData Create(EvaluationData data) Parameters Type Name Description EvaluationData data Returns Type Description EvaluationData Create(List<EvaluationData>) Declaration public void Create(List<EvaluationData> datas) Parameters Type Name Description System.Collections.Generic.List < EvaluationData > datas Get(ICollection<Int32>) Declaration public List<EvaluationData> Get(ICollection<int> ids) Parameters Type Name Description System.Collections.Generic.ICollection < System.Int32 > ids Returns Type Description System.Collections.Generic.List < EvaluationData > Get(Int32, ICollection<String>) Declaration public List<EvaluationData> Get(int entityId, ICollection<string> keys = null) Parameters Type Name Description System.Int32 entityId System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Collections.Generic.List < EvaluationData > Get(Int32, Int32, ICollection<String>) Declaration public List<EvaluationData> Get(int gameId, int actorId, ICollection<string> keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Collections.Generic.List < EvaluationData > Get(Int32, Int32, Nullable<Int32>, ICollection<String>) Declaration public List<EvaluationData> Get(int gameId, int actorId, int ? entityId = default (int ? ), ICollection<string> keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Nullable < System.Int32 > entityId System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Collections.Generic.List < EvaluationData > GetActorData(Int32) Declaration public List<EvaluationData> GetActorData(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < EvaluationData > GetGameActors(Int32) Declaration public List<int> GetGameActors(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < System.Int32 > GetGameKeyActors(Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public List<int> GetGameKeyActors(int gameId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Collections.Generic.List < System.Int32 > GetGameKeys(Int32) Declaration public List<KeyValuePair<string, EvaluationDataType>> GetGameKeys(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < System.Collections.Generic.KeyValuePair < System.String , EvaluationDataType >> KeyExists(Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public bool KeyExists(int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean List(Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public List<EvaluationData> List(int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Collections.Generic.List < EvaluationData > TryGetEarliest(Int32, Int32, String, out EvaluationData, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetEarliest(int gameId, int actorId, string key, out EvaluationData value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationData value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean TryGetLatest(Int32, Int32, String, out EvaluationData, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetLatest(int gameId, int actorId, string key, out EvaluationData value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationData value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean TryGetMax<T>(Int32, Int32, String, out Nullable<T>, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetMax<T>(int gameId, int actorId, string key, out T? value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime))where T : struct Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key System.Nullable <T> value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean Type Parameters Name Description T TryGetMin<T>(Int32, Int32, String, out Nullable<T>, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetMin<T>(int gameId, int actorId, string key, out T? value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime))where T : struct Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key System.Nullable <T> value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean Type Parameters Name Description T TryGetSum<T>(Int32, Int32, String, out Nullable<T>, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetSum<T>(int gameId, int actorId, string key, out T? value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime))where T : struct Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key System.Nullable <T> value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean Type Parameters Name Description T Update(EvaluationData) Declaration public EvaluationData Update(EvaluationData updatedData) Parameters Type Name Description EvaluationData updatedData Returns Type Description EvaluationData"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.RelationshipController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.RelationshipController.html",
    "title": "Class RelationshipController | SUGAR",
    "keywords": "Class RelationshipController Inheritance System.Object DbController RelationshipController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class RelationshipController : DbController Constructors RelationshipController(SUGARContextFactory) Declaration public RelationshipController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods CreateRelationship(ActorRelationship) Immediately creates a new relationship between 2 actors Declaration public void CreateRelationship(ActorRelationship newRelation) Parameters Type Name Description ActorRelationship newRelation Relationship to create CreateRelationshipRequest(ActorRelationship) Create a new relationship request between 2 actors Declaration public void CreateRelationshipRequest(ActorRelationship newRelation) Parameters Type Name Description ActorRelationship newRelation Relationship Request to create GetRelationshipCount(Int32, ActorType) Declaration public int GetRelationshipCount(int id, ActorType relationshipActorType) Parameters Type Name Description System.Int32 id ActorType relationshipActorType Returns Type Description System.Int32 GetRelationships(Int32, ActorType) Declaration public List<Actor> GetRelationships(int id, ActorType relationshipActorType) Parameters Type Name Description System.Int32 id ActorType relationshipActorType Returns Type Description System.Collections.Generic.List < Actor > GetRequests(Int32, ActorType) Declaration public List<Actor> GetRequests(int id, ActorType fromActorType) Parameters Type Name Description System.Int32 id ActorType fromActorType Returns Type Description System.Collections.Generic.List < Actor > GetSentRequests(Int32, ActorType) Declaration public List<Actor> GetSentRequests(int id, ActorType toActorType) Parameters Type Name Description System.Int32 id ActorType toActorType Returns Type Description System.Collections.Generic.List < Actor > Update(ActorRelationship) Declaration public void Update(ActorRelationship newRelation) Parameters Type Name Description ActorRelationship newRelation UpdateRequest(ActorRelationship, Boolean) Declaration public void UpdateRequest(ActorRelationship newRelation, bool accepted) Parameters Type Name Description ActorRelationship newRelation System.Boolean accepted"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.RoleClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.RoleClaimController.html",
    "title": "Class RoleClaimController | SUGAR",
    "keywords": "Class RoleClaimController Inheritance System.Object DbController RoleClaimController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class RoleClaimController : DbController Constructors RoleClaimController(SUGARContextFactory) Declaration public RoleClaimController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(RoleClaim) Declaration public RoleClaim Create(RoleClaim roleClaim) Parameters Type Name Description RoleClaim roleClaim Returns Type Description RoleClaim Delete(Int32, Int32) Declaration public void Delete(int role, int claim) Parameters Type Name Description System.Int32 role System.Int32 claim GetClaimsByRole(Int32) Declaration public List<Claim> GetClaimsByRole(int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Collections.Generic.List < Claim > GetClaimsByRoles(List<Int32>) Declaration public List<Claim> GetClaimsByRoles(List<int> ids) Parameters Type Name Description System.Collections.Generic.List < System.Int32 > ids Returns Type Description System.Collections.Generic.List < Claim > GetRolesByClaim(Int32) Declaration public List<Role> GetRolesByClaim(int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Collections.Generic.List < Role >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorRelationshipConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorRelationshipConfig.html",
    "title": "Class ActorRelationshipConfig | SUGAR",
    "keywords": "Class ActorRelationshipConfig Inheritance System.Object ActorRelationshipConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < ActorRelationship > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorRelationshipConfig : IEntityTypeConfiguration<ActorRelationship> Methods Configure(EntityTypeBuilder<ActorRelationship>) Declaration public void Configure(EntityTypeBuilder<ActorRelationship> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < ActorRelationship > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorRelationshipRequestConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorRelationshipRequestConfig.html",
    "title": "Class ActorRelationshipRequestConfig | SUGAR",
    "keywords": "Class ActorRelationshipRequestConfig Inheritance System.Object ActorRelationshipRequestConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < ActorRelationshipRequest > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorRelationshipRequestConfig : IEntityTypeConfiguration<ActorRelationshipRequest> Methods Configure(EntityTypeBuilder<ActorRelationshipRequest>) Declaration public void Configure(EntityTypeBuilder<ActorRelationshipRequest> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < ActorRelationshipRequest > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.RoleClaimConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.RoleClaimConfig.html",
    "title": "Class RoleClaimConfig | SUGAR",
    "keywords": "Class RoleClaimConfig Inheritance System.Object RoleClaimConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < RoleClaim > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class RoleClaimConfig : IEntityTypeConfiguration<RoleClaim> Methods Configure(EntityTypeBuilder<RoleClaim>) Declaration public void Configure(EntityTypeBuilder<RoleClaim> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < RoleClaim > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.SentEvaluationNotificationConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.SentEvaluationNotificationConfig.html",
    "title": "Class SentEvaluationNotificationConfig | SUGAR",
    "keywords": "Class SentEvaluationNotificationConfig Inheritance System.Object SentEvaluationNotificationConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < SentEvaluationNotification > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class SentEvaluationNotificationConfig : IEntityTypeConfiguration<SentEvaluationNotification> Methods Configure(EntityTypeBuilder<SentEvaluationNotification>) Declaration public void Configure(EntityTypeBuilder<SentEvaluationNotification> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < SentEvaluationNotification > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.SkillConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.SkillConfig.html",
    "title": "Class SkillConfig | SUGAR",
    "keywords": "Class SkillConfig Inheritance System.Object SkillConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Skill > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class SkillConfig : IEntityTypeConfiguration<Skill> Methods Configure(EntityTypeBuilder<Skill>) Declaration public void Configure(EntityTypeBuilder<Skill> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Skill > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.UserConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.UserConfig.html",
    "title": "Class UserConfig | SUGAR",
    "keywords": "Class UserConfig Inheritance System.Object UserConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < User > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class UserConfig : IEntityTypeConfiguration<User> Methods Configure(EntityTypeBuilder<User>) Declaration public void Configure(EntityTypeBuilder<User> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < User > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Migrations.GenericRelationships.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Migrations.GenericRelationships.html",
    "title": "Class GenericRelationships | SUGAR",
    "keywords": "Class GenericRelationships Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration GenericRelationships Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Migrations Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax [DbContext(typeof (SUGARContext))] [Migration(\"20171206170542_GenericRelationships\")] public class GenericRelationships : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Migrations.InitialCreate.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Migrations.InitialCreate.html",
    "title": "Class InitialCreate | SUGAR",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Migrations Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax [DbContext(typeof (SUGARContext))] [Migration(\"20171205143841_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Migrations.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Migrations.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework.Migrations | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework.Migrations Classes GenericRelationships InitialCreate"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.SUGARContext.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.SUGARContext.html",
    "title": "Class SUGARContext | SUGAR",
    "keywords": "Class SUGARContext Entity Framework Database Configuration Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext SUGARContext Implements System.IDisposable Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure < System.IServiceProvider > Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable Inherited Members Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type) Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>() Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState() Microsoft.EntityFrameworkCore.DbContext.Dispose() Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object) Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Add(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object) Microsoft.EntityFrameworkCore.DbContext.Update(System.Object) Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Database Microsoft.EntityFrameworkCore.DbContext.ChangeTracker Microsoft.EntityFrameworkCore.DbContext.Model Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class SUGARContext : DbContext, IDisposable, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable Constructors SUGARContext(DbContextOptions<SUGARContext>, Boolean) Declaration public SUGARContext(DbContextOptions<SUGARContext> options, bool disableSave = false) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptions < SUGARContext > options System.Boolean disableSave Properties Accounts Declaration public DbSet<Account> Accounts { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Account > AccountSources Declaration public DbSet<AccountSource> AccountSources { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < AccountSource > Achievements Declaration public DbSet<Achievement> Achievements { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Achievement > ActorClaims Declaration public DbSet<ActorClaim> ActorClaims { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ActorClaim > ActorData Declaration public DbSet<ActorData> ActorData { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ActorData > ActorRoles Declaration public DbSet<ActorRole> ActorRoles { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ActorRole > Actors Declaration public DbSet<Actor> Actors { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Actor > Claims Declaration public DbSet<Claim> Claims { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Claim > EvaluationData Declaration public DbSet<EvaluationData> EvaluationData { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < EvaluationData > Evaluations Declaration public DbSet<Evaluation> Evaluations { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Evaluation > Games Declaration public DbSet<Game> Games { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Game > Groups Declaration public DbSet<Group> Groups { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Group > Leaderboards Declaration public DbSet<Leaderboard> Leaderboards { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Leaderboard > Matches Declaration public DbSet<Match> Matches { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Match > RelationshipRequests Declaration public DbSet<ActorRelationshipRequest> RelationshipRequests { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ActorRelationshipRequest > Relationships Declaration public DbSet<ActorRelationship> Relationships { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < ActorRelationship > RoleClaims Declaration public DbSet<RoleClaim> RoleClaims { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < RoleClaim > Roles Declaration public DbSet<Role> Roles { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Role > SentEvaluationNotifications Declaration public DbSet<SentEvaluationNotification> SentEvaluationNotifications { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < SentEvaluationNotification > Skills Declaration public DbSet<Skill> Skills { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < Skill > Users Declaration public DbSet<User> Users { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < User > Methods OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) SaveChanges() Declaration public override int SaveChanges() Returns Type Description System.Int32 Overrides Microsoft.EntityFrameworkCore.DbContext.SaveChanges() Implements System.IDisposable Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable Extension Methods ActorDataExtensions.FilterByIds(SUGARContext, List<Int32>) ActorDataExtensions.FilterByActorId(SUGARContext, Int32) ContextExtensions.HandleDetatchedGame(SUGARContext, Int32) ContextExtensions.HandleDetatchedActor(SUGARContext, Int32) ContextExtensions.HandleDetatchedActor(SUGARContext, Actor) ContextExtensions.HandleDetatchedGameData(SUGARContext, EvaluationData) EvaluationDataExtensions.GetCategoryData(SUGARContext, EvaluationDataCategory) SUGARContextSeedExtensions.EnsureSeeded(SUGARContext) SUGARContextSeedExtensions.EnsureTestsSeeded(SUGARContext)"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.GameControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.GameControllerTests.html",
    "title": "Class GameControllerTests | SUGAR",
    "keywords": "Class GameControllerTests Inheritance System.Object EntityFrameworkTestBase GameControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class GameControllerTests : EntityFrameworkTestBase Methods CreateAndGetGame() Declaration [Fact] public void CreateAndGetGame() CreateDuplicateGame() Declaration [Fact] public void CreateDuplicateGame() DeleteExistingGame() Declaration [Fact] public void DeleteExistingGame() DeleteNonExistingGame() Declaration [Fact] public void DeleteNonExistingGame() GetGameById() Declaration [Fact] public void GetGameById() GetMultipleGames() Declaration [Fact] public void GetMultipleGames() GetNonExistingGame() Declaration [Fact] public void GetNonExistingGame() GetNonExistingGameById() Declaration [Fact] public void GetNonExistingGameById() UpdateGame() Declaration [Fact] public void UpdateGame() UpdateGameToDuplicateName() Declaration [Fact] public void UpdateGameToDuplicateName() UpdateNonExistingGame() Declaration [Fact] public void UpdateNonExistingGame()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.GroupControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.GroupControllerTests.html",
    "title": "Class GroupControllerTests | SUGAR",
    "keywords": "Class GroupControllerTests Inheritance System.Object EntityFrameworkTestBase GroupControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class GroupControllerTests : EntityFrameworkTestBase Methods CreateAndGetGroup() Declaration [Fact] public void CreateAndGetGroup() CreateDuplicateGroup() Declaration [Fact] public void CreateDuplicateGroup() DeleteExistingGroup() Declaration [Fact] public void DeleteExistingGroup() DeleteNonExistingGroup() Declaration [Fact] public void DeleteNonExistingGroup() GetGroupById() Declaration [Fact] public void GetGroupById() GetMultipleGroups() Declaration [Fact] public void GetMultipleGroups() GetNonExistingGroup() Declaration [Fact] public void GetNonExistingGroup() GetNonExistingGroupById() Declaration [Fact] public void GetNonExistingGroupById() UpdateGroup() Declaration [Fact] public void UpdateGroup() UpdateGroupToDuplicateName() Declaration [Fact] public void UpdateGroupToDuplicateName() UpdateNonExistingGroup() Declaration [Fact] public void UpdateNonExistingGroup()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.GroupMemberControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.GroupMemberControllerTests.html",
    "title": "Class GroupMemberControllerTests | SUGAR",
    "keywords": "Class GroupMemberControllerTests Inheritance System.Object EntityFrameworkTestBase GroupMemberControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class GroupMemberControllerTests : EntityFrameworkTestBase Methods AcceptGroupMemberRequest() Declaration [Fact] public void AcceptGroupMemberRequest() CreateAndGetGroupMemberRequest() Declaration [Fact] public void CreateAndGetGroupMemberRequest() CreateDuplicateAcceptedGroupMember() Declaration [Fact] public void CreateDuplicateAcceptedGroupMember() CreateDuplicateGroupMember() Declaration [Fact] public void CreateDuplicateGroupMember() CreateDuplicateReversedAcceptedGroupMember() Declaration [Fact] public void CreateDuplicateReversedAcceptedGroupMember() CreateDuplicateReversedGroupMember() Declaration [Fact] public void CreateDuplicateReversedGroupMember() CreateGroupMemberWithNonExistingAcceptor() Declaration [Fact] public void CreateGroupMemberWithNonExistingAcceptor() CreateGroupMemberWithNonExistingRequestor() Declaration [Fact] public void CreateGroupMemberWithNonExistingRequestor() GetNonExistingGroupMemberRequests() Declaration [Fact] public void GetNonExistingGroupMemberRequests() GetNonExistingGroupMembers() Declaration [Fact] public void GetNonExistingGroupMembers() GetNonExistingGroupMemberSentRequests() Declaration [Fact] public void GetNonExistingGroupMemberSentRequests() GetNonExistingUserGroups() Declaration [Fact] public void GetNonExistingUserGroups() GetUserSentGroupRequests() Declaration [Fact] public void GetUserSentGroupRequests() RejectGroupMemberRequest() Declaration [Fact] public void RejectGroupMemberRequest() UpdateGroupMember() Declaration [Fact] public void UpdateGroupMember() UpdateNonExistingGroupMember() Declaration [Fact] public void UpdateNonExistingGroupMember() UpdateNonExistingGroupMemberRequest() Declaration [Fact] public void UpdateNonExistingGroupMemberRequest()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.Helpers.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.Helpers.html",
    "title": "Class Helpers | SUGAR",
    "keywords": "Class Helpers Inheritance System.Object Helpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public static class Helpers Methods CreateAchievement(String, Nullable<Int32>, Boolean) Declaration public static Achievement CreateAchievement(string name, int ? gameId = default (int ? ), bool addCriteria = true) Parameters Type Name Description System.String name System.Nullable < System.Int32 > gameId System.Boolean addCriteria Returns Type Description Achievement CreateGame(String) Declaration public static Game CreateGame(string name) Parameters Type Name Description System.String name Returns Type Description Game CreateUser(String) Declaration public static User CreateUser(string name) Parameters Type Name Description System.String name Returns Type Description User"
  },
  "api/PlayGen.SUGAR.Server.Model.ActorRole.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.ActorRole.html",
    "title": "Class ActorRole | SUGAR",
    "keywords": "Class ActorRole Inheritance System.Object ActorRole Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class ActorRole Properties Actor Declaration public Actor Actor { get; set; } Property Value Type Description Actor ActorId Declaration public int ActorId { get; set; } Property Value Type Description System.Int32 EntityId Declaration public int EntityId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Role Declaration public Role Role { get; set; } Property Value Type Description Role RoleId Declaration public int RoleId { get; set; } Property Value Type Description System.Int32 Extension Methods ActorRoleExtensions.ToContract(ActorRole)"
  },
  "api/PlayGen.SUGAR.Server.Model.Claim.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Claim.html",
    "title": "Class Claim | SUGAR",
    "keywords": "Class Claim Inheritance System.Object Claim Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Claim Properties ClaimScope Declaration public ClaimScope ClaimScope { get; set; } Property Value Type Description ClaimScope Description Declaration public string Description { get; set; } Property Value Type Description System.String Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String RoleClaims Declaration public virtual List<RoleClaim> RoleClaims { get; set; } Property Value Type Description System.Collections.Generic.List < RoleClaim > Extension Methods ClaimExtensions.ToContract(Claim)"
  },
  "api/PlayGen.SUGAR.Server.Model.Evaluation.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Evaluation.html",
    "title": "Class Evaluation | SUGAR",
    "keywords": "Class Evaluation Inheritance System.Object Evaluation Achievement Skill Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public abstract class Evaluation Properties ActorType Declaration public ActorType ActorType { get; set; } Property Value Type Description ActorType Description Declaration public string Description { get; set; } Property Value Type Description System.String EvaluationCriterias Declaration public virtual List<EvaluationCriteria> EvaluationCriterias { get; set; } Property Value Type Description System.Collections.Generic.List < EvaluationCriteria > EvaluationType Declaration public abstract EvaluationType EvaluationType { get; } Property Value Type Description EvaluationType GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String Rewards Declaration public virtual List<Reward> Rewards { get; set; } Property Value Type Description System.Collections.Generic.List < Reward > Token Declaration public string Token { get; set; } Property Value Type Description System.String"
  },
  "api/PlayGen.SUGAR.Server.Model.EvaluationCriteria.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.EvaluationCriteria.html",
    "title": "Class EvaluationCriteria | SUGAR",
    "keywords": "Class EvaluationCriteria Inheritance System.Object EvaluationCriteria Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class EvaluationCriteria Properties ComparisonType Declaration public ComparisonType ComparisonType { get; set; } Property Value Type Description ComparisonType CriteriaQueryType Declaration public CriteriaQueryType CriteriaQueryType { get; set; } Property Value Type Description CriteriaQueryType Evaluation Declaration public Evaluation Evaluation { get; set; } Property Value Type Description Evaluation EvaluationDataCategory Declaration public EvaluationDataCategory EvaluationDataCategory { get; set; } Property Value Type Description EvaluationDataCategory EvaluationDataKey Declaration public string EvaluationDataKey { get; set; } Property Value Type Description System.String EvaluationDataType Declaration public EvaluationDataType EvaluationDataType { get; set; } Property Value Type Description EvaluationDataType EvaluationId Declaration public int EvaluationId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Scope Declaration public CriteriaScope Scope { get; set; } Property Value Type Description CriteriaScope Value Declaration public string Value { get; set; } Property Value Type Description System.String Extension Methods EvaluationCriteriaExtensions.ToContract(EvaluationCriteria)"
  },
  "concepts/session.html": {
    "href": "concepts/session.html",
    "title": "Session | SUGAR",
    "keywords": "Session When a user logs in to a game, a new, unique session is created. When the user logs out, that session is ended. Sessions will automatically be ended if there has been no activity within a certain period. The \"Heartbeat\" method can be used to keep sessions active. Features Login Logout Heartbeat API Client <xref:PlayGen.SUGAR.Client.SessionClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.AccountRequest> <xref:PlayGen.SUGAR.Contracts.Shared.AccountResponse> WebAPI <xref:PlayGen.SUGAR.WebAPI.Controllers.SessionController>"
  },
  "demo/index.html": {
    "href": "demo/index.html",
    "title": "Demo | SUGAR",
    "keywords": "Demo Game The demo game serves as a simple tutorial of how one could implement the features of the SUGAR engine. Unity Demo"
  },
  "features/admin/user.html": {
    "href": "features/admin/user.html",
    "title": "Users | SUGAR",
    "keywords": "Users For more information on users view the documentation The users page allows admins to do the following actions: Create new users Manage users' friends Manage users' groups Delete users Create new users The admin can create new users by selecting the \"Create new User\" button, this will prompt a popup to show requesting a username and password to be entered for the new user, the new user will be added to the table in alphatbetical order. Manage users' friends Each user can have friends, pending friend requests and sent friend requests, from the friends page, admins can remove accepted friends, cancel sent friend requests and accept/reject requests from other users. The 'Add Friend' button will prompt a user name to be entered, the name entered must be an existing user for the friend request to be sent Manage users' groups Each user can be a member of a group, from the groups page admins can make the user join or leave groups. The \"Add Group\" button will prompt a group name to be entered, the name entered must be an existing group for the user to join successfully Delete users Delete button will delete the selected user from the table"
  },
  "features/unity/accounts.html": {
    "href": "features/unity/accounts.html",
    "title": "Account Setup | SUGAR",
    "keywords": "Account Setup The next component on the SUGAR prefab is the Account Unity Client script component. This is used to handle the player's login to their SUGAR account or the registration of new accounts. There are two ways of logging in a user. This can be done by a typical login panel gameobject or login can occur automatically via code if credentials come in from an external source. Login User Interface - Login panel gameobject, which appears to prompt the user to login. The gameobject must have the LoginUserInterface script attached. Included in the prefabs folder (\"Assets/SUGAR/Prefabs\") is a fully functional login panel template. Allow Auto Login - This enables the use of auto-login (bypassing the need for the login panel). If this is checked, and the command line arguments for auto login have been passed, then the Account Unity Client will attempt to login with the credentials. The command line options format is game.exe -u [username] -s [source] -autologin . Allow Register - Currently, this displays the makes the register on the login panel visible for custom registration handlers. Default Source Token - Source tokens are set to ensure the player is logging in from an allowed source. If the source is not set in the commandline options, then this value becomes the default."
  },
  "features/unity/achievements.html": {
    "href": "features/unity/achievements.html",
    "title": "4. Implementing Achievements | SUGAR",
    "keywords": "4. Implementing Achievements The Achievement Unity Client script component handles all the visual elements of the game's achievements. Achievement List Interface - Gameobject for displaying the full list of achievements available in the game. There is a fully functional template to use in the SUGAR prefabs folder. Any custom gameobjects must have the AchievementListInterace script attached to it. Achievement Popup - Gameobject to notify player when an achievement criteria has been met. There is also a template for this in the prefabs folder, custom gameobjects require AchievementPopupInterface attached to it. Notification Check Rate - Rate at which the client checks to see if any new notifications (such as achievement criterias being met) are ready to display."
  },
  "features/unity/configuration.html": {
    "href": "features/unity/configuration.html",
    "title": "Configure Manager | SUGAR",
    "keywords": "Configure Manager The first step is to drag-and-drop the SUGAR prefab into your scene. This prefab is the core controller of all the SUGAR interactions. The SUGAR Unity Manager script component on the prefab holds universal information required by other SUGAR components. Configuring this component is necessary to connect to SUGAR. Base Address - web address of SUGAR server (e.g. http://localhost:62312/ or http://www.mysugarserver.com ). This is overwritten by the value set inside the config.json file (found in \"Assets/StreamingAssets\"). Game Token - name of the Game used for database lookup. Game Id - database row Id of the Game , returned from token lookup. Use Achievements - check this to enable SUGAR Achievement Use Leaderboards - check this to enable SUGAR Leaderboard"
  },
  "features/unity/index.html": {
    "href": "features/unity/index.html",
    "title": "Unity UI Component | SUGAR",
    "keywords": "Unity UI Component The UI component is a Unity package developers can import into their Unity project to allow easy interactions with the SUGAR engine. The package includes a folder of prefabs at \"Assets/SUGAR/Prefabs\"."
  },
  "features/unity/leaderboards.html": {
    "href": "features/unity/leaderboards.html",
    "title": "Implementing Leaderboards | SUGAR",
    "keywords": "Implementing Leaderboards Leaderboard and Leaderboard List Unity Client script components handle the display of SUGAR leaderboards. The Leaderboard Interface field is for the panel that contains all the Leaderboards available for the game. There is a fully functional LeaderboardPanel prefab template for this and any custom objects must have a LeaderboardUserInterface attached. The Leaderboard List Interface field is for the list of users that appear in a leaderboard. There is a fully functional LeaderboardListPanel prefab template in the prefabs folder and any custom objects must have a LeaderboardListUserInterface attached."
  },
  "features/unity/sendGameData.html": {
    "href": "features/unity/sendGameData.html",
    "title": "Sending GameData | SUGAR",
    "keywords": "Sending GameData For SUGAR to evaluate achievement progresses or leaderboard standings, GameData must be submitted to the server. There is no script component on the core controller gameObject for this. Instead there is a static reference to the GameDataUnityClass via SUGARManager.cs. Whenever any data that is to be evaluated by SUGAR needs to be submitted. call: SUGARManager.GameData.Send(key, value); from your game code."
  },
  "features/unity/setup.html": {
    "href": "features/unity/setup.html",
    "title": "Setting up the database | SUGAR",
    "keywords": "Setting up the database The asset package provides a modifiable editor script which will setup the game, achievements and leaderboards in the database. The SeedSUGARDatabase.cs script is found in \"Assets/Plugins/SUGAR/Scripts\". To run the script, select Tools > Seed SUGAR Database. This will show a popup to login as admin. In it's default state, the script will connect to the database specified in the base address field of the SUGAR Unity manager component and update the Game Id field with the row that matches the Game Token. If such a token does not exist in the database, a new entry will be made and that enty's Id will be placed into the Game Id field. To set up achievements and leaderboards, some editing of the script is required. The CreateAchievements() function contains a commented out template for creating an achievements. Multiple achievements can be made by duplicating the code. For information about each of the required fields please refer to the Evalutation Criteria section. The CreateLeaderboards() function has the same purpose but for generating leaderboards. Please refer to the LeaderboardStandings section for my information."
  },
  "index.html": {
    "href": "index.html",
    "title": "SUGAR | SUGAR",
    "keywords": "SUGAR Welcome to the documentation for SUGAR also known as the RAGE Social Gamification Asset. SUGAR provides a software platform consisting of Web API and Client side components that enable game developers to integrate group based gamification into their applications. It supports features such as clans, group resources and goals and tournaments. The documentation includes : Installation(coming in July 2016) : Link to step-by-step process to install SUGAR on your server. Features : Detailed description of features supported by the software including the roadmap for up-and-coming features. Core Concepts : Description of core concepts behind features within SUGAR. Admin Interface : Description of the platform’s admin panel. Client API Reference : Client API documentation and examples. RESTful API : Web API documentation and examples. The link to the repositories can be found below : Repositories: Server API Repository Admin Panel Repository Client Demo Repository SUGAR is partially funded by the RAGE project . Realising an Applied Gaming Eco-system (RAGE) aims to develop, transform and enrich advanced technologies from the leisure games industry into self-contained gaming assets that support game studios at developing applied games easier, faster and more cost-effectively."
  },
  "concepts/account.html": {
    "href": "concepts/account.html",
    "title": "Account | SUGAR",
    "keywords": "Account Accounts are used by the User's to register and login to SUGAR. Each account is associated with a user. A user may have multiple accounts but an account may only have one user. Each account stores a unique login name and password for the associated user. Features CRUD Account CRUD Account Metadata Account Name Account Password Account User (User) API Client <xref:PlayGen.SUGAR.Client.AccountClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.AccountRequest> <xref:PlayGen.SUGAR.Contracts.Shared.AccountResponse> WebAPI <xref:PlayGen.SUGAR.WebAPI.Controllers.AccountController>"
  },
  "concepts/criteria.html": {
    "href": "concepts/criteria.html",
    "title": "Evalutation Criteria | SUGAR",
    "keywords": "Evalutation Criteria <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> are the goals which a Users or Group are set in order to complete an Achievement or Skills . At least one must be assigned and only information stored within EvaluationData can be queried against. In order to set up an <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> , the following must be passed: Key - The fundermental piece of any criteria. All data collected will require the key to match with what is given here. <xref:PlayGen.SUGAR.Common.Shared.EvaluationDataType> - The type of data being queried against. As with key, only data that matches this type will be collected. Example - if \"String\" is given as DataType, only data also stored as \"String\" will be checked against. <xref:PlayGen.SUGAR.Common.Shared.CriteriaQueryType> - The type of query that will be performed against the collected data. \"Any\" checks to see if the criteria has been ever met by the collected data. \"Latest\" checks if the last data that matched Key and GameDataType met the criteria. \"Sum\" is used by numeric EvaluationDataTypes (Long and Float) and adds the value of all collected data together. <xref:PlayGen.SUGAR.Common.Shared.ComparisonType> - How the retrieved data will be compared against the target value. If the retrieved data compared to the value matches the ComparisonType provided, then the criteria has been met. Example - if the retrieved data equals 20, the value is 15 and the ComparisonType is \"GreaterThan\", the criteria has been met. If the ComparisonType was \"Equals\" then the criteria would not have been met. <xref:PlayGen.SUGAR.Common.Shared.CriteriaScope> - The range of data collected for this Actor . The \"Actor\" scope only looks at data stored against the actor directly. \"RelatedActors\" will collect data that have a relationship with the provided actor. Example - \"RelatedActor\" could be used with a group to collect data for all members of that group. Value - The target value which will be checked evaluated against. Must always be passed as a string. Examples Key = \"Gold\", DataType = \"Long\", Scope = \"Actor\", Value = \"15\", ComparisonType = \"GreaterOrEqual\", CriteriaQueryType = \"Sum\" Key = \"Level_1_Time\", DataType = \"Float\", Scope = \"Actor\", Value = \"9.25\", ComparisonType = \"Less\", CriteriaQueryType = \"Any\""
  },
  "concepts/entityModel.html": {
    "href": "concepts/entityModel.html",
    "title": "Entity Model | SUGAR",
    "keywords": "Entity Model A Users is the person playing the game. A Group is made up of a collection of Users. Users and Groups both derive from the Actor type. This means that objects that reference an Actor can apply to either a User or a Group. Actors can save GameData . GameData could be: A User's inventory A User's high score A Group's high score etc or any other kind of data that you need to persist between play sessions. Resources are items that can be traded or consumed. An Actor may collect 20 gems and decide to give 10 of them to another actor at a later point, resulting in both actors having 10 gems. As with GameData, Resources can be obtained and given by both Users and Groups. Leaderboards are used to calculate an Actor's ranking against other actors of the same type. One leaderboard may rank Groups by the amount of members they have, in a game where one goal is to make as big a group as possible. Another leaderboard could be the typical high score, where Users are ranked by the score they have saved in the GameData. Achievements look at the GameData of a specfic Actor to see whether they have met the completion criteria for the achievement. An achievement may check to see if an Actor's score is over 100, and if so, the Actor is evaluated as having completed the Achievement. Skills operate in the same way as Achievements but are conceptually different. A Skill has the aim of teaching the player a \"skill\" in the process of completing it. For example, a Skill may be to give 10 gems to 10 different people to complete the \"sharing\" Skill. Achievements and Skills both have Evalutation Criteria which is a set of conditions that need to be met in order for the Skill or Achievement to be considered as completed. AchievementCriteria can look for specific data in GameData. Once completed, an Achievement or Skill may offer rewards to the Actor. These rewards would be in the form of GameData. For example, an Actor may be credited with 20 points on completing an Achievement or Skill. Those 20 points would be saved in that Actor's GameData. Users can create, join and leave Groups. Users can also befriend other Users. Because there may be multiple Games , the Game is used to associate Achievements, Skills, Leaderboards, GameData and Resources whithin that specific game. Each user has an Account . The Account is only used to faciliatate user registration and logging in. After the user has logged in, the Account is not used until the next time they log in."
  },
  "concepts/index.html": {
    "href": "concepts/index.html",
    "title": "Overview | SUGAR",
    "keywords": "Overview This section provides more detailed descriptions on how elements of the SUGAR system could and should be utilised. The following is included within this section: Account : Data used for logging in and permissions. Session : User active sessions. Entity Model : Diagram and descriptions of the different parts of the entity model and how they work together. Evalutation Criteria : How <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> for Achievement and Skills can be utilised within the system. Reward : Details on what can be rewarded for completing Achievements and Skills . LeaderboardStandings : How <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest> should be provided and how this request differs from a normal <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest>."
  },
  "concepts/leaderboardstandings.html": {
    "href": "concepts/leaderboardstandings.html",
    "title": "LeaderboardStandings | SUGAR",
    "keywords": "LeaderboardStandings LeaderboardStandings are used to obtain a collection of Users or Groups based on a specific Leaderboard . In order to setup a <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest>, the following must be passed: LeaderboardToken - Used to identify the specific Leaderboard that this LeaderboardStandings applies to. GameId - The Game that this LeaderboardStandings and leaderboard is specific to. ActorId - The Actor that we are most concerned with. The actor is used in conjunction with the LeaderboardFilterType. <xref:PlayGen.SUGAR.Common.Shared.LeaderboardFilterType> - Allows you to specify how you want the results returned in relation to the actor: Top: Returns the top globally ranked actors. Near: Returns the actors in relation to the actorId Provided. This works in conjunction with the PageOffset. By default it will return a collection that contains the provided actor. Friends: If the actor is a user, only the friends of that user are returned. GroupMembers: If the actor is a group, only the members of that group are returned. PageLimit: The maximum amount of rankings to return. PageOffset: Used in conjunction with the LeaderboardFilterType Near. Example 1 - if the actorId = a user's Id, LeaderboardFilterType = Near, PageLimit = 50 and PageOffset = 0, with the user ranked 80th, a collection of rankings will be returned where the user is at position 30, with 29 rankings before and 20 after. Example 2 - if the actorId = a user's Id, LeaderboardFilterType = Near, PageLimit = 50 and PageOffset = 1, with the user ranked 40th, a collection of rankings between 51th and 100th will be returned, with the user not included. DateStart: Because the leaderboard associated with the LeaderboardStandings queries the GameData of actors to determine their ranking; you can specify a StartDate and EndDate where on the GameData added to the system during that time span will be considered in determining actors' rankings. DateEnd: The end of the date range for gameData to be considered in determining an actor's ranking. Both the DateStart and DateEnd can be left empty in which case all of the gameData for the actors will be considered. Examples LeaderboardToken = \"Player High Score\", GameId = 5, actorId = 23, LeaderboardFilterType = \"Near\", PageLimit = 20, PageOffset = 1, DateStart = null, DateEnd = null,"
  },
  "concepts/rewards.html": {
    "href": "concepts/rewards.html",
    "title": "Reward | SUGAR",
    "keywords": "Reward Rewards can be provided to Users and Groups upon completion of Achievements and Skills . Rewards given are stored within GameData, meaning they can in theory be used toward further <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> and Leaderboards . In order to set up aa <xref:PlayGen.SUGAR.Common.Shared.Reward>, the following must be passed: Key - The unique identifier for the reward being provided within GameData. DataType - The <xref:PlayGen.SUGAR.Common.Shared.EvaluationDataType> of data being stored. Value - The value which is being stored. Examples Key = \"Gold\", DataType = \"Long\", Value = \"15\" Key = \"Bonus_Points\", DataType = \"Float\", Value = \"2.5\","
  },
  "features/achievement.html": {
    "href": "features/achievement.html",
    "title": "Achievement | SUGAR",
    "keywords": "Achievement Achievements provide a flexible and simple way to increase user engagement, tracking their actions within and across multiple games. Achievements may be viewed as goals that individual or multiple actors can acquire through meeting one or more criteria. The criteria is flexible and can be written by the game developer or provided by the platform based on any game specific action. Achievements can be binary or incremental, ie. (complete/not complete) or have levels or percentages of progression toward their completion. They can be global, across all games, or associated with a single game. Note Both Achievements and Skills build on \"Evaluations\" which may contain a multitude of \"EvaluationCriteria\", specifiying the conditions that need to be satisfied for this specific Evaluation to be considered complete. Features Add/Update/Delete achievements Search for achievements by Id/Game/Name/Actor API Client <xref:PlayGen.SUGAR.Client.AchievementClient> Contracts <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse> <xref:PlayGen.SUGAR.Common.Shared.EvaluationDataType> <xref:PlayGen.SUGAR.Common.Shared.CriteriaQueryType> <xref:PlayGen.SUGAR.Common.Shared.ComparisonType> <xref:PlayGen.SUGAR.Common.Shared.ActorType> <xref:PlayGen.SUGAR.Common.Shared.CriteriaScope> Examples Specifying an achievement This example will describe how to implement the 'Slay 10 Enemies!' achievement. An achievement must be specified with an <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest> with a list of <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationCriteriaCreateRequest> that will be evalutated against to determine progress. All 'EnemiesSlain' keys will be checked in gameData and whether the sum of their values is greater than or equal to 10. public SUGARClient sugarClient = new SUGARClient(BaseUri); private AchievementClient _achievementClient; private int _gameId; private int _userId; private void SetUpAchievement() { // create instance of the achievement client _achievementClient = sugarClient.Achievement; // create an AchievementCriteria list var achievementCriteria = new List<EvaluationCriteriaCreateRequest>() { new EvaluationCriteriaCreateRequest() { DataType = GameDataType.Long, Value = \"10\", Key = \"EnemiesSlain\", CriteriaQueryType = CriteriaQueryType.Sum, ComparisonType = ComparisonType.GreaterOrEqual, Scope = CriteriaScope.Actor } }; // place the criteria inside an AchievementRequest var achievementRequest = new EvaluationCreateRequest() { GameId = _gameId, Name = \"Slay 10 Enemies!\", ActorType = ActorType.User, Token = \"slay_10_enemies\", CompletionCriteria = EvaluationCriteria }; // create the achievement _achievementClient.Create(EvaluationCreateRequest); } Submitting data for when somthing which may be used to evaluate progress towards an Achievement An achievement uses keys in GameData that match its <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria>. This data is submitted at points in the game which demonstrate progress towards the achievement (as well as other uses). private void SlayEnemies(int quantity) { // *Enemy Slaying Code* // // create instance of GameDataClient var gameDataClient = sugarClient.GameData; // create GameDataRequest var gameDataRequest = new GameDataRequest() { GameId = _gameId, ActorId = _userId, GameDataType = GameDataType.Long, Value = quantity, Key = \"EnemiesSlain\" }; // add the GameData gameDataClient.Add(gameDataRequest); } Automatically recieve achievemnt progress completion notifications: Enable and use automatic notifications: _achievementClient.EnableNotifications(true); And then poll to see if any skills have been recieved. EvaluationNotification notification; if(_achievementClient.TryGetPendingNotification(out notification)) { // There was a penging achievement notification, so do something with it Log.Info($\"Got achievement notification: {notification.Name} \" + $\"with progress: {notification.Progress}\"); } Requesting specific achievement progress using the <xref:PlayGen.SUGAR.Client.AchievementClient> and specifying the GameId, ActorId and Token, returns an <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse> object for that Actor's progress towards the achievement in that game. private float CheckAchievementProgress() { // Check the user's progress towards the achievements in the specified game var achievementProgressResponse = _achievementClient.GetAchievementProgress ( \"slay_10_enemies\", _gameId, _userId ); // Output the progress return achivementProgressResponse.Progress; } Roadmap Portable achievement system. Many game networks such as the Google play services, Apple gamkits, Microsoft game centre, Facebook game services and Steam Works offer achievements. Integrating multiple achievement systems into a game is time consuming. Additionally platform providers regularly update their APIs, creating a head-ache for keeping up-to-date with multiple systems. The achievement system will provide the ability for the actors’ achievement to be recorded automatically against other 3rd party systems. Challenge system. Achievement system will be extended by adding temporal (time based) and ownership component. This extension will be referred to as Challenge. Challenges may be seen as achievements that can be suggested to actors, gifted by one actor to another, accepted or rejected by an actor, as well as tracked to see if actors attempted or abandoned them."
  },
  "features/actor.html": {
    "href": "features/actor.html",
    "title": "Actor | SUGAR",
    "keywords": "Actor An Actor can represent a Users or a Group . Where the term Actor is used, one may substitute User or Group."
  },
  "features/evaluationData.html": {
    "href": "features/evaluationData.html",
    "title": "EvaluationData | SUGAR",
    "keywords": "EvaluationData EvaluationData is a storage system, following a key-value structure. It is used by SUGAR features and provides flexibility in providing custom game-specific storage solutions. EvaluationData provides storage for Achievement , Skills , Resources , Matches and GameData . EvaluationData is queried by Achievement , Leaderboard and Skills in their evaluations."
  },
  "features/feature_overview.html": {
    "href": "features/feature_overview.html",
    "title": "Feature Overview | SUGAR",
    "keywords": "Feature Overview This section provides detailed description of SUGAR’s features. The high level features of SUGAR in the current version (July 2016) can be grouped under : Game : Individual instance of application. Actor : Individuals or groups using the system. User : Individual user of the system. Group : Group of actors. Relationship : Connections between two or more actors. Achievement : Tasks accomplishable by actors, either binary or incrementally. Skill : Represent a players proficiency or ability. Leaderboard : Comparison of measurements between actors, resources, skills. EvaluationData : Storage system for game and system objects. GameData : Game specific data storage. Resource : Transferable and consumable item storage. Matches : Matches and match specific data storage. Roadmap See Roadmap for new features being implemented for future releases."
  },
  "features/game.html": {
    "href": "features/game.html",
    "title": "Game | SUGAR",
    "keywords": "Game A game is an individual application as defined by the platform. A single instance of the platform has the capacity to service multiple games. This allows for users to take part in multiple of games under the same login and to potentially share resource across games depending on the game design. Features CRUD Game CRUD Game Metadata Game Name Game Description Game Skills (Skills) Search Game (ID/Name/Actor) API Client <xref:PlayGen.SUGAR.Client.GameClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.GameRequest> <xref:PlayGen.SUGAR.Contracts.Shared.GameResponse> Examples Create a game Creating a game using the <xref:PlayGen.SUGAR.Client.GameClient>'s Create function, passing a <xref:PlayGen.SUGAR.Contracts.Shared.GameRequest> object as the parameter. This example will be used to create a game with the name \"Thrones\" and store its Id from the returned <xref:PlayGen.SUGAR.Contracts.Shared.GameResponse>. public SUGARClient sugarClient = new SUGARClient(BaseUri); private GameClient _gameClient; private int _gameId; private void CreateGame() { // create instance of the game client _gameClient = sugarClient.Game; // create a GameRequest var gameRequest = new GameRequest { Name = \"Thrones\" }; // create the game and store the response var gameResponse = _gameClient.Create(gameRequest); // store the id of the game for use in other features _gameId = gameResponse.Id; } Retreiving a game Checking if a Game exists or storing the id of the Game prior to allowing the user to play may be vital. This is done using <xref:PlayGen.SUGAR.Client.GameClient>'s Get function and passing the name of the game to match. private int CheckGame() { // check for the game and store the responses var gameResponses = _gameClient.Get(\"Thrones\"); int id = -1; foreach (response in gameResponses) { // check if the name matches the desired game exactly if (response.Name == \"Thrones\") { // store the game's id id = response.Id; } } return id; }"
  },
  "features/gameData.html": {
    "href": "features/gameData.html",
    "title": "GameData | SUGAR",
    "keywords": "GameData GameData provides a method of recording and querying key value pairs of data specific to a certain Game and optional Actor . Features CRUD Resources Search Resources (ID/Name/Actor/Relationship) Gift resource from one actor to another Features CRD GameData Search GameData (by ID/Game/Actor/Skill) GameData Categories General Data - All information that does not fit into any other category. Example - A Users gaining 10 points in level 2. Resources - Long-only data which can be transferred to and from Actor within the system. Example - A user collecting 10 gold, a consumable item within the game. Achievements - Stored completion of all <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> for an achievement. Example - A user meeting the criteria for the achievement \"Score 10,000 points\" in a game. Skills - Stored completion of all <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> for an skill. Example - A user meeting the criteria for the \"Social\" skill in a game. API Client <xref:PlayGen.SUGAR.Client.GameDataClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationDataRequest> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationDataResponse> <xref:PlayGen.SUGAR.Common.Shared.CriteriaQueryType> Examples Submitting custom GameData Custom GameData is submitted using the <xref:PlayGen.SUGAR.Client.GameDataClient>'s Add function with a <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationDataRequest> as the parameter. This explains how to track the number of dragon eggs hatched by the user, specifying \"EggHatched\" as the key. public SUGARClient sugarClient = new SUGARClient(BaseUri); private GameDataClient _gameDataClient; private int _gameId; private int _userId; private void OnEggHatched() { // create instance of GameDataClient var gameDataClient = sugarClient.GameData; // create GameDataRequest var gameDataRequest = new GameDataRequest() { GameId = _gameId, ActorId = _userId, GameDataType = GameDataType.Long, Value = \"1\", Key = \"EggHatched\" }; // add the GameData gameDataClient.Add(gameDataRequest); } Querying for GameData GameData is retreived using the <xref:PlayGen.SUGAR.Client.GameDataClient>'s Get function with the ActorId and GameId you want to query as parameters. The parameters also takes a list of keys you want to find entries for in gameData. This example shows how to retrieve the user's \"EggHatched\" <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationDataResponse> objects and count them. private long GetEggsHatched() { // add the GameData var gameDataResponses = gameDataClient.Get ( _actorId, _gameId, new string[] { \"EggHatched\" } ); long totalClicks = 0; // count values from each GameDataResponse foreach (var response in gameDataResponses) { totalClicks += long.Parse(response.Value); } return totalClicks; }"
  },
  "features/group.html": {
    "href": "features/group.html",
    "title": "Group | SUGAR",
    "keywords": "Group Groups are actors representing collection of actors. They may be individual or multiple game persistent. Groups can be moderated through administrator tools or users, or set up and managed through the game as described by the game designers. Relationships describe which actors belong to which groups. Groups can have associated achievements, which can be set for all members of a group to complete. Actors can join, leave or add another actor to a group. Features CRUD Groups CRUD Group Metadata Group Name Group Description Group Icon Update Group Membership Search Group (ID/name/Actor) API Client <xref:PlayGen.SUGAR.Client.GroupClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.ActorResponse> <xref:PlayGen.SUGAR.Contracts.Shared.ActorRequest> Examples Create a group This example will show how to create a group called \"Wildlings\" using the <xref:PlayGen.SUGAR.Client.GroupClient>'s Create function, passing an <xref:PlayGen.SUGAR.Contracts.Shared.ActorRequest> as the parameter and storing the group's id returned inside the <xref:PlayGen.SUGAR.Contracts.Shared.ActorResponse> object. public SUGARClient sugarClient = new SUGARClient(BaseUri); private GroupClient _groupClient; private int _groupId; private void CreateGroup() { // create instance of the game client _groupClient = sugarClient.Group; // create an ActorRequest var actorRequest = new ActorRequest { Name = \"Wildlings\" }; // create the group and store the response var actorResponse = _groupClient.Create(actorRequest); // store the id of the game for use in other functions _groupId = actorResponse.Id; } Retreiving a game Checking if a Group exists or finding the id of a Group may be desired functionalities. This is done using <xref:PlayGen.SUGAR.Client.GroupClient>'s Get function and passing the name of the group to match. private bool CheckGroupExists() { // check for the game and store the responses var actorResponses = _groupClient.Get(\"Wildlings\"); foreach (response in actorResponses) { // check if the name matches the desired game exactly if (response.Name == \"Wildlings\") { Console.WriteLine(\"Sorry, the group name has been taken, try another one\"); return false; } } return true; } Roadmap Groups Alliance. Provide the ability for relationship between groups. To form an <xref:alliance> Group leader. Providing the ability for individual actors to control the group membership, to add or remove other actors. Extended group achievements. Provide the ability to set the parameters such as number of actors required to meet the achievement criteria before it’s considered complete."
  },
  "features/leaderboard.html": {
    "href": "features/leaderboard.html",
    "title": "Leaderboard | SUGAR",
    "keywords": "Leaderboard Leaderboards provide a visual comparison tool for measurements of resources or objects associated with actors. A wide variety of leaderboards are supported including those based achievement or resource based on individual, group or single and multiple games. Leaderboards can utilise any GameData , Actor , Skill or Resource . Features Generate a leaderboard by: Game / Resource / Skill / Actor ActorType (Group, Player) Key (from GameData, Resource, Actor, Skill) Aggregation of values by: Frequency Summation Earliest/Latest occurrence Highest/Lowest overall occurrence Filter results by threshold values (e.g. top 20 or around current player's rank) or Relationships API Client <xref:PlayGen.SUGAR.Client.LeaderboardClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest> <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse> <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest> <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse> <xref:PlayGen.SUGAR.Common.Shared.LeaderboardType> <xref:PlayGen.SUGAR.Common.Shared.LeaderboardFilterType> <xref:PlayGen.SUGAR.Common.Shared.EvaluationDataType> <xref:PlayGen.SUGAR.Common.Shared.CriteriaScope> <xref:PlayGen.SUGAR.Common.Shared.ActorType> Examples Create a leaderboard This example shows how to create a leaderboard which will display the highest rankings for the combined total of kingdoms the players have conquered. This uses <xref:PlayGen.SUGAR.Client.LeaderboardClient>'s Create function, passing a <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardRequest> as the parameter. This request will specify the identifier token \"MOST_KINGDOMS_CONQUERED\", key for which to check in GameData \"KingdomsConquered\" and <xref:PlayGen.SUGAR.Common.Shared.LeaderboardType> Cumulative to add all the values of every entry matching the key. The code will then store the Token of the leaderboard from the <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardResponse> for later use. public SUGARClient sugarClient = new SUGARClient(BaseUri); private LeaderboardClient _leaderboardClient; private int _gameId; private string _leaderboardToken; private void CreateLeaderboard() { // create instance of the leaderboard client _leaderboardClient = sugarClient.Leaderboard; // create a LeaderboardRequest var leaderboardRequest = new LeaderboardRequest { GameId = _gameId, Name = \"Most Kingdoms Conquered\", Token = \"MOST_KINGDOMS_CONQUERED\", Key = \"KingdomsConquered\", ActorType = ActorType.User, GameDataType = GameDataType.Long, CriteriaScope = CriteriaScope.Actor, LeaderboardType = LeaderboardType.Cumulative }; // create the leaderboard and store the response var leaderboardResponse = _leaderboardClient.Create(leaderboardRequest); // store the token of the leaderboard for use in other functions _leaderboardToken = leaderboardResponse.Token; } Get standings for a leaderboard To display the leaderboard inside the game, the current standings of the leaderboard must be retreived. The <xref:PlayGen.SUGAR.Client.LeaderboardClient>'s CreateGetLeaderboardStandings function is called by passing a <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsRequest> object as the parameter, which specifies filters for the returned results. This example will retreive the 8 rankings nearest to the player by setting the <xref:PlayGen.SUGAR.Common.Shared.LeaderboardFilterType> to Near, the limit to 8 and offset as 0. The returned <xref:PlayGen.SUGAR.Contracts.Shared.LeaderboardStandingsResponse> contains all the data to populate the visual representation of the leaderboard. private void GetLeaderboardStadings() { // create a LeaderboardStandingsRequest var leaderboardStandingsRequest = new LeaderboardStandingsRequest { LeaderboardToken = _leaderboardToken, GameId = _gameId, ActorId = _userId, LeaderboardFilterType = LeaderboardFilterType.Near, PageLimit = 8, PageOffset = 0 }; // retreive the standings and store the responses var leaderboardStandingsResponse = _leaderboardClient.CreateGetLeaderboardStandings(leaderboardStandingReqeusts); // output the leaderboard foreach (var standing in leaderboardStandings) { Console.WriteLine(standing.Ranking.ToString() + \" | \" + standing.ActorName + \" | Conquered: \" + standing.Value); } }"
  },
  "features/match.html": {
    "href": "features/match.html",
    "title": "Matches | SUGAR",
    "keywords": "Matches A match is an entity with a start time, end time, game and creator. It can have various data attrubuted to it via the MatchData mechanism. Features CRUD Match Search Matches with filters: game, creator, start time, end time Add and Get Match specific data API Client <xref:PlayGen.SUGAR.Client.MatchClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.MatchResponse> WebAPI <xref:PlayGen.SUGAR.WebAPI.Controllers.MatchController> Examples Create a match public SUGARClient sugarClient = new SUGARClient(BaseUri); private MatchClient _matchClient; private int _gameId; private void CreateMatch() { // create instance of the match client _matchClient = sugarClient.Match; // create the match and store the response var matchResponse = _matchClient.Create(); // store the id of the match for use in other features _matchId = matchResponse.Id; } Starting a match private MatchResponse StartMatch(int matchId) { // check for the match and store the response var matchResponse = _matchClient.Get(matchId); // Start the match matchResponse = _matchClient?.Start(matchResponse.Id); return matchResponse: } Ending a match private MatchResponse EndMatch(int matchId) { // check for the match and store the response var matchResponse = _matchClient.Get(matchId); // End the match matchResponse = _matchClient?.End(matchResponse.Id); return matchResponse: } Adding match data private EvaluationDataResponse AddMatchData(int matchId, int userId) { var matchResponse = _matchClient.Get(matchId); var matchData = SUGARClient.Match.AddData(new EvaluationDataRequest { RelatedEntityId = matchResponse.Id, GameId = matchResponse.Game.Id, CreatingActorId = userId, EvaluationDataType = EvaluationDataType.Long, Key = \"MyMatchScore\", Value = 100 }); return matchData: } Getting match data private EvaluationDataResponse GetAllMatchData(int matchId) { var matchResponse = _matchClient.Get(matchId); var allDataForMatch = SUGARClient.Match.GetData(matchId); return allDataForMatch: }"
  },
  "features/relationship.html": {
    "href": "features/relationship.html",
    "title": "Relationship | SUGAR",
    "keywords": "Relationship Relationships are connections between two or more entities. For example a user belonging to a group or a user being friends or following another user. Relationships may follow a step by step process depending on the use case, for example in adding a ‘friend’, the relationship is initially stored as a request from the requester to the receiver until accepted by the receiver. Whereas the receiver may also refuse or block the request. Features CRUD Relationship CRUD Relationship request Search Relationship (ID/Actor) API Client <xref:PlayGen.SUGAR.Client.GroupMemberClient> <xref:PlayGen.SUGAR.Client.UserFriendClient> Contracts <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate> <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipRequest> <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipResponse> <xref:PlayGen.SUGAR.Contracts.Shared.ActorResponse> Examples Adding a User to a Group A Group can be joined by an actor. This will create a user to group relationship request. In this example, we will set the AutoAccept property in the <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipRequest> object to true, so the relationship will be stored directly as a user to group relationship. The joined group's id is then extracted from the <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipResponse>. public SUGARClient sugarClient = new SUGARClient(BaseUri); private GroupMemberClient _groupMemberClient; private int _userId; private int _groupId; private void JoinGroup(int groupId) { // create instance of the group member client _groupMemberClient = sugarClient.GroupMember; // create a RelationshipRequest var relationshipRequest = new RelationshipRequest { AcceptorId = groupId, RequestorId = _userId, AutoAccept = true }; // create the member request and store the response var relationshipResponse = _groupMemberClient.CreateMemberRequest(relationshipRequest); // store the id of the group for use in other functions _groupId = relationshipResponse.AcceptorId; } Leaving a group A user to group relationship status can be updated using a <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate> with the <xref:PlayGen.SUGAR.Client.GroupMemberClient>'s UpdateMember function. This example shows the user leaving the group joined in the previous example. Calling the function automatically breaks the relationship between the group and player if there is one, without the need of passing the additional Accepted property in the RelationshipStatusUpdate. private void LeaveGroup() { // create a RelationshipStatusUpdate var relationshipStatusUpdate = new RelationshipStatusUpdate { AcceptorId = _groupId, RequestorId = _userId }; // create the member request and store the response _groupMemberClient.UpdateMember(relationshipStatusUpdate); } Adding a friend Works identically to joining a group, except creating user to user relationships and using the <xref:PlayGen.SUGAR.Client.UserFriendClient>. public SUGARClient sugarClient = new SUGARClient(BaseUri); private UserFriendClient _userFriendClient; private int _userId; private int _friendId; private void JoinGroup(int targetUserId) { // create instance of the user friend client _userFriendClient = sugarClient.UserFriend; // create a RelationshipRequest var relationshipRequest = new RelationshipRequest { AcceptorId = targetUserId, RequestorId = _userId, AutoAccept = true }; // create the friend request and store the response var relationshipResponse = _userFriendClient.CreateFriendRequest(relationshipRequest); // store the id of the group for use in other functions _friendId = relationshipResponse.AcceptorId; } Removing a friend Like leaving a group, removing a friend updates the user to user relationship using a <xref:PlayGen.SUGAR.Contracts.Shared.RelationshipStatusUpdate> with <xref:PlayGen.SUGAR.Client.UserFriendClient>'s UpdateFriend function. private void RemoveFriend() { // create a RelationshipStatusUpdate var relationshipStatusUpdate = new RelationshipStatusUpdate { AcceptorId = _friendId, RequestorId = _userId, Accepted = true }; // create the member request and store the response _userFriendClient.UpdateFriend(relationshipStatusUpdate); } Roadmap Relationship between two groups, creating an <xref:alliance>"
  },
  "features/resource.html": {
    "href": "features/resource.html",
    "title": "Resources | SUGAR",
    "keywords": "Resources Resources provide a flexible set of game objects which may be associated with actors. Resources may represent or track such objects as scores, experience points, in-game currency or in-game items. They may be earned, spent, gifted or otherwise associated. Resource provide the ability for inventories to be assigned to individual or group actors. Resources are game objects which are obtained and exchanged by players. They may be consumable or permanent. Examples of resources include in-game currency, items, gifts and tools. A resource can be set to exist outside a game instance, allowing exchanges from external social platforms. Modulation of resources is handled by the EvaluationData system. Resources can belong to a group, where it becomes shared by all members of that group. Features CRUD Resources Search Resources (ID/Name/Actor/Relationship) Gift resource from one actor to another API Client ResourceClient Contracts ResourceAddRequest ResourceResponse ResourceTransferRequest ResourceTransferResponse WebAPI ResourceController Examples Creating a resource The ResourceClient has an AddOrUpdate function which adds a new resource entry belonging to the user into GameData or automatically updates an existing one if a duplicate entry was to be made. The function takes a ResourceAddRequest parameter and returns a ResourceResponse . This example will show how to both add a new entry or increment a player's amount of Valyrian steel. This is done by specifying the key \"ValyrianSteel\" which will be added with a value matching the quantity to GameData. If the entry already exists, it will add the quantity to its value (or subtract if the quantity is negative). public SUGARClient sugarClient = new SUGARClient(BaseUri); private ResourceClient _resourceClient; private int _gameId; private int _userId; private void AddOrUpdateResource(int quantity) { // create instance of the resource client _resourceClient = sugarClient.Resource; // create a ResourceAddRequest var resourceAddRequest = new ResourceAddRequest { GameId = _gameId, ActorId = _userId, Key = \"ValyrianSteel\", Quantity = quantity }; // Add the resource or update an existing key _resourceClient.AddOrUpdate(resourceAddRequest); } Transfer a resource This example will show how to give Valryian to another player. The ResourceClient 's Transfer function handles this taking a ResourceTransferRequest parameter and returning a ResourceTransferResponse object. When the transfer is made, it adds the resource quantity to the target user, and subtracts it from the source user. private void TransferResource(int quantity, int targetUser) { // create a ResourceTransferRequest var resourceTransferRequest = new ResourceTransferRequest { GameId = _gameId, SenderActorId = _userId, RecipientActorId = targetUser, Key = \"ValyrianSteel\", Quantity = quantity, }; // transfer the resources from the user to the target _resourceClient.Transfer(resourceTransferRequest); } Roadmap Read/write access management for group resources Extended permissions. Proving mechanism to set ownership, and control of usage access. For example a player may own an item in the game which they can ‘lend’ to another player to use for a period, without the other player owning it. *Extended metadata. Providing mechanism to record additional metadata against resources such as being able to rate them or track a history of owners or uses. *Tradable resources Providing mechanism for actors to trade and exchange resource, including management of agreement by multiple parties through escrow system."
  },
  "features/skill.html": {
    "href": "features/skill.html",
    "title": "Skills | SUGAR",
    "keywords": "Skills Skills represent a players proficiency or ability. SUGAR allows the game designer to define and track which skills the game is designed to teach. Such a skill is globally defined with a game-specific criteria. The criteria checks the GameData table for occurrences that serve as evidence of that skill's demonstration. Note Both Skills and Achievements build on \"Evaluations\" which may contain a multitude of \"EvaluationCriteria\", specifiying the conditions that need to be satisfied for this specific Evaluation to be considered complete. Features Get all skills Get all skills that match a name/id Get all skills associated with a particular game Get a player's performance of a particular skill Can be global or game-specific CRUD Skill CRUD Skill Metadata Search Skill (ID/name/metadata/Actor) API Client <xref:PlayGen.SUGAR.Client.SkillClient> Contracts <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationCreateRequest> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationUpdateRequest> <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationResponse> <xref:PlayGen.SUGAR.Common.Shared.EvaluationDataType> <xref:PlayGen.SUGAR.Common.Shared.CriteriaQueryType> <xref:PlayGen.SUGAR.Common.Shared.ComparisonType> <xref:PlayGen.SUGAR.Common.Shared.ActorType> <xref:PlayGen.SUGAR.Common.Shared.CriteriaScope> WebAPI <xref:PlayGen.SUGAR.WebAPI.Controllers.SkillsController> Examples Create a skill Skills work identically to Achievements , utilising the same contracts and GameData . This example shows how to set up the Swordsmanship skill for a game. The skill has an [<xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> specifying the value and ComparisonType to determine at which point the skill has been learnt, key \"Swordsmanship\" and CriteriaQueryType to sum all GameData entry values matching the key. public SUGARClient sugarClient = new SUGARClient(BaseUri); private SkillClient _skillClient; private int _gameId; private void SetUpSkill() { // create instance of the achievement client _skillClient = sugarClient.Skill; // create an EvaluationCriteria list var EvaluationCriteria = new List<EvaluationCriteria>() { new EvaluationCriteria() { DataType = GameDataType.Long, Value = \"100\", Key = \"Swordsmanship\", CriteriaQueryType = CriteriaQueryType.Sum, ComparisonType = ComparisonType.GreaterOrEqual, Scope = CriteriaScope.Actor } }; // place the criteria inside an EvaluationCreateRequest var EvaluationCreateRequest = new EvaluationCreateRequest() { GameId = _gameId, Name = \"Swordsmanship Skill!\", ActorType = ActorType.User, Token = \"swordsmanship\", CompletionCriteria = EvaluationCriteria }; // create the skill _skillClient.Create(EvaluationCreateRequest); } Submitting data for when somthing which may be used to evaluate progress towards a Skill A skill uses keys in GameData that match its <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria>. This data is submitted at points in the game which demonstrate progress towards the skill (as well as other uses). private void SwingSword() { // *Sword Swinging Code* // // create instance of GameDataClient var gameDataClient = sugarClient.GameData; // create GameDataRequest var gameDataRequest = new GameDataRequest() { GameId = _gameId, ActorId = _userId, GameDataType = GameDataType.Long, Value = \"1\", Key = \"Swordsmanship\" }; // add the GameData gameDataClient.Add(gameDataRequest); } Automatically recieve skill progress completion notifications: Enable and use automatic notifications: _skillClient.EnableNotifications(true); And then poll to see if any achievements have been recieved. EvaluationNotification notification; if(_skillClient.TryGetPendingNotification(out notification)) { // There was a penging skill notification, so do something with it Log.Info($\"Got skill notification: {notification.Name} \" + $\"with progress: {notification.Progress}\"); } Requesting specific using the SkillClient 's GetSkillProgress function and specifying the GameId, ActorId and Token returns an <xref:PlayGen.SUGAR.Contracts.Shared.EvaluationProgressResponse> object for that Actor's progress towards the skill in that game. private float CheckSkillProgress() { // Check the user's progress towards the achievements in the specified game var skillProgressResponse = _skillClient.GetSkillProgress ( \"swordsmanship\", _gameId, _userId ); // Output the progress return skillProgressResponse.Progress; }"
  },
  "features/user.html": {
    "href": "features/user.html",
    "title": "Users | SUGAR",
    "keywords": "Users Users are individuals interacting with the system. They may fulfil a range of roles including player, game master, game admin, teacher or system admin. Users can have metadata associated with them, such as nice name, profile image and bio. Features CRUD users Search users (name/id) CRUD user metadata User Name User Bio User profile icon API Client UserClient Contracts <xref:PlayGen.SUGAR.Common.Shared.EvaluationCriteria> AchievementProgressResponse ActorRequest ActorResponse WebAPI UserController Roadmap Integration of permission system. Providing the ability to set system or game specific permission across the platform functionalities. User id mapping. Providing the ability for an individual to have multiple usernames depending on their role, or connect with one or more social media accounts for example for authentication."
  },
  "features/admin/achievement.html": {
    "href": "features/admin/achievement.html",
    "title": "Achievement | SUGAR",
    "keywords": "Achievement For more information on achievements view the documentation The achievements page controls the achievements for a given game and global achievements by selecting from a list of games or the global achievements option After selecting a platform the admin can: Create a new achievement Delete an existing achievement Create a new achievement By selecting \"Create New Achievement\" a new page will be opened including all the fields needed for an achievement, achievements can have multiple criterias added using the \"Add Criteria\" and \"Remove Criteria\" buttons at the bottom of the screen to control the number required. Delete an existing achievement Delete button will delete the selected achievement from the table"
  },
  "features/admin/game.html": {
    "href": "features/admin/game.html",
    "title": "Games | SUGAR",
    "keywords": "Games For more information on games view the documentation The games screen allows the admin to do the following actions: Create new games Delete current games Create new games The admin can create new games by selecting the \"Create New Game\" button which will prompt admins to add a game with a name and a description, the new game will be added to the table in alphabetical order. Delete current games Delete button will delete the selected game from the table"
  },
  "features/admin/group.html": {
    "href": "features/admin/group.html",
    "title": "Groups | SUGAR",
    "keywords": "Groups For more information on games view the documentation The groups page allows admins to do the following actions: Create new groups Manage group members Delete groups Create new groups The admin can create new groups by using the \"Create new Group\" button, this will prompt a popup requesting a group name and group description to be entered for the new group, once created the group will be added to the table in alpgabetical order. Manage group members Each group can have members, the number of members currently within the group are shown on the groups page, by selecting the \"Members\" button, the admin can view the users currently in the group, remove them by selecting the remove button or add new members to the group by entering the users name into the prompt shown Delete groups Delete button will delete the selected group from the table"
  },
  "features/admin/index.html": {
    "href": "features/admin/index.html",
    "title": "Admin Interface | SUGAR",
    "keywords": "Admin Interface The admin panel contains pages that can be used to manage games using the SUGAR engine by giving admins access to features that they can add, remove or edit Navigation between the pages in the admin panel can be seen in the Site Map"
  },
  "features/admin/leaderboard.html": {
    "href": "features/admin/leaderboard.html",
    "title": "Leaderboard | SUGAR",
    "keywords": "Leaderboard For more information on leaderboards view the documentation The leaderboards page prompts the admin to select a platform from the list of games or global leaderboards, once a platform has been selected, the user is shown the list of leaderboards that are already associated with that platform, from here the admin can: View a leaderboard Create a new leaderboard Delete a leaderboard configuration View a leaderboard If the table of leaderboards for the selected platform is not empty, selecting an existing leaderboard in the table will launch the list of actors and their standings Create a new leaderboard By selecting the \"Create New Leaderboard\" button, the admin is directed to add the required fields for a new leaderboard, including; leaderboard name, a unique token used for accessing the leaderboard outside of the admin panel, the actor type, the type of game data that is being tracked and the order the leaderboard should be shown in Delete a leaderboard configuration Delete button will delete the selected leaderboard from the table"
  },
  "features/admin/Login.html": {
    "href": "features/admin/Login.html",
    "title": "Login Screen | SUGAR",
    "keywords": "Login Screen By entering an account name and password, an admin panel user can: Sign in Register a new account Sign in If an account already exists, use the log in details and select the \"Sign In\" button, if successful the main page will be shown. Register a new account To register a new account, add Name and Password details to the login box and select \"Register\", the details will then be varified and if the admin is successfully registered, they will be redirected to the main page Main Page After successfully signing in to a new or existing account, the main page is shown, from which there is access to the rest of the admin panel as shown in the Site Map along with the option to log out in the top right of the screen. The navigation bar at the top of the screen will persisit through pages whilst logged in."
  },
  "features/admin/resource.html": {
    "href": "features/admin/resource.html",
    "title": "Resources | SUGAR",
    "keywords": "Resources For more information on resources view the documentation The resources page controls the resources for a given game and global resources After selecting a platform the admin has two options: Manage available resources Manage resources for users and groups Manage available resources The managing resources screen shows the resources assosiated with the selected platform, with the ability to add new resources or remove existing resources from the platform. Creating Resources Creating resources will show a prompt requesting the admin to enter the data related to the resource Deleting Resources Delete button will delete the selected resource from the table Manage resources for users and groups Users and groups can have a number of resources associated with a platform, this page allows admins to switch between user and group tables to manage resources of a selected actor, by selecting an actor the admin will be shown a list of the resources for the platform and the value the actor currently has for the given resource, using the text entry box, the admin can update values in the table."
  },
  "features/admin/SiteMap.html": {
    "href": "features/admin/SiteMap.html",
    "title": "Site Map | SUGAR",
    "keywords": "Site Map The site map below outlines the navigation of pages in the admin panel and the interactions that can be made on each page"
  },
  "features/admin/skill.html": {
    "href": "features/admin/skill.html",
    "title": "Skills | SUGAR",
    "keywords": "Skills For more information on skills view the documentation The skills page controls the skills for a given game and global skills by selecting from a list of games or the global skills option After selecting a platform the admin can: Create new skills Delete an existing skill Create new skills By selecting \"Create New Skill\" a new page will be opened including all the fields needed for a skill, skills can have multiple criterias added using the \"Add Criteria\" and \"Remove Criteria\" buttons at the bottom of the screen to control the number required. Delete an existing skill Delete button will delete the selected skill from the table"
  },
  "api/PlayGen.SUGAR.Client.Tests.AsyncRequestControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.AsyncRequestControllerTests.html",
    "title": "Class AsyncRequestControllerTests | SUGAR",
    "keywords": "Class AsyncRequestControllerTests Inheritance System.Object ClientTestBase AsyncRequestControllerTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class AsyncRequestControllerTests : ClientTestBase Constructors AsyncRequestControllerTests(ClientTestsFixture) Declaration public AsyncRequestControllerTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods DoesTimeoutAction() Declaration [Fact] public void DoesTimeoutAction() ErrorsTriggerOnErrorCallbacks() Declaration [Fact] public void ErrorsTriggerOnErrorCallbacks() ValueRequestsTriggerOnSuccessCallbacks() Declaration [Fact] public void ValueRequestsTriggerOnSuccessCallbacks() VoidRequestsTriggerOnSuccessCallbacks() Declaration [Fact] public void VoidRequestsTriggerOnSuccessCallbacks()"
  },
  "api/PlayGen.SUGAR.Client.Tests.ClientTestBase.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.ClientTestBase.html",
    "title": "Class ClientTestBase | SUGAR",
    "keywords": "Class ClientTestBase Inheritance System.Object ClientTestBase AccountClientTests APIVersionTests AsyncRequestControllerTests EvaluationClientTests GameClientTests GameDataClientTests GroupClientTests GroupMemberClientTests LeaderboardClientTests MatchClientTests ResourceClientTests SessionClientTests UserClientTests UserFriendClientTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax [Collection(\"ClientTestsFixture\")] public class ClientTestBase Constructors ClientTestBase(ClientTestsFixture) Declaration public ClientTestBase(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Fields Fixture Declaration protected readonly ClientTestsFixture Fixture Field Value Type Description ClientTestsFixture"
  },
  "api/PlayGen.SUGAR.Client.Tests.GameClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.GameClientTests.html",
    "title": "Class GameClientTests | SUGAR",
    "keywords": "Class GameClientTests Inheritance System.Object ClientTestBase GameClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class GameClientTests : ClientTestBase Constructors GameClientTests(ClientTestsFixture) Declaration public GameClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanGetGameById() Declaration [Fact] public void CanGetGameById() CanGetGamesByName() Declaration [Fact] public void CanGetGamesByName() CannotGetGameByEmptyName() Declaration [Fact] public void CannotGetGameByEmptyName() CannotGetNotExistingGameById() Declaration [Fact] public void CannotGetNotExistingGameById() CannotGetNotExistingGameByName() Declaration [Fact] public void CannotGetNotExistingGameByName()"
  },
  "api/PlayGen.SUGAR.Client.Tests.Helpers.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.Helpers.html",
    "title": "Class Helpers | SUGAR",
    "keywords": "Class Helpers Inheritance System.Object Helpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public static class Helpers Methods CreateAndLoginGlobal(SUGARClient, String) Declaration public static AccountResponse CreateAndLoginGlobal(SUGARClient client, string userName) Parameters Type Name Description SUGARClient client System.String userName Returns Type Description AccountResponse GetGame(GameClient, String) Declaration public static GameResponse GetGame(GameClient gameClient, string name) Parameters Type Name Description GameClient gameClient System.String name Returns Type Description GameResponse Login(SUGARClient, String, String, out GameResponse, out AccountResponse) Declaration public static void Login(SUGARClient client, string gameName, string userKey, out GameResponse game, out AccountResponse user) Parameters Type Name Description SUGARClient client System.String gameName System.String userKey GameResponse game AccountResponse user"
  },
  "api/PlayGen.SUGAR.Client.Tests.MatchClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.MatchClientTests.html",
    "title": "Class MatchClientTests | SUGAR",
    "keywords": "Class MatchClientTests Inheritance System.Object ClientTestBase MatchClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class MatchClientTests : ClientTestBase Constructors MatchClientTests(ClientTestsFixture) Declaration public MatchClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture"
  },
  "api/PlayGen.SUGAR.Client.Tests.SessionClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.SessionClientTests.html",
    "title": "Class SessionClientTests | SUGAR",
    "keywords": "Class SessionClientTests Inheritance System.Object ClientTestBase SessionClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class SessionClientTests : ClientTestBase Constructors SessionClientTests(ClientTestsFixture) Declaration public SessionClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanCreateNewUserAndLogin() Declaration [Fact] public void CanCreateNewUserAndLogin() CanHeartbeatAndReissueToken() Declaration [Fact] public void CanHeartbeatAndReissueToken() CanLoginUser() Declaration [Fact] public void CanLoginUser() CanLoginUserAsync() Declaration [Fact] public void CanLoginUserAsync() CanLogoutAndInvalidateSessionClass() Declaration [Fact] public void CanLogoutAndInvalidateSessionClass() CanLogoutAndInvalidateSessionMethod() Declaration [Fact] public void CanLogoutAndInvalidateSessionMethod() CannotLoginInvalidUser() Declaration [Fact] public void CannotLoginInvalidUser() NewTokenForUserLogin() Declaration [Fact] public void NewTokenForUserLogin()"
  },
  "api/PlayGen.SUGAR.Client.Tests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.html",
    "title": "Namespace PlayGen.SUGAR.Client.Tests | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Client.Tests Classes AccountClientTests AchievementClientTests APIVersionTests AsyncRequestControllerTests ClientTestBase ClientTestsFixture ClientTestsFixtureCollection EvaluationClientTests GameClientTests GameDataClientTests GroupClientTests GroupMemberClientTests Helpers HttpClientHandler LeaderboardClientTests MatchClientTests ResourceClientTests SessionClientTests SkillClientTests UserClientTests UserFriendClientTests"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Extensions.AuthorizationTokenExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Extensions.AuthorizationTokenExtensions.html",
    "title": "Class AuthorizationTokenExtensions | SUGAR",
    "keywords": "Class AuthorizationTokenExtensions Inheritance System.Object AuthorizationTokenExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication.Extensions Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public static class AuthorizationTokenExtensions Methods GetClaimDateTime(IHeaderDictionary, String) Declaration public static DateTime GetClaimDateTime(this IHeaderDictionary headers, string type) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.String type Returns Type Description System.DateTime GetClaimInt(IHeaderDictionary, String) Declaration public static int GetClaimInt(this IHeaderDictionary headers, string type) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.String type Returns Type Description System.Int32 GetClaimLong(IHeaderDictionary, String) Declaration public static long GetClaimLong(this IHeaderDictionary headers, string type) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.String type Returns Type Description System.Int64 TryGetClaim(IHeaderDictionary, String, out DateTime) Declaration public static bool TryGetClaim(this IHeaderDictionary headers, string type, out DateTime value) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.String type System.DateTime value Returns Type Description System.Boolean TryGetClaim(IHeaderDictionary, String, out Int32) Declaration public static bool TryGetClaim(this IHeaderDictionary headers, string type, out int value) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.String type System.Int32 value Returns Type Description System.Boolean TryGetClaim(IHeaderDictionary, String, out Int64) Declaration public static bool TryGetClaim(this IHeaderDictionary headers, string type, out long value) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.String type System.Int64 value Returns Type Description System.Boolean"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Helpers.JWTSerializationAdapter.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Helpers.JWTSerializationAdapter.html",
    "title": "Class JWTSerializationAdapter | SUGAR",
    "keywords": "Class JWTSerializationAdapter Inheritance System.Object Newtonsoft.Json.JsonSerializer JWTSerializationAdapter Inherited Members Newtonsoft.Json.JsonSerializer.Create() Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings) Newtonsoft.Json.JsonSerializer.CreateDefault() Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings) Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, System.Object) Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, System.Object) Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader) Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type) Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader) Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type) Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, System.Object) Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, System.Object, System.Type) Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, System.Object, System.Type) Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, System.Object) Newtonsoft.Json.JsonSerializer.ReferenceResolver Newtonsoft.Json.JsonSerializer.Binder Newtonsoft.Json.JsonSerializer.TraceWriter Newtonsoft.Json.JsonSerializer.EqualityComparer Newtonsoft.Json.JsonSerializer.TypeNameHandling Newtonsoft.Json.JsonSerializer.TypeNameAssemblyFormat Newtonsoft.Json.JsonSerializer.PreserveReferencesHandling Newtonsoft.Json.JsonSerializer.ReferenceLoopHandling Newtonsoft.Json.JsonSerializer.MissingMemberHandling Newtonsoft.Json.JsonSerializer.NullValueHandling Newtonsoft.Json.JsonSerializer.DefaultValueHandling Newtonsoft.Json.JsonSerializer.ObjectCreationHandling Newtonsoft.Json.JsonSerializer.ConstructorHandling Newtonsoft.Json.JsonSerializer.MetadataPropertyHandling Newtonsoft.Json.JsonSerializer.Converters Newtonsoft.Json.JsonSerializer.ContractResolver Newtonsoft.Json.JsonSerializer.Context Newtonsoft.Json.JsonSerializer.Formatting Newtonsoft.Json.JsonSerializer.DateFormatHandling Newtonsoft.Json.JsonSerializer.DateTimeZoneHandling Newtonsoft.Json.JsonSerializer.DateParseHandling Newtonsoft.Json.JsonSerializer.FloatParseHandling Newtonsoft.Json.JsonSerializer.FloatFormatHandling Newtonsoft.Json.JsonSerializer.StringEscapeHandling Newtonsoft.Json.JsonSerializer.DateFormatString Newtonsoft.Json.JsonSerializer.Culture Newtonsoft.Json.JsonSerializer.MaxDepth Newtonsoft.Json.JsonSerializer.CheckAdditionalContent Newtonsoft.Json.JsonSerializer.Error System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication.Helpers Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public class JWTSerializationAdapter : JsonSerializer Methods Deserialize<T>(String) Declaration public T Deserialize<T>(string json) Parameters Type Name Description System.String json Returns Type Description T Type Parameters Name Description T Serialize(Object) Declaration public string Serialize(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.String"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Helpers.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Helpers.html",
    "title": "Namespace PlayGen.SUGAR.Server.Authentication.Helpers | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Authentication.Helpers Classes JWTSerializationAdapter"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.RoleClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.RoleClaimController.html",
    "title": "Class RoleClaimController | SUGAR",
    "keywords": "Class RoleClaimController Web Controller that facilitates RoleClaim specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller RoleClaimController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class RoleClaimController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors RoleClaimController(RoleClaimController, ClaimController, RoleController, ActorClaimController, IAuthorizationService) Declaration public RoleClaimController(RoleClaimController roleClaimCoreController, ClaimController claimController, RoleController roleController, ActorClaimController actorClaimController, IAuthorizationService authorizationService) Parameters Type Name Description RoleClaimController roleClaimCoreController ClaimController claimController RoleController roleController ActorClaimController actorClaimController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(RoleClaimRequest) Create a new RoleClaim. Example Usage: POST api/roleclaim Declaration [HttpPost] public Task<IActionResult> Create([FromBody] RoleClaimRequest newRoleClaim) Parameters Type Name Description RoleClaimRequest newRoleClaim object that contains the details of the new RoleClaim. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new RoleClaim details. Delete(Int32, Int32) Delete RoleClaim with the ID provided. Example Usage: DELETE api/roleclaim/role/1/claim/1 Declaration [HttpDelete(\"role/{roleId:int}/claim/{claimId:int}\")] public Task<IActionResult> Delete([FromRoute] int roleId, [FromRoute] int claimId) Parameters Type Name Description System.Int32 roleId Role ID. System.Int32 claimId Claim ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > GetRoleClaims(Int32) Get a list of all Claims for this Role. Example Usage: GET api/roleclaim/role/1 Declaration [HttpGet(\"role/{id:int}\")] public Task<IActionResult> GetRoleClaims([FromRoute] int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold Claim details. Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.RoleController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.RoleController.html",
    "title": "Class RoleController | SUGAR",
    "keywords": "Class RoleController Web Controller that facilitates Role specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller RoleController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class RoleController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors RoleController(RoleController, IAuthorizationService) Declaration public RoleController(RoleController roleCoreController, IAuthorizationService authorizationService) Parameters Type Name Description RoleController roleCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(RoleRequest) Create a new Role. Requires the to be unique. Example Usage: POST api/role Declaration [HttpPost] public Task<IActionResult> Create([FromBody] RoleRequest newRole) Parameters Type Name Description RoleRequest newRole object that contains the details of the new Role. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new Role details. Delete(Int32) Delete Role with the ID provided. Example Usage: DELETE api/role/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id Role ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get() Get a list of all Roles. Example Usage: GET api/role/list Declaration [HttpGet(\"list\")] public Task<IActionResult> Get() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold Role details. GetByScope(String) Get a list of all Roles for the scope with this name. Example Usage: GET api/role/scope/game Declaration [HttpGet(\"scope/{name}\")] public Task<IActionResult> GetByScope([FromRoute] string name) Parameters Type Name Description System.String name Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold Role details. GetDefaultForScope(String) Get default Role for the scope with this name. Example Usage: GET api/role/scopedefault/game Declaration [HttpGet(\"scopedefault/{name}\")] public Task<IActionResult> GetDefaultForScope([FromRoute] string name) Parameters Type Name Description System.String name Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A that holds Role details. Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.SessionController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.SessionController.html",
    "title": "Class SessionController | SUGAR",
    "keywords": "Class SessionController Web Controller that facilitates session specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller SessionController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api\")] public class SessionController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SessionController(AccountController, TokenController, SessionTracker) Declaration public SessionController(AccountController accountCoreController, TokenController tokenController, SessionTracker sessionTracker) Parameters Type Name Description AccountController accountCoreController TokenController tokenController SessionTracker sessionTracker Methods CreateAndLogin(AccountRequest) Creates a new account and login that account. Example Usage: POST api/createandloginplatform Declaration [HttpPost(\"createandloginplatform\")] public IActionResult CreateAndLogin([FromBody] AccountRequest accountRequest) Parameters Type Name Description AccountRequest accountRequest object that contains the account details provided. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A containing the Account details. CreateAndLogin(Int32, AccountRequest) Creates a new account and login that account. Example Usage: POST api/1/createandlogingame Declaration [HttpPost(\"{gameId:int}/createandlogingame\")] public IActionResult CreateAndLogin([FromRoute] int gameId, [FromBody] AccountRequest accountRequest) Parameters Type Name Description System.Int32 gameId Optional Id of the game the account is logging in for. AccountRequest accountRequest object that contains the account details provided. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A containing the Account details. Heartbeat() Heartbeat method to keep the specific session alive. Calling it within a server defined interval will notify the server that the session is still active. Declaration [HttpGet(\"heartbeat\")] [Authorize(\"Bearer\")] public IActionResult Heartbeat() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Login(AccountRequest) Logs in an account based on the name and password combination. Returns a JsonWebToken used for authorization in any further calls to the API. Example Usage: POST api/loginplatform Declaration [HttpPost(\"loginplatform\")] public IActionResult Login([FromBody] AccountRequest accountRequest) Parameters Type Name Description AccountRequest accountRequest object that contains the account details provided. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A containing the Account details. Login(Int32, AccountRequest) Logs in an account based on the name and password combination. Returns a JsonWebToken used for authorization in any further calls to the API. Example Usage: POST api/1/logingame Declaration [HttpPost(\"{gameId:int}/logingame\")] public IActionResult Login([FromRoute] int gameId, [FromBody] AccountRequest accountRequest) Parameters Type Name Description System.Int32 gameId Optional Id of the game the account is logging in for. AccountRequest accountRequest object that contains the account details provided. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A containing the Account details. Logout() Logs out the currently logged in account, ending it's session and removing the authorization token. Declaration [HttpGet(\"logout\")] [Authorize(\"Bearer\")] public IActionResult Logout() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.SkillsController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.SkillsController.html",
    "title": "Class SkillsController | SUGAR",
    "keywords": "Class SkillsController Web Controller that facilitates Skill specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller EvaluationsController SkillsController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members EvaluationsController._authorizationService EvaluationsController.EvaluationCoreController EvaluationsController.Get(Int32, EvaluationType) EvaluationsController.GetEvaluationProgress(String, Int32, Int32) Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class SkillsController : EvaluationsController, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors SkillsController(EvaluationController, EvaluationTracker, IAuthorizationService) Declaration public SkillsController(EvaluationController evaluationCoreController, EvaluationTracker evaluationTracker, IAuthorizationService authorizationService) Parameters Type Name Description EvaluationController evaluationCoreController EvaluationTracker evaluationTracker Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(EvaluationCreateRequest) Create a new Skill. Requires to be unique to that . Example Usage: POST api/skills/create Declaration [HttpPost(\"create\")] public Task<IActionResult> Create([FromBody] EvaluationCreateRequest newSkill) Parameters Type Name Description EvaluationCreateRequest newSkill object that holds the details of the new Skill. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns a object containing details for the newly created Skill. Delete(String, Int32) Delete Skill with the and provided. Example Usage: DELETE api/skills/SKILL_TOKEN/1 Declaration [HttpDelete(\"{token}/global\")] [HttpDelete(\"{token}/{gameId:int}\")] public Task<IActionResult> Delete([FromRoute] string token, [FromRoute] int gameId) Parameters Type Name Description System.String token Token of Skill System.Int32 gameId ID of the Game the Skill is for Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get(Int32) Find a list of Skills that match . If global is provided instead of a gameId, get all global skills, ie. skills that are not associated with a specific game. Example Usage: GET api/skills/game/1/list Declaration [HttpGet(\"global/list\")] [HttpGet(\"game/{gameId:int}/list\")] public Task<IActionResult> Get([FromRoute] int gameId) Parameters Type Name Description System.Int32 gameId Game ID Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns multiple that hold Skill details Get(String, Int32) Find a Skill that matches and . Example Usage: GET api/skills/find/SKILL_TOKEN/1 Declaration [HttpGet(\"find/{token}/{gameId:int}\")] [HttpGet(\"find/{token}/global\")] public Task<IActionResult> Get([FromRoute] string token, [FromRoute] int gameId) Parameters Type Name Description System.String token Token of Skill System.Int32 gameId ID of the Game the Skill is for Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns that holds Skill details GetGameProgress(Int32, Int32) Find the current progress for all skills for a for . Example Usage: GET api/skills/game/1/evaluate/1 Declaration [HttpGet(\"game/{gameId:int}/evaluate/{actorId:int}\")] [HttpGet(\"global/evaluate/{actorId:int}\")] public IActionResult GetGameProgress([FromRoute] int gameId, [FromRoute] int actorId) Parameters Type Name Description System.Int32 gameId ID of Game System.Int32 actorId ID of Group/User Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns multiple that hold current progress toward skill. GetSkillProgress(String, Int32, Int32) Find the current progress for a Skill for . Example Usage: GET api/skills/SKILL_TOKEN/1/evaluate/1 Declaration [HttpGet(\"{token}/{gameId:int}/evaluate/{actorId:int}\")] [HttpGet(\"{token}/global/evaluate/{actorId:int}\")] public IActionResult GetSkillProgress([FromRoute] string token, [FromRoute] int gameId, [FromRoute] int actorId) Parameters Type Name Description System.String token Token of Skill System.Int32 gameId ID of the Game the Skill is for System.Int32 actorId ID of Group/User Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns multiple that hold current progress toward skill. Update(EvaluationUpdateRequest) Update an existing Skill. Example Usage: PUT api/skills/update Declaration [HttpPut(\"update\")] public Task<IActionResult> Update([FromBody] EvaluationUpdateRequest skill) Parameters Type Name Description EvaluationUpdateRequest skill object that holds the details of the Skill. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.UserController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.UserController.html",
    "title": "Class UserController | SUGAR",
    "keywords": "Class UserController Web Controller that facilitates User specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller UserController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class UserController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors UserController(UserController, IAuthorizationService) Declaration public UserController(UserController userCoreController, IAuthorizationService authorizationService) Parameters Type Name Description UserController userCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(UserRequest) Create a new User. Requires the 's Name to be unique for Users. Example Usage: POST api/user Declaration [HttpPost] public Task<IActionResult> Create([FromBody] UserRequest actor) Parameters Type Name Description UserRequest actor object that holds the details of the new User. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new User details. Delete(Int32) Delete user with the provided. Example Usage: DELETE api/user/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id User ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get() Get a list of all Users. Example Usage: GET api/user/list Declaration [HttpGet(\"list\")] public Task<IActionResult> Get() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold User details. Get(Int32) Get User that matches provided. Example Usage: GET api/user/findbyid/1 Declaration [HttpGet(\"findbyid/{id:int}\", Name = \"GetByUserId\")] public IActionResult Get([FromRoute] int id) Parameters Type Name Description System.Int32 id User id. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult which matches search criteria. Get(String, Boolean) Get a list of Users that match provided. Example Usage: GET api/user/find/user1 Declaration [HttpGet(\"find/{name}\")] [HttpGet(\"find/{name}/{exactMatch:bool}\")] public IActionResult Get([FromRoute] string name, bool exactMatch = false) Parameters Type Name Description System.String name User name. System.Boolean exactMatch Match the name exactly. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. Update(Int32, UserRequest) Update an existing User. Example Usage: PUT api/user/update/1 Declaration [HttpPut(\"update/{id:int}\")] public Task<IActionResult> Update([FromRoute] int id, [FromBody] UserRequest user) Parameters Type Name Description System.Int32 id Id of the existing User. UserRequest user object that holds the details of the User. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.UserFriendController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.UserFriendController.html",
    "title": "Class UserFriendController | SUGAR",
    "keywords": "Class UserFriendController Web Controller that facilitates User to User relationship specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller UserFriendController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class UserFriendController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors UserFriendController(RelationshipController, IAuthorizationService) Declaration public UserFriendController(RelationshipController relationshipCoreController, IAuthorizationService authorizationService) Parameters Type Name Description RelationshipController relationshipCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods CreateFriendRequest(RelationshipRequest) Create a new relationship request between two Users. Requires a relationship between the two to not already exist. Example Usage: POST api/userfriend Declaration [HttpPost] public Task<IActionResult> CreateFriendRequest([FromBody] RelationshipRequest relationship) Parameters Type Name Description RelationshipRequest relationship object that holds the details of the new relationship request. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new Relationship details. GetFriendRequests(Int32) Get a list of all Users that have relationship requests for this . Example Usage: GET api/userfriend/requests/1 Declaration [HttpGet(\"requests/{userId:int}\")] public Task<IActionResult> GetFriendRequests([FromRoute] int userId) Parameters Type Name Description System.Int32 userId ID of the group. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. GetFriends(Int32) Get a list of all Users that have relationships with this . Example Usage: GET api/userfriend/friends/1 Declaration [HttpGet(\"friends/{userId:int}\")] public IActionResult GetFriends([FromRoute] int userId) Parameters Type Name Description System.Int32 userId ID of the user. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. GetSentRequests(Int32) Get a list of all Users that have been sent relationship requests for this . Example Usage: GET api/userfriend/sentrequests/1 Declaration [HttpGet(\"sentrequests/{userId:int}\")] public Task<IActionResult> GetSentRequests([FromRoute] int userId) Parameters Type Name Description System.Int32 userId ID of the user. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. UpdateFriend(RelationshipStatusUpdate) Update an existing relationship between and . Requires the relationship to already exist between the two Users. Example Usage: PUT api/userfriend Declaration [HttpPut] public Task<IActionResult> UpdateFriend([FromBody] RelationshipStatusUpdate relationship) Parameters Type Name Description RelationshipStatusUpdate relationship object that holds the details of the relationship. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > UpdateFriendRequest(RelationshipStatusUpdate) Update an existing relationship request between and . Requires the relationship request to already exist between the two Users. Example Usage: PUT api/userfriend/request Declaration [HttpPut(\"request\")] public Task<IActionResult> UpdateFriendRequest([FromBody] RelationshipStatusUpdate relationship) Parameters Type Name Description RelationshipStatusUpdate relationship object that holds the details of the relationship. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.VersionController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.VersionController.html",
    "title": "Class VersionController | SUGAR",
    "keywords": "Class VersionController Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller VersionController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] public class VersionController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Methods Get() Declaration [HttpGet] public IActionResult Get() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RewardExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RewardExtensions.html",
    "title": "Class RewardExtensions | SUGAR",
    "keywords": "Class RewardExtensions Inheritance System.Object RewardExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class RewardExtensions Methods ToContract(Reward) Declaration public static RewardResponse ToContract(this Reward reward) Parameters Type Name Description Reward reward Returns Type Description RewardResponse ToContractList(List<Reward>) Declaration public static List<RewardResponse> ToContractList(this List<Reward> rewards) Parameters Type Name Description System.Collections.Generic.List < Reward > rewards Returns Type Description System.Collections.Generic.List < RewardResponse > ToModel(RewardCreateRequest) Declaration public static Reward ToModel(this RewardCreateRequest contract) Parameters Type Name Description RewardCreateRequest contract Returns Type Description Reward ToModel(RewardUpdateRequest) Declaration public static Reward ToModel(this RewardUpdateRequest contract) Parameters Type Name Description RewardUpdateRequest contract Returns Type Description Reward ToModelList(List<RewardCreateRequest>) Declaration public static List<Reward> ToModelList(this List<RewardCreateRequest> rewards) Parameters Type Name Description System.Collections.Generic.List < RewardCreateRequest > rewards Returns Type Description System.Collections.Generic.List < Reward > ToModelList(List<RewardUpdateRequest>) Declaration public static List<Reward> ToModelList(this List<RewardUpdateRequest> rewards) Parameters Type Name Description System.Collections.Generic.List < RewardUpdateRequest > rewards Returns Type Description System.Collections.Generic.List < Reward >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RoleClaimExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RoleClaimExtensions.html",
    "title": "Class RoleClaimExtensions | SUGAR",
    "keywords": "Class RoleClaimExtensions Inheritance System.Object RoleClaimExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class RoleClaimExtensions Methods ToContract(RoleClaim) Declaration public static RoleClaimResponse ToContract(this RoleClaim roleClaimModel) Parameters Type Name Description RoleClaim roleClaimModel Returns Type Description RoleClaimResponse ToContractList(IEnumerable<RoleClaim>) Declaration public static IEnumerable<RoleClaimResponse> ToContractList(this IEnumerable<RoleClaim> roleClaimModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < RoleClaim > roleClaimModels Returns Type Description System.Collections.Generic.IEnumerable < RoleClaimResponse > ToModel(RoleClaimRequest) Declaration public static RoleClaim ToModel(this RoleClaimRequest roleClaimContract) Parameters Type Name Description RoleClaimRequest roleClaimContract Returns Type Description RoleClaim"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RoleExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.RoleExtensions.html",
    "title": "Class RoleExtensions | SUGAR",
    "keywords": "Class RoleExtensions Inheritance System.Object RoleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class RoleExtensions Methods ToContract(Role) Declaration public static RoleResponse ToContract(this Role roleModel) Parameters Type Name Description Role roleModel Returns Type Description RoleResponse ToContractList(IEnumerable<Role>) Declaration public static IEnumerable<RoleResponse> ToContractList(this IEnumerable<Role> roleModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < Role > roleModels Returns Type Description System.Collections.Generic.IEnumerable < RoleResponse > ToModel(RoleRequest) Declaration public static Role ToModel(this RoleRequest roleContract) Parameters Type Name Description RoleRequest roleContract Returns Type Description Role"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.SkillExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.SkillExtensions.html",
    "title": "Class SkillExtensions | SUGAR",
    "keywords": "Class SkillExtensions Inheritance System.Object SkillExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class SkillExtensions Methods ToContract(Skill) Declaration public static EvaluationResponse ToContract(this Skill model) Parameters Type Name Description Skill model Returns Type Description EvaluationResponse ToContractList(IEnumerable<Skill>) Declaration public static IEnumerable<EvaluationResponse> ToContractList(this IEnumerable<Skill> models) Parameters Type Name Description System.Collections.Generic.IEnumerable < Skill > models Returns Type Description System.Collections.Generic.IEnumerable < EvaluationResponse > ToSkillModel(EvaluationCreateRequest) Declaration public static Skill ToSkillModel(this EvaluationCreateRequest skillContract) Parameters Type Name Description EvaluationCreateRequest skillContract Returns Type Description Skill ToSkillModel(EvaluationUpdateRequest) Declaration public static Skill ToSkillModel(this EvaluationUpdateRequest skillContract) Parameters Type Name Description EvaluationUpdateRequest skillContract Returns Type Description Skill"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.UserExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.UserExtensions.html",
    "title": "Class UserExtensions | SUGAR",
    "keywords": "Class UserExtensions Inheritance System.Object UserExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class UserExtensions Methods ToContract(User) Declaration public static UserResponse ToContract(this User userModel) Parameters Type Name Description User userModel Returns Type Description UserResponse ToContractList(IEnumerable<User>) Declaration public static IEnumerable<UserResponse> ToContractList(this IEnumerable<User> userModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < User > userModels Returns Type Description System.Collections.Generic.IEnumerable < UserResponse > ToUserModel(UserRequest) Declaration public static User ToUserModel(this UserRequest userContract) Parameters Type Name Description UserRequest userContract Returns Type Description User"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.html",
    "title": "Namespace PlayGen.SUGAR.Server.WebAPI.Extensions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.WebAPI.Extensions Classes AccountExtensions AccountSourceExtensions AchievementExtensions ActorClaimExtensions ActorDataExtensions ActorExtensions ActorRoleExtensions ClaimExtensions EvaluationCriteriaExtensions EvaluationDataExtensions GameDataExtensions GameExtensions GroupExtensions HttpContextExtensions LeaderboardExtensions MatchExtensions RelationshipExtensions ResourceExtensions RewardExtensions RoleClaimExtensions RoleExtensions SkillExtensions UserExtensions"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Filters.APIVersionFilterFilter.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Filters.APIVersionFilterFilter.html",
    "title": "Class APIVersionFilterFilter | SUGAR",
    "keywords": "Class APIVersionFilterFilter Inheritance System.Object APIVersionFilterFilter Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Filters Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class APIVersionFilterFilter : IActionFilter, IFilterMetadata Methods OnActionExecuted(ActionExecutedContext) Declaration public void OnActionExecuted(ActionExecutedContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context OnActionExecuting(ActionExecutingContext) Declaration public void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Filters.ExceptionFilter.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Filters.ExceptionFilter.html",
    "title": "Class ExceptionFilter | SUGAR",
    "keywords": "Class ExceptionFilter Inheritance System.Object System.Attribute Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute ExceptionFilter Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext) Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.Order System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.Match(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Filters Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class ExceptionFilter : ExceptionFilterAttribute, IAsyncExceptionFilter, IExceptionFilter, IOrderedFilter, IFilterMetadata Constructors ExceptionFilter(ILogger<ExceptionFilter>) Declaration public ExceptionFilter(ILogger<ExceptionFilter> logger) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ExceptionFilter > logger Methods OnException(ExceptionContext) Declaration public override void OnException(ExceptionContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ExceptionContext context Overrides Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext) Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncExceptionFilter Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Client.Tests.AccountClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.AccountClientTests.html",
    "title": "Class AccountClientTests | SUGAR",
    "keywords": "Class AccountClientTests Inheritance System.Object ClientTestBase AccountClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class AccountClientTests : ClientTestBase Constructors AccountClientTests(ClientTestsFixture) Declaration public AccountClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CannotCreateDuplicate() Declaration [Fact] public void CannotCreateDuplicate() CannotCreateInvalidUser() Declaration [Fact] public void CannotCreateInvalidUser()"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.EvaluationDataMapper.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.EvaluationDataMapper.html",
    "title": "Class EvaluationDataMapper | SUGAR",
    "keywords": "Class EvaluationDataMapper Mappings of game data keys to evaluations with criteria that make use of the specific keys. Inheritance System.Object EvaluationDataMapper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class EvaluationDataMapper Methods CreateMapping(Evaluation) Declaration public void CreateMapping(Evaluation evaluation) Parameters Type Name Description Evaluation evaluation CreateMappings(List<Evaluation>) Declaration public void CreateMappings(List<Evaluation> evaluations) Parameters Type Name Description System.Collections.Generic.List < Evaluation > evaluations RemoveMapping(Evaluation) Declaration public void RemoveMapping(Evaluation evaluation) Parameters Type Name Description Evaluation evaluation TryGetRelated(EvaluationData, out ICollection<Evaluation>) Declaration public bool TryGetRelated(EvaluationData evaluationData, out ICollection<Evaluation> evaluations) Parameters Type Name Description EvaluationData evaluationData System.Collections.Generic.ICollection < Evaluation > evaluations Returns Type Description System.Boolean"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.EvaluationEvents | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.EvaluationEvents Classes ConcurrentProgressCache CriteriaEvaluator Evaluates evaluation criteria. EvaluationDataMapper Mappings of game data keys to evaluations with criteria that make use of the specific keys. EvaluationProgress EvaluationTracker ProgressEvaluator ProgressNotificationCache Check newly evaluated progress and store notifications for values of any significance StandingsRequest StandingsResponse"
  },
  "api/PlayGen.SUGAR.Server.Core.Exceptions.InvalidAccountDetailsException.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Exceptions.InvalidAccountDetailsException.html",
    "title": "Class InvalidAccountDetailsException | SUGAR",
    "keywords": "Class InvalidAccountDetailsException Inheritance System.Object System.Exception InvalidAccountDetailsException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetType() System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : PlayGen.SUGAR.Server.Core.Exceptions Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class InvalidAccountDetailsException : Exception, ISerializable Constructors InvalidAccountDetailsException() Declaration public InvalidAccountDetailsException() InvalidAccountDetailsException(String) Declaration public InvalidAccountDetailsException(string message) Parameters Type Name Description System.String message InvalidAccountDetailsException(String, Exception) Declaration public InvalidAccountDetailsException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.AccountControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.AccountControllerTests.html",
    "title": "Class AccountControllerTests | SUGAR",
    "keywords": "Class AccountControllerTests Inheritance System.Object CoreTestBase AccountControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class AccountControllerTests : CoreTestBase Methods CanAutoRegisterOnNonExistentUserLogin() Declaration [Fact] public void CanAutoRegisterOnNonExistentUserLogin()"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.AchievementProgressControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.AchievementProgressControllerTests.html",
    "title": "Class AchievementProgressControllerTests | SUGAR",
    "keywords": "Class AchievementProgressControllerTests Inheritance System.Object CoreTestBase AchievementProgressControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class AchievementProgressControllerTests : CoreTestBase"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.LeaderboardControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.LeaderboardControllerTests.html",
    "title": "Class LeaderboardControllerTests | SUGAR",
    "keywords": "Class LeaderboardControllerTests Inheritance System.Object CoreTestBase LeaderboardControllerTests Implements Xunit.IClassFixture < TestDataFixture > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class LeaderboardControllerTests : CoreTestBase, IClassFixture<TestDataFixture> Methods CreateFriendsLeaderboardStandingRequestWithInvalidActorId() Declaration [Fact] public void CreateFriendsLeaderboardStandingRequestWithInvalidActorId() CreateFriendsLeaderboardStandingRequestWithInvalidActorType() Declaration [Fact] public void CreateFriendsLeaderboardStandingRequestWithInvalidActorType() CreateFriendsLeaderboardStandingRequestWithNoActorId() Declaration [Fact] public void CreateFriendsLeaderboardStandingRequestWithNoActorId() CreateLeaderboardStandingRequestWithInvalidLeaderboardId() Declaration [Fact] public void CreateLeaderboardStandingRequestWithInvalidLeaderboardId() CreateLeaderboardStandingRequestWithInvalidLimit() Declaration [Fact] public void CreateLeaderboardStandingRequestWithInvalidLimit() CreateMembersLeaderboardStandingRequestWithInvalidActorId() Declaration [Fact] public void CreateMembersLeaderboardStandingRequestWithInvalidActorId() CreateMembersLeaderboardStandingRequestWithInvalidActorType() Declaration [Fact] public void CreateMembersLeaderboardStandingRequestWithInvalidActorType() CreateMembersLeaderboardStandingRequestWithNoActorId() Declaration [Fact] public void CreateMembersLeaderboardStandingRequestWithNoActorId() CreateNearLeaderboardStandingRequestWithInvalidActorId() Declaration [Fact] public void CreateNearLeaderboardStandingRequestWithInvalidActorId() CreateNearLeaderboardStandingRequestWithInvalidActorType() Declaration [Fact] public void CreateNearLeaderboardStandingRequestWithInvalidActorType() CreateNearLeaderboardStandingRequestWithNoActorId() Declaration [Fact] public void CreateNearLeaderboardStandingRequestWithNoActorId() GetLeaderboardCountBoolAccuracyTest() Declaration [Fact] public void GetLeaderboardCountBoolAccuracyTest() GetLeaderboardCountBoolSpeedTest() Declaration [Fact] public void GetLeaderboardCountBoolSpeedTest() GetLeaderboardCountStringAccuracyTest() Declaration [Fact] public void GetLeaderboardCountStringAccuracyTest() GetLeaderboardCountStringSpeedTest() Declaration [Fact] public void GetLeaderboardCountStringSpeedTest() GetLeaderboardEarliestBoolAccuracyTest() Declaration [Fact] public void GetLeaderboardEarliestBoolAccuracyTest() GetLeaderboardEarliestBoolSpeedTest() Declaration [Fact] public void GetLeaderboardEarliestBoolSpeedTest() GetLeaderboardEarliestStringAccuracyTest() Declaration [Fact] public void GetLeaderboardEarliestStringAccuracyTest() GetLeaderboardEarliestStringSpeedTest() Declaration [Fact] public void GetLeaderboardEarliestStringSpeedTest() GetLeaderboardFriendFilterAccuracyTest() Declaration [Fact] public void GetLeaderboardFriendFilterAccuracyTest() GetLeaderboardFriendFilterSpeedTest() Declaration [Fact] public void GetLeaderboardFriendFilterSpeedTest() GetLeaderboardGroupMemberFilterAccuracyTest() Declaration [Fact] public void GetLeaderboardGroupMemberFilterAccuracyTest() GetLeaderboardGroupMemberFilterSpeedTest() Declaration [Fact] public void GetLeaderboardGroupMemberFilterSpeedTest() GetLeaderboardHighFloatAccuracyTest() Declaration [Fact] public void GetLeaderboardHighFloatAccuracyTest() GetLeaderboardHighFloatSpeedTest() Declaration [Fact] public void GetLeaderboardHighFloatSpeedTest() GetLeaderboardHighLongAccuracyTest() Declaration [Fact] public void GetLeaderboardHighLongAccuracyTest() GetLeaderboardHighLongSpeedTest() Declaration [Fact] public void GetLeaderboardHighLongSpeedTest() GetLeaderboardLatestBoolSpeedTest() Declaration [Fact] public void GetLeaderboardLatestBoolSpeedTest() GetLeaderboardLatestStringSpeedTest() Declaration [Fact] public void GetLeaderboardLatestStringSpeedTest() GetLeaderboardLowFloatAccuracyTest() Declaration [Fact] public void GetLeaderboardLowFloatAccuracyTest() GetLeaderboardLowFloatSpeedTest() Declaration [Fact] public void GetLeaderboardLowFloatSpeedTest() GetLeaderboardLowLongAccuracyTest() Declaration [Fact] public void GetLeaderboardLowLongAccuracyTest() GetLeaderboardLowLongSpeedTest() Declaration [Fact] public void GetLeaderboardLowLongSpeedTest() GetLeaderboardNearFilterAccuracyTest() Declaration [Fact] public void GetLeaderboardNearFilterAccuracyTest() GetLeaderboardNearFilterSpeedTest() Declaration [Fact] public void GetLeaderboardNearFilterSpeedTest() GetLeaderboardSumFloatAccuracyTest() Declaration [Fact] public void GetLeaderboardSumFloatAccuracyTest() GetLeaderboardSumFloatSpeedTest() Declaration [Fact] public void GetLeaderboardSumFloatSpeedTest() GetLeaderboardSumLongAccuracyTest() Declaration public void GetLeaderboardSumLongAccuracyTest() GetLeaderboardSumLongSpeedTest() Declaration [Fact] public void GetLeaderboardSumLongSpeedTest() Implements Xunit.IClassFixture<TFixture>"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.MatchControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.MatchControllerTests.html",
    "title": "Class MatchControllerTests | SUGAR",
    "keywords": "Class MatchControllerTests Inheritance System.Object MatchControllerTests Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class MatchControllerTests : IDisposable Methods CanAddAndGetData() Declaration [Fact] public void CanAddAndGetData() CanEnd() Declaration [Fact] public void CanEnd() CanGetByGame() Declaration [Fact] public void CanGetByGame() CanGetByTime() Declaration [Fact] public Task CanGetByTime() Returns Type Description System.Threading.Tasks.Task CanStart() Declaration [Fact] public void CanStart() Dispose() Declaration public void Dispose() GetByCreator() Declaration [Fact] public void GetByCreator() Implements System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.ResourceControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.ResourceControllerTests.html",
    "title": "Class ResourceControllerTests | SUGAR",
    "keywords": "Class ResourceControllerTests Inheritance System.Object ResourceControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax [Collection(\"Project Fixture Collection\")] public class ResourceControllerTests Methods CanGetResourceActorId() Declaration [Fact] public void CanGetResourceActorId() CanGetResourceByKey() Declaration [Fact] public void CanGetResourceByKey() CanGetResourceeGameId() Declaration [Fact] public void CanGetResourceeGameId() CanModifyResource() Declaration [Fact] public void CanModifyResource() CanTransferCreate_FromUserToUser() Declaration [Fact] public void CanTransferCreate_FromUserToUser() CanTransferUpdate_FromUserToUser() Declaration [Fact] public void CanTransferUpdate_FromUserToUser()"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.CoreTestBase.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.CoreTestBase.html",
    "title": "Class CoreTestBase | SUGAR",
    "keywords": "Class CoreTestBase Inheritance System.Object CoreTestBase AccountControllerTests AchievementProgressControllerTests EvaluationTestsBase LeaderboardControllerTests SessionTrackerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax [Collection(\"ClearDatabaseFixture\")] public abstract class CoreTestBase"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.EvaluationGameDataMapperEvaluationTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.EvaluationGameDataMapperEvaluationTests.html",
    "title": "Class EvaluationGameDataMapperEvaluationTests | SUGAR",
    "keywords": "Class EvaluationGameDataMapperEvaluationTests Inheritance System.Object CoreTestBase EvaluationTestsBase EvaluationGameDataMapperEvaluationTests Inherited Members EvaluationTestsBase.EvaluationTracker EvaluationTestsBase.ProgressEvaluator EvaluationTestsBase.SessionTracker System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class EvaluationGameDataMapperEvaluationTests : EvaluationTestsBase Methods CreateAndGetRelated() Declaration [Fact] public void CreateAndGetRelated() RemovesEvaluationsGameDataMapping() Declaration [Fact] public void RemovesEvaluationsGameDataMapping()"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.EvaluationTestsBase.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.EvaluationTestsBase.html",
    "title": "Class EvaluationTestsBase | SUGAR",
    "keywords": "Class EvaluationTestsBase Inheritance System.Object CoreTestBase EvaluationTestsBase EvaluationGameDataMapperEvaluationTests EvaluationTrackerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public abstract class EvaluationTestsBase : CoreTestBase Constructors EvaluationTestsBase() Declaration protected EvaluationTestsBase() Fields EvaluationTracker Declaration protected readonly EvaluationTracker EvaluationTracker Field Value Type Description EvaluationTracker ProgressEvaluator Declaration protected readonly ProgressEvaluator ProgressEvaluator Field Value Type Description ProgressEvaluator SessionTracker Declaration protected readonly SessionTracker SessionTracker Field Value Type Description SessionTracker"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.EvaluationTrackerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.EvaluationTrackerTests.html",
    "title": "Class EvaluationTrackerTests | SUGAR",
    "keywords": "Class EvaluationTrackerTests Inheritance System.Object CoreTestBase EvaluationTestsBase EvaluationTrackerTests Inherited Members EvaluationTestsBase.EvaluationTracker EvaluationTestsBase.ProgressEvaluator EvaluationTestsBase.SessionTracker System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class EvaluationTrackerTests : EvaluationTestsBase Methods DoesntGetAlreadyRecievedNotifications() Adding multiple game data triggers evaluations Declaration [Fact] public void DoesntGetAlreadyRecievedNotifications() EvaluatesOnEvaluationDataAdded() Adding game data triggers evaluations Declaration [Fact] public void EvaluatesOnEvaluationDataAdded() EvaluatesOnEvaluationDatasAdded() Adding multiple game data triggers evaluations Declaration [Fact] public void EvaluatesOnEvaluationDatasAdded() EvaluatesOnEvaluationUpdated() add achievement add game data (that doesn't satisfy the completion condition) make sure progress isn't complete modify achievement to make sure it is completed with the current amount of data make sure progress is complete Declaration [Fact] public void EvaluatesOnEvaluationUpdated() EvaluatesOnSessionStarted() Make sure: existing evaluations are mapped progress for user session is returned Declaration [Fact] public void EvaluatesOnSessionStarted() NoEvaluationWhenNoSession() No progress stored when there is no session for the user Declaration [Fact] public void NoEvaluationWhenNoSession() NoEvaluationWhenNotComplete() No progress stored when there is no session for the user Declaration [Fact] public void NoEvaluationWhenNotComplete() RemovesOnSessionEnded() Progress removed when session ended Declaration [Fact] public void RemovesOnSessionEnded() RemovesProgressOnEvaluationDeleted() add achievement and complete achievement remove achievement make sure no progress is recorded for achievement Declaration [Fact] public void RemovesProgressOnEvaluationDeleted() RemovesProgressWhenGotten() Should remove this actors progress after it's been accessed Declaration [Fact] public void RemovesProgressWhenGotten()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.AccountController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.AccountController.html",
    "title": "Class AccountController | SUGAR",
    "keywords": "Class AccountController Inheritance System.Object DbController AccountController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class AccountController : DbController Constructors AccountController(SUGARContextFactory) Declaration public AccountController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Account) Declaration public Account Create(Account account) Parameters Type Name Description Account account Returns Type Description Account Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get(String[], Int32) Declaration public List<Account> Get(string[] names, int sourceId) Parameters Type Name Description System.String [] names System.Int32 sourceId Returns Type Description System.Collections.Generic.List < Account >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.AccountSourceController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.AccountSourceController.html",
    "title": "Class AccountSourceController | SUGAR",
    "keywords": "Class AccountSourceController Inheritance System.Object DbController AccountSourceController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class AccountSourceController : DbController Constructors AccountSourceController(SUGARContextFactory) Declaration public AccountSourceController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(AccountSource) Declaration public AccountSource Create(AccountSource source) Parameters Type Name Description AccountSource source Returns Type Description AccountSource Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<AccountSource> Get() Returns Type Description System.Collections.Generic.List < AccountSource > Get(Int32) Declaration public AccountSource Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description AccountSource Get(String) Declaration public AccountSource Get(string token) Parameters Type Name Description System.String token Returns Type Description AccountSource Update(AccountSource) Declaration public void Update(AccountSource source) Parameters Type Name Description AccountSource source"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorClaimController.html",
    "title": "Class ActorClaimController | SUGAR",
    "keywords": "Class ActorClaimController Inheritance System.Object DbController ActorClaimController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorClaimController : DbController Constructors ActorClaimController(SUGARContextFactory) Declaration public ActorClaimController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(ActorClaim) Declaration public ActorClaim Create(ActorClaim actorClaim) Parameters Type Name Description ActorClaim actorClaim Returns Type Description ActorClaim Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration public ActorClaim Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description ActorClaim GetActorClaims(Int32) Declaration public List<ActorClaim> GetActorClaims(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < ActorClaim > GetActorClaimsForEntity(Int32, Int32, ClaimScope) Declaration public List<Claim> GetActorClaimsForEntity(int actorId, int entityId, ClaimScope scope) Parameters Type Name Description System.Int32 actorId System.Int32 entityId ClaimScope scope Returns Type Description System.Collections.Generic.List < Claim > GetClaimActors(Int32, Int32) Declaration public List<Actor> GetClaimActors(int claimId, int entityId) Parameters Type Name Description System.Int32 claimId System.Int32 entityId Returns Type Description System.Collections.Generic.List < Actor >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorController.html",
    "title": "Class ActorController | SUGAR",
    "keywords": "Class ActorController Inheritance System.Object DbController ActorController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorController : DbController Constructors ActorController(SUGARContextFactory) Declaration public ActorController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Actor) Declaration public void Create(Actor actor) Parameters Type Name Description Actor actor Delete(Int32[]) Declaration public void Delete(int[] id) Parameters Type Name Description System.Int32 [] id Get() Declaration public List<Actor> Get() Returns Type Description System.Collections.Generic.List < Actor > Get(Int32) Declaration public Actor Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Actor"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.RoleController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.RoleController.html",
    "title": "Class RoleController | SUGAR",
    "keywords": "Class RoleController Inheritance System.Object DbController RoleController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class RoleController : DbController Constructors RoleController(SUGARContextFactory) Declaration public RoleController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Role) Declaration public Role Create(Role role) Parameters Type Name Description Role role Returns Type Description Role Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<Role> Get() Returns Type Description System.Collections.Generic.List < Role > Get(ClaimScope) Declaration public List<Role> Get(ClaimScope scope) Parameters Type Name Description ClaimScope scope Returns Type Description System.Collections.Generic.List < Role > Get(Int32) Declaration public Role Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Role GetDefault(String) Declaration public Role GetDefault(string roleName) Parameters Type Name Description System.String roleName Returns Type Description Role"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.UserController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.UserController.html",
    "title": "Class UserController | SUGAR",
    "keywords": "Class UserController Inheritance System.Object DbController UserController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class UserController : DbController Constructors UserController(SUGARContextFactory) Declaration public UserController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(User) Declaration public User Create(User user) Parameters Type Name Description User user Returns Type Description User Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<User> Get() Returns Type Description System.Collections.Generic.List < User > Get(Int32) Declaration public User Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description User Search(String, Boolean) Declaration public List<User> Search(string name, bool exactMatch = false) Parameters Type Name Description System.String name System.Boolean exactMatch Returns Type Description System.Collections.Generic.List < User > Update(User) Declaration public User Update(User user) Parameters Type Name Description User user Returns Type Description User"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework.Controllers | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework.Controllers Classes AccountController AccountSourceController ActorClaimController ActorController ActorDataController ActorRoleController ClaimController DbController EvaluationController EvaluationDataController GameController GroupController LeaderboardController MatchController RelationshipController RoleClaimController RoleController UserController"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.AccountConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.AccountConfig.html",
    "title": "Class AccountConfig | SUGAR",
    "keywords": "Class AccountConfig Inheritance System.Object AccountConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Account > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class AccountConfig : IEntityTypeConfiguration<Account> Methods Configure(EntityTypeBuilder<Account>) Declaration public void Configure(EntityTypeBuilder<Account> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Account > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.GameConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.GameConfig.html",
    "title": "Class GameConfig | SUGAR",
    "keywords": "Class GameConfig Inheritance System.Object GameConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Game > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class GameConfig : IEntityTypeConfiguration<Game> Methods Configure(EntityTypeBuilder<Game>) Declaration public void Configure(EntityTypeBuilder<Game> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Game > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.GroupConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.GroupConfig.html",
    "title": "Class GroupConfig | SUGAR",
    "keywords": "Class GroupConfig Inheritance System.Object GroupConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Group > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class GroupConfig : IEntityTypeConfiguration<Group> Methods Configure(EntityTypeBuilder<Group>) Declaration public void Configure(EntityTypeBuilder<Group> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Group > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.LeaderboardConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.LeaderboardConfig.html",
    "title": "Class LeaderboardConfig | SUGAR",
    "keywords": "Class LeaderboardConfig Inheritance System.Object LeaderboardConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Leaderboard > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class LeaderboardConfig : IEntityTypeConfiguration<Leaderboard> Methods Configure(EntityTypeBuilder<Leaderboard>) Declaration public void Configure(EntityTypeBuilder<Leaderboard> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Leaderboard > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.RewardConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.RewardConfig.html",
    "title": "Class RewardConfig | SUGAR",
    "keywords": "Class RewardConfig Inheritance System.Object RewardConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Reward > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class RewardConfig : IEntityTypeConfiguration<Reward> Methods Configure(EntityTypeBuilder<Reward>) Declaration public void Configure(EntityTypeBuilder<Reward> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Reward > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.Model.EvaluationData.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.EvaluationData.html",
    "title": "Class EvaluationData | SUGAR",
    "keywords": "Class EvaluationData Inheritance System.Object EvaluationData Implements IModificationHistory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class EvaluationData : IModificationHistory Properties ActorId Declaration public int ActorId { get; set; } Property Value Type Description System.Int32 Category Declaration public EvaluationDataCategory Category { get; set; } Property Value Type Description EvaluationDataCategory DateCreated Declaration public DateTime DateCreated { get; set; } Property Value Type Description System.DateTime DateModified Declaration public DateTime DateModified { get; set; } Property Value Type Description System.DateTime EvaluationDataType Declaration public EvaluationDataType EvaluationDataType { get; set; } Property Value Type Description EvaluationDataType GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Key Declaration public string Key { get; set; } Property Value Type Description System.String Match Declaration public virtual Match Match { get; set; } Property Value Type Description Match MatchId Declaration public int ? MatchId { get; set; } Property Value Type Description System.Nullable < System.Int32 > Value Declaration public string Value { get; set; } Property Value Type Description System.String Implements IModificationHistory Extension Methods EvaluationDataExtensions.ToContract(EvaluationData) ResourceExtensions.ToResourceContract(EvaluationData)"
  },
  "api/PlayGen.SUGAR.Server.Model.Game.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Game.html",
    "title": "Class Game | SUGAR",
    "keywords": "Class Game Inheritance System.Object Game Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Game Properties Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String Extension Methods GameExtensions.ToContract(Game)"
  },
  "api/PlayGen.SUGAR.Server.Model.Group.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Group.html",
    "title": "Class Group | SUGAR",
    "keywords": "Class Group Inheritance System.Object Actor Group Inherited Members Actor.Id Actor.Name Actor.Description Actor.Requestors Actor.Acceptors Actor.RequestAcceptors Actor.RequestRequestors System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Group : Actor Properties ActorType Declaration public override ActorType ActorType { get; } Property Value Type Description ActorType Overrides Actor.ActorType Extension Methods ActorExtensions.ToActorContract(Actor) GroupExtensions.ToContract(Group)"
  },
  "api/PlayGen.SUGAR.Server.Model.Interfaces.IGameData.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Interfaces.IGameData.html",
    "title": "Interface IGameData | SUGAR",
    "keywords": "Interface IGameData Namespace : PlayGen.SUGAR.Server.Model.Interfaces Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public interface IGameData Properties ActorId Declaration int ActorId { get; } Property Value Type Description System.Int32"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.AccountSourceController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.AccountSourceController.html",
    "title": "Class AccountSourceController | SUGAR",
    "keywords": "Class AccountSourceController Web Controller that facilitates AccountSource specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller AccountSourceController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class AccountSourceController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors AccountSourceController(AccountSourceController, IAuthorizationService) Declaration public AccountSourceController(AccountSourceController accountSourceCoreController, IAuthorizationService authorizationService) Parameters Type Name Description AccountSourceController accountSourceCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(AccountSourceRequest) Create a new AccountSource. Requires the to be unique. Example Usage: POST api/accountSource Declaration [HttpPost] public Task<IActionResult> Create([FromBody] AccountSourceRequest newAccountSource) Parameters Type Name Description AccountSourceRequest newAccountSource object that contains the details of the new AccountSource. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new AccountSource details. Delete(Int32) Delete AccountSource with the ID provided. Example Usage: DELETE api/accountSource/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id AccountSource ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get() Get a list of all AccountSources. Example Usage: GET api/accountSource/list Declaration [HttpGet(\"list\")] public Task<IActionResult> Get() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold AccountSource details. GetById(Int32) Get AccountSource that matches provided. Example Usage: GET api/accountSource/findbyid/1 Declaration [HttpGet(\"findbyid/{id:int}\", Name = \"GetByAccountSourceId\")] public Task<IActionResult> GetById([FromRoute] int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > which matches search criteria. Update(Int32, AccountSourceRequest) Update an existing AccountSource. Example Usage: PUT api/accountSource/update/1 Declaration [HttpPut(\"update/{id:int}\")] public Task<IActionResult> Update([FromRoute] int id, [FromBody] AccountSourceRequest accountSource) Parameters Type Name Description System.Int32 id Id of the existing AccountSource. AccountSourceRequest accountSource object that holds the details of the AccountSource. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.AchievementsController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.AchievementsController.html",
    "title": "Class AchievementsController | SUGAR",
    "keywords": "Class AchievementsController Web Controller that facilitates Achievement specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller EvaluationsController AchievementsController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members EvaluationsController._authorizationService EvaluationsController.EvaluationCoreController EvaluationsController.Get(Int32, EvaluationType) EvaluationsController.GetEvaluationProgress(String, Int32, Int32) Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class AchievementsController : EvaluationsController, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors AchievementsController(EvaluationController, EvaluationTracker, IAuthorizationService) Declaration public AchievementsController(EvaluationController evaluationCoreController, EvaluationTracker evaluationTracker, IAuthorizationService authorizationService) Parameters Type Name Description EvaluationController evaluationCoreController EvaluationTracker evaluationTracker Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(EvaluationCreateRequest) Create a new Achievement. Requires to be unique to that . Example Usage: POST api/achievements/create Declaration [HttpPost(\"create\")] public Task<IActionResult> Create([FromBody] EvaluationCreateRequest newAchievement) Parameters Type Name Description EvaluationCreateRequest newAchievement object that holds the details of the new Achievement. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns a object containing details for the newly created Achievement. Delete(String, Int32) Delete Achievement with the and provided. Example Usage: DELETE api/achievements/ACHIEVEMENT_TOKEN/1 Declaration [HttpDelete(\"{token}/global\")] [HttpDelete(\"{token}/{gameId:int}\")] public Task<IActionResult> Delete([FromRoute] string token, [FromRoute] int gameId) Parameters Type Name Description System.String token Token of Achievement System.Int32 gameId ID of the Game the Achievement is for Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get(Int32) Find a list of Achievements that match . If global is provided instead of a gameId, get all global achievements, ie. achievements that are not associated with a specific game. Example Usage: GET api/achievements/game/1/list Declaration [HttpGet(\"global/list\")] [HttpGet(\"game/{gameId:int}/list\")] public Task<IActionResult> Get([FromRoute] int gameId) Parameters Type Name Description System.Int32 gameId Game ID Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns multiple that hold Achievement details Get(String, Int32) Find an Achievement that matches and . Example Usage: GET api/achievements/find/ACHIEVEMENT_TOKEN/1 Declaration [HttpGet(\"find/{token}/{gameId:int}\")] [HttpGet(\"find/{token}/global\")] public Task<IActionResult> Get([FromRoute] string token, [FromRoute] int gameId) Parameters Type Name Description System.String token Token of Achievement System.Int32 gameId ID of the Game the Achievement is for Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns that holds Achievement details GetAchievementProgress(String, Int32, Int32) Find the current progress for an Achievement for . Example Usage: GET api/achievements/ACHIEVEMENT_TOKEN/1/evaluate/1 Declaration [HttpGet(\"{token}/{gameId:int}/evaluate/{actorId:int}\")] [HttpGet(\"{token}/global/evaluate/{actorId:int}\")] public IActionResult GetAchievementProgress([FromRoute] string token, [FromRoute] int gameId, [FromRoute] int actorId) Parameters Type Name Description System.String token Token of Achievement System.Int32 gameId ID of the Game the Achievement is for System.Int32 actorId ID of Group/User Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns multiple that hold current progress toward achievement. GetGameProgress(Int32, Int32) Find the current progress for all achievements for a for . Example Usage: GET api/achievements/game/1/evaluate/1 Declaration [HttpGet(\"game/{gameId:int}/evaluate/{actorId:int}\")] [HttpGet(\"global/evaluate/{actorId:int}\")] public IActionResult GetGameProgress([FromRoute] int gameId, [FromRoute] int actorId) Parameters Type Name Description System.Int32 gameId ID of Game System.Int32 actorId ID of Group/User Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns multiple that hold current progress toward achievement. Update(EvaluationUpdateRequest) Update an existing Achievement. Example Usage: PUT api/achievements/update Declaration [HttpPut(\"update\")] public Task<IActionResult> Update([FromBody] EvaluationUpdateRequest achievement) Parameters Type Name Description EvaluationUpdateRequest achievement object that holds the details of the Achievement. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ActorClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ActorClaimController.html",
    "title": "Class ActorClaimController | SUGAR",
    "keywords": "Class ActorClaimController Web Controller that facilitates ActorClaim specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ActorClaimController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class ActorClaimController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ActorClaimController(ActorClaimController, ClaimController, IAuthorizationService) Declaration public ActorClaimController(ActorClaimController actorClaimCoreController, ClaimController claimCoreController, IAuthorizationService authorizationService) Parameters Type Name Description ActorClaimController actorClaimCoreController ClaimController claimCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(ActorClaimRequest) Create a new ActorClaim. Example Usage: POST api/actorclaim Declaration [HttpPost] public Task<IActionResult> Create([FromBody] ActorClaimRequest newClaim) Parameters Type Name Description ActorClaimRequest newClaim object that contains the details of the new ActorClaim. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new ActorClaim details. Delete(Int32) Delete ActorClaim with the ID provided. Example Usage: DELETE api/actorclaim/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id ActorClaim ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > GetActorClaims(Int32) Get a list of all Claims for this Actor. Example Usage: GET api/actorclaim/actor/1/ Declaration [HttpGet(\"actor/{id:int}\")] public Task<IActionResult> GetActorClaims([FromRoute] int id) Parameters Type Name Description System.Int32 id Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold ActorClaim details. GetClaimActors(Int32, Int32) Get a list of all Actors for this Claim and Entity. Example Usage: GET api/actorclaim/claim/1/entity/1 Declaration [HttpGet(\"claim/{claimId:int}/entity/{entityId:int}\")] public Task<IActionResult> GetClaimActors([FromRoute] int claimId, [FromRoute] int entityId) Parameters Type Name Description System.Int32 claimId System.Int32 entityId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of that hold ActorClaim details. Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ActorDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ActorDataController.html",
    "title": "Class ActorDataController | SUGAR",
    "keywords": "Class ActorDataController Web Controller that facilitates ActorData specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ActorDataController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class ActorDataController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ActorDataController(ActorDataController, IAuthorizationService) Declaration public ActorDataController(ActorDataController actorDataCoreController, IAuthorizationService authorizationService) Parameters Type Name Description ActorDataController actorDataCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Add(EvaluationDataRequest) Create a new ActorData record. Example Usage: POST api/actordata Declaration [HttpPost] public Task<IActionResult> Add([FromBody] EvaluationDataRequest newData) Parameters Type Name Description EvaluationDataRequest newData object that holds the details of the new ActorData. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new ActorData details. Get(Nullable<Int32>, Nullable<Int32>, String[]) Find a list of all ActorData that match the , and provided. Example Usage: GET api/actordata?actorId=1&gameId=1&key=key1&key=key2 Declaration [HttpGet] public Task<IActionResult> Get(int ? actorId, int ? gameId, string[] key) Parameters Type Name Description System.Nullable < System.Int32 > actorId ID of a User/Group. System.Nullable < System.Int32 > gameId ID of a Game. System.String [] key Array of Key names. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.html",
    "title": "Namespace PlayGen.SUGAR.Server.WebAPI.Controllers | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.WebAPI.Controllers Classes AccountController Web Controller that facilitates account specific operations. AccountSourceController Web Controller that facilitates AccountSource specific operations. AchievementsController Web Controller that facilitates Achievement specific operations. ActorClaimController Web Controller that facilitates ActorClaim specific operations. ActorDataController Web Controller that facilitates ActorData specific operations. ActorRoleController Web Controller that facilitates ActorRole specific operations. EvaluationsController GameController Web Controller that facilitates Game specific operations. GameDataController Web Controller that facilitates GameData specific operations. GroupController Web Controller that facilitates Group specific operations. GroupMemberController Web Controller that facilitates User to Group relationship specific operations. LeaderboardsController Web Controller that facilitates Leaderboard specific operations. MatchController Web controller that facillitates Match specific operations. ResourceController Web Controller that facilitates UserData specific operations. RoleClaimController Web Controller that facilitates RoleClaim specific operations. RoleController Web Controller that facilitates Role specific operations. SessionController Web Controller that facilitates session specific operations. SkillsController Web Controller that facilitates Skill specific operations. UserController Web Controller that facilitates User specific operations. UserFriendController Web Controller that facilitates User to User relationship specific operations. VersionController"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.ClaimNotFoundException.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.ClaimNotFoundException.html",
    "title": "Class ClaimNotFoundException | SUGAR",
    "keywords": "Class ClaimNotFoundException Inheritance System.Object ClaimNotFoundException Namespace : PlayGen.SUGAR.Server.WebAPI.Exceptions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class ClaimNotFoundException : SUGARException Constructors ClaimNotFoundException(String) Declaration protected ClaimNotFoundException(string message) Parameters Type Name Description System.String message"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.IncompatibleAPIVersionException.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.IncompatibleAPIVersionException.html",
    "title": "Class IncompatibleAPIVersionException | SUGAR",
    "keywords": "Class IncompatibleAPIVersionException Inheritance System.Object System.Exception IncompatibleAPIVersionException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetType() System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : PlayGen.SUGAR.Server.WebAPI.Exceptions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class IncompatibleAPIVersionException : Exception, ISerializable Constructors IncompatibleAPIVersionException(String) Declaration public IncompatibleAPIVersionException(string message) Parameters Type Name Description System.String message IncompatibleAPIVersionException(String, Exception) Declaration public IncompatibleAPIVersionException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException Implements System.Runtime.Serialization.ISerializable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.InvalidAccountDetailsException.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.InvalidAccountDetailsException.html",
    "title": "Class InvalidAccountDetailsException | SUGAR",
    "keywords": "Class InvalidAccountDetailsException Inheritance System.Object System.Exception InvalidAccountDetailsException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetType() System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : PlayGen.SUGAR.Server.WebAPI.Exceptions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class InvalidAccountDetailsException : Exception, ISerializable Constructors InvalidAccountDetailsException() Declaration public InvalidAccountDetailsException() InvalidAccountDetailsException(String) Declaration public InvalidAccountDetailsException(string message) Parameters Type Name Description System.String message InvalidAccountDetailsException(String, Exception) Declaration public InvalidAccountDetailsException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.InvalidSessionException.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.InvalidSessionException.html",
    "title": "Class InvalidSessionException | SUGAR",
    "keywords": "Class InvalidSessionException Inheritance System.Object System.Exception InvalidSessionException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetType() System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : PlayGen.SUGAR.Server.WebAPI.Exceptions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class InvalidSessionException : Exception, ISerializable Constructors InvalidSessionException(String) Declaration public InvalidSessionException(string message) Parameters Type Name Description System.String message Implements System.Runtime.Serialization.ISerializable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Exceptions.html",
    "title": "Namespace PlayGen.SUGAR.Server.WebAPI.Exceptions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.WebAPI.Exceptions Classes ClaimNotFoundException IncompatibleAPIVersionException InvalidAccountDetailsException InvalidSessionException"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.AccountExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.AccountExtensions.html",
    "title": "Class AccountExtensions | SUGAR",
    "keywords": "Class AccountExtensions Inheritance System.Object AccountExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class AccountExtensions Methods ToContract(Account) Declaration public static AccountResponse ToContract(this Account model) Parameters Type Name Description Account model Returns Type Description AccountResponse ToModel(AccountRequest) Declaration public static Account ToModel(this AccountRequest contract) Parameters Type Name Description AccountRequest contract Returns Type Description Account"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.AccountSourceExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.AccountSourceExtensions.html",
    "title": "Class AccountSourceExtensions | SUGAR",
    "keywords": "Class AccountSourceExtensions Inheritance System.Object AccountSourceExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class AccountSourceExtensions Methods ToContract(AccountSource) Declaration public static AccountSourceResponse ToContract(this AccountSource sourceModel) Parameters Type Name Description AccountSource sourceModel Returns Type Description AccountSourceResponse ToContractList(IEnumerable<AccountSource>) Declaration public static IEnumerable<AccountSourceResponse> ToContractList(this IEnumerable<AccountSource> sourceModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < AccountSource > sourceModels Returns Type Description System.Collections.Generic.IEnumerable < AccountSourceResponse > ToModel(AccountSourceRequest) Declaration public static AccountSource ToModel(this AccountSourceRequest sourceContract) Parameters Type Name Description AccountSourceRequest sourceContract Returns Type Description AccountSource"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Filters.ModelValidationFilter.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Filters.ModelValidationFilter.html",
    "title": "Class ModelValidationFilter | SUGAR",
    "keywords": "Class ModelValidationFilter Checks if models are valid. If a model is not valid, a Bad Request is returned as the result with details on why the model state is invalid. Inheritance System.Object ModelValidationFilter Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Filters Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class ModelValidationFilter : IActionFilter, IFilterMetadata Methods OnActionExecuted(ActionExecutedContext) Declaration public void OnActionExecuted(ActionExecutedContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context OnActionExecuting(ActionExecutingContext) Declaration public void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Filters.SessionFilter.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Filters.SessionFilter.html",
    "title": "Class SessionFilter | SUGAR",
    "keywords": "Class SessionFilter Inheritance System.Object SessionFilter Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Filters Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class SessionFilter : IActionFilter, IFilterMetadata Constructors SessionFilter(SessionTracker) Declaration public SessionFilter(SessionTracker sessionTracker) Parameters Type Name Description SessionTracker sessionTracker Methods OnActionExecuted(ActionExecutedContext) Declaration public void OnActionExecuted(ActionExecutedContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context OnActionExecuting(ActionExecutingContext) Declaration public void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Filters.WrapResponseFilter.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Filters.WrapResponseFilter.html",
    "title": "Class WrapResponseFilter | SUGAR",
    "keywords": "Class WrapResponseFilter Inheritance System.Object WrapResponseFilter Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Filters Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class WrapResponseFilter : IActionFilter, IFilterMetadata Constructors WrapResponseFilter(EvaluationTracker) Declaration public WrapResponseFilter(EvaluationTracker evaluationTracker) Parameters Type Name Description EvaluationTracker evaluationTracker Methods OnActionExecuted(ActionExecutedContext) Declaration public void OnActionExecuted(ActionExecutedContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context OnActionExecuting(ActionExecutingContext) Declaration public void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Filters.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Filters.html",
    "title": "Namespace PlayGen.SUGAR.Server.WebAPI.Filters | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.WebAPI.Filters Classes APIVersionFilterFilter ExceptionFilter ModelValidationFilter Checks if models are valid. If a model is not valid, a Bad Request is returned as the result with details on why the model state is invalid. SessionFilter WrapResponseFilter"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Program.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Program.html",
    "title": "Class Program | SUGAR",
    "keywords": "Class Program Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class Program Methods BuildWebHost(String[]) Declaration public static IWebHost BuildWebHost(string[] args) Parameters Type Name Description System.String [] args Returns Type Description Microsoft.AspNetCore.Hosting.IWebHost Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args Setup(IWebHost) Declaration public static void Setup(IWebHost host) Parameters Type Name Description Microsoft.AspNetCore.Hosting.IWebHost host"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Startup.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Startup.html",
    "title": "Class Startup | SUGAR",
    "keywords": "Class Startup Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class Startup Constructors Startup(IConfiguration, IHostingEnvironment) Declaration public Startup(IConfiguration configuration, IHostingEnvironment env) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration Microsoft.AspNetCore.Hosting.IHostingEnvironment env Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Environment Declaration public IHostingEnvironment Environment { get; } Property Value Type Description Microsoft.AspNetCore.Hosting.IHostingEnvironment Methods Configure(IApplicationBuilder, IHostingEnvironment, ILoggerFactory) Declaration public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IHostingEnvironment env Microsoft.Extensions.Logging.ILoggerFactory loggerFactory ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.html",
    "title": "Namespace PlayGen.SUGAR.Server.WebAPI | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.WebAPI Classes Program Startup"
  },
  "api/PlayGen.SUGAR.Client.Tests.AchievementClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.AchievementClientTests.html",
    "title": "Class AchievementClientTests | SUGAR",
    "keywords": "Class AchievementClientTests Inheritance System.Object ClientTestBase EvaluationClientTests AchievementClientTests Inherited Members EvaluationClientTests.CompleteGenericEvaluation(String, Int32, Int32) ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class AchievementClientTests : EvaluationClientTests Constructors AchievementClientTests(ClientTestsFixture) Declaration public AchievementClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanDisableNotifications() Declaration [Fact] public void CanDisableNotifications() CanGetAchievementProgress() Declaration [Fact] public void CanGetAchievementProgress() CanGetGlobalAchievementProgress() Declaration [Fact] public void CanGetGlobalAchievementProgress() CanGetNotifications() Declaration [Fact] public void CanGetNotifications() CannotGetNotExistingAchievementProgress() Declaration [Fact] public void CannotGetNotExistingAchievementProgress() CannotGetNotExistingGlobalAchievementProgress() Declaration [Fact] public void CannotGetNotExistingGlobalAchievementProgress() DontGetAlreadyRecievedNotifications() Declaration [Fact] public void DontGetAlreadyRecievedNotifications()"
  },
  "api/PlayGen.SUGAR.Client.Tests.UserFriendClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.UserFriendClientTests.html",
    "title": "Class UserFriendClientTests | SUGAR",
    "keywords": "Class UserFriendClientTests Inheritance System.Object ClientTestBase UserFriendClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class UserFriendClientTests : ClientTestBase Constructors UserFriendClientTests(ClientTestsFixture) Declaration public UserFriendClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanAcceptRequest() Declaration [Fact] public void CanAcceptRequest() CanCreateAutoAcceptedRequest() Declaration [Fact] public void CanCreateAutoAcceptedRequest() CanCreateRequest() Declaration [Fact] public void CanCreateRequest() CanGetFriendRequests() Declaration [Fact] public void CanGetFriendRequests() CanGetFriends() Declaration [Fact] public void CanGetFriends() CanGetSentRequests() Declaration [Fact] public void CanGetSentRequests() CanGetUserfriends() Declaration [Fact] public void CanGetUserfriends() CannotCreateDuplicateAutoAcceptedRequest() Declaration [Fact] public void CannotCreateDuplicateAutoAcceptedRequest() CannotCreateDuplicateRequest() Declaration [Fact] public void CannotCreateDuplicateRequest() CannotCreateDuplicateRequestOfAccepted() Declaration [Fact] public void CannotCreateDuplicateRequestOfAccepted() CannotCreateRequestWithNonExistingFriend() Declaration [Fact] public void CannotCreateRequestWithNonExistingFriend() CannotCreateRequestWithNonExistingUser() Declaration [Fact] public void CannotCreateRequestWithNonExistingUser() CannotUpdateAlreadyAcceptedRequest() Declaration [Fact] public void CannotUpdateAlreadyAcceptedRequest() CannotUpdateNotExistingRelationship() Declaration [Fact] public void CannotUpdateNotExistingRelationship() CannotUpdateNotExistingRequest() Declaration [Fact] public void CannotUpdateNotExistingRequest() CanRejectRequest() Declaration [Fact] public void CanRejectRequest() CanUpdateRelationship() Declaration [Fact] public void CanUpdateRelationship()"
  },
  "api/PlayGen.SUGAR.Server.Authentication.TokenAuthOptions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.TokenAuthOptions.html",
    "title": "Class TokenAuthOptions | SUGAR",
    "keywords": "Class TokenAuthOptions Inheritance System.Object TokenAuthOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public class TokenAuthOptions Properties Audience Declaration public string Audience { get; set; } Property Value Type Description System.String Issuer Declaration public string Issuer { get; set; } Property Value Type Description System.String SigningCredentials Declaration public SigningCredentials SigningCredentials { get; set; } Property Value Type Description Microsoft.IdentityModel.Tokens.SigningCredentials ValidityTimeout Declaration public TimeSpan ValidityTimeout { get; set; } Property Value Type Description System.TimeSpan"
  },
  "api/PlayGen.SUGAR.Server.Authentication.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.html",
    "title": "Namespace PlayGen.SUGAR.Server.Authentication | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Authentication Classes TokenAuthOptions TokenController Enums TokenValidity"
  },
  "api/PlayGen.SUGAR.Server.Core.Authorization.AuthorizationHandler.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Authorization.AuthorizationHandler.html",
    "title": "Class AuthorizationHandler | SUGAR",
    "keywords": "Class AuthorizationHandler Inheritance System.Object Microsoft.AspNetCore.Authorization.AuthorizationHandler < AuthorizationRequirement , System.Int32 > AuthorizationHandler Implements Microsoft.AspNetCore.Authorization.IAuthorizationHandler Inherited Members Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, System.Int32>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext) Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, System.Int32>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, System.Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Authorization Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class AuthorizationHandler : AuthorizationHandler<AuthorizationRequirement, int>, IAuthorizationHandler Constructors AuthorizationHandler(ActorClaimController, ClaimController) Declaration public AuthorizationHandler(ActorClaimController actorClaimDbController, ClaimController claimDbController) Parameters Type Name Description ActorClaimController actorClaimDbController ClaimController claimDbController Methods HandleRequirementAsync(AuthorizationHandlerContext, AuthorizationRequirement, Int32) Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, AuthorizationRequirement requirement, int entityId) Parameters Type Name Description Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context AuthorizationRequirement requirement System.Int32 entityId Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, System.Int32>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, System.Int32) Implements Microsoft.AspNetCore.Authorization.IAuthorizationHandler"
  },
  "api/PlayGen.SUGAR.Server.Core.Authorization.ClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Authorization.ClaimController.html",
    "title": "Class ClaimController | SUGAR",
    "keywords": "Class ClaimController Inheritance System.Object ClaimController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Authorization Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ClaimController Constructors ClaimController(ClaimController, RoleController, RoleClaimController) Declaration public ClaimController(ClaimController claimDbController, RoleController roleDbController, RoleClaimController roleClaimDbController) Parameters Type Name Description ClaimController claimDbController RoleController roleDbController RoleClaimController roleClaimDbController Methods Get(ClaimScope, String) Declaration public Claim Get(ClaimScope scope, string name) Parameters Type Name Description ClaimScope scope System.String name Returns Type Description Claim Get(Int32) Declaration public Claim Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Claim GetAuthorizationClaims() Declaration public void GetAuthorizationClaims()"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.ActorRoleController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.ActorRoleController.html",
    "title": "Class ActorRoleController | SUGAR",
    "keywords": "Class ActorRoleController Inheritance System.Object ActorRoleController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ActorRoleController Constructors ActorRoleController(ILogger<ActorRoleController>, ActorRoleController, RoleController) Declaration public ActorRoleController(ILogger<ActorRoleController> logger, ActorRoleController actorRoleDbController, RoleController roleController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ActorRoleController > logger ActorRoleController actorRoleDbController RoleController roleController Methods Create(ActorRole) Declaration public ActorRole Create(ActorRole newRole) Parameters Type Name Description ActorRole newRole Returns Type Description ActorRole Create(String, Int32, Int32) Declaration public void Create(string roleName, int actorId, int entityId) Parameters Type Name Description System.String roleName System.Int32 actorId System.Int32 entityId Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration public ActorRole Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description ActorRole GetActorRoles(Int32, Boolean) Declaration public List<ActorRole> GetActorRoles(int actorId, bool includeClaims = false) Parameters Type Name Description System.Int32 actorId System.Boolean includeClaims Returns Type Description System.Collections.Generic.List < ActorRole > GetActorRolesForEntity(Int32, Int32, ClaimScope) Declaration public List<Role> GetActorRolesForEntity(int actorId, int entityId, ClaimScope scope) Parameters Type Name Description System.Int32 actorId System.Int32 entityId ClaimScope scope Returns Type Description System.Collections.Generic.List < Role > GetControlled(Int32) Declaration public List<Role> GetControlled(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < Role > GetRoleActors(Int32, Int32) Declaration public List<Actor> GetRoleActors(int roleId, int entityId) Parameters Type Name Description System.Int32 roleId System.Int32 entityId Returns Type Description System.Collections.Generic.List < Actor >"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.GameController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.GameController.html",
    "title": "Class GameController | SUGAR",
    "keywords": "Class GameController Inheritance System.Object GameController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class GameController Constructors GameController(ILogger<GameController>, GameController, ActorClaimController, ActorRoleController) Declaration public GameController(ILogger<GameController> logger, GameController gameDbController, ActorClaimController actorClaimController, ActorRoleController actorRoleController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < GameController > logger GameController gameDbController ActorClaimController actorClaimController ActorRoleController actorRoleController Methods Create(Game, Int32) Declaration public Game Create(Game newGame, int creatorId) Parameters Type Name Description Game newGame System.Int32 creatorId Returns Type Description Game Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<Game> Get() Returns Type Description System.Collections.Generic.List < Game > Get(Int32) Declaration public Game Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Game GetByPermissions(Int32) Declaration public List<Game> GetByPermissions(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < Game > Search(String) Declaration public List<Game> Search(string name) Parameters Type Name Description System.String name Returns Type Description System.Collections.Generic.List < Game > Update(Game) Declaration public void Update(Game game) Parameters Type Name Description Game game Events GameDeletedEvent Declaration public static event Action<int> GameDeletedEvent Event Type Type Description System.Action < System.Int32 >"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.SessionTrackerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.SessionTrackerTests.html",
    "title": "Class SessionTrackerTests | SUGAR",
    "keywords": "Class SessionTrackerTests Inheritance System.Object CoreTestBase SessionTrackerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class SessionTrackerTests : CoreTestBase Methods CanEndSession() Is game id/user combination removed and not retrievable on session ended Declaration [Fact] public void CanEndSession() CanRemoveTimedOut() Make sure timed out sessions are removed while active ones are kept Declaration [Fact] public Task CanRemoveTimedOut() Returns Type Description System.Threading.Tasks.Task CanStartSession() Is game id/user combination added and retrievable on session started Declaration [Fact] public void CanStartSession() InactiveGetRemoved() Declaration [Fact] public Task InactiveGetRemoved() Returns Type Description System.Threading.Tasks.Task SessionRemovedOnActorRemoved() Are the sessions removed for actors that have been removed via the core controller Declaration [Fact] public void SessionRemovedOnActorRemoved() SessionRemovedOnGameRemoved() Are the sessions removed for actors in a game that has been removed via the core controller Declaration [Fact] public void SessionRemovedOnGameRemoved()"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.TestDataFixture.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.TestDataFixture.html",
    "title": "Class TestDataFixture | SUGAR",
    "keywords": "Class TestDataFixture Inheritance System.Object TestDataFixture Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class TestDataFixture : IDisposable Constructors TestDataFixture() Declaration public TestDataFixture() Fields DataCount Declaration public const int DataCount = 100000 Field Value Type Description System.Int32 FriendCount Declaration public const int FriendCount = 10 Field Value Type Description System.Int32 GameCount Declaration public const int GameCount = 100 Field Value Type Description System.Int32 GroupCount Declaration public const int GroupCount = 10 Field Value Type Description System.Int32 UserCount Declaration public const int UserCount = 100 Field Value Type Description System.Int32 Properties Games Declaration public static IReadOnlyList<Game> Games { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Game > Groups Declaration public static IReadOnlyList<Group> Groups { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Group > Users Declaration public static IReadOnlyList<User> Users { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < User > Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Tests | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Tests Classes AccountControllerTests AchievementProgressControllerTests ClearDatabaseFixtureCollection ControllerLocator CoreTestBase GameDataControllerTests Helpers LeaderboardControllerTests MatchControllerTests ResourceControllerTests SessionTrackerTests TestDataFixture"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.GameController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.GameController.html",
    "title": "Class GameController | SUGAR",
    "keywords": "Class GameController Inheritance System.Object DbController GameController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class GameController : DbController Constructors GameController(SUGARContextFactory) Declaration public GameController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Game) Declaration public Game Create(Game game) Parameters Type Name Description Game game Returns Type Description Game Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<Game> Get() Returns Type Description System.Collections.Generic.List < Game > Get(Int32) Declaration public Game Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Game Search(String) Declaration public List<Game> Search(string name) Parameters Type Name Description System.String name Returns Type Description System.Collections.Generic.List < Game > Update(Game) Declaration public void Update(Game game) Parameters Type Name Description Game game"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.GroupController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.GroupController.html",
    "title": "Class GroupController | SUGAR",
    "keywords": "Class GroupController Inheritance System.Object DbController GroupController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class GroupController : DbController Constructors GroupController(SUGARContextFactory) Declaration public GroupController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Group) Declaration public Group Create(Group group) Parameters Type Name Description Group group Returns Type Description Group Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<Group> Get() Returns Type Description System.Collections.Generic.List < Group > Get(Int32) Declaration public Group Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Group Get(String) Declaration public List<Group> Get(string name) Parameters Type Name Description System.String name Returns Type Description System.Collections.Generic.List < Group > Update(Group) Declaration public void Update(Group group) Parameters Type Name Description Group group"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.LeaderboardController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.LeaderboardController.html",
    "title": "Class LeaderboardController | SUGAR",
    "keywords": "Class LeaderboardController Inheritance System.Object DbController LeaderboardController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class LeaderboardController : DbController Constructors LeaderboardController(SUGARContextFactory) Declaration public LeaderboardController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Leaderboard) Declaration public Leaderboard Create(Leaderboard leaderboard) Parameters Type Name Description Leaderboard leaderboard Returns Type Description Leaderboard Delete(String, Int32) Declaration public void Delete(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Get(String, Int32) Declaration public Leaderboard Get(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Returns Type Description Leaderboard GetByGame(Int32) Declaration public List<Leaderboard> GetByGame(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < Leaderboard > Update(Leaderboard) Declaration public void Update(Leaderboard leaderboard) Parameters Type Name Description Leaderboard leaderboard"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.MatchController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.MatchController.html",
    "title": "Class MatchController | SUGAR",
    "keywords": "Class MatchController Inheritance System.Object DbController MatchController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class MatchController : DbController Constructors MatchController(SUGARContextFactory) Declaration public MatchController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(Match) Declaration public Match Create(Match match) Parameters Type Name Description Match match Returns Type Description Match Delete(Int32) Declaration public void Delete(int matchId) Parameters Type Name Description System.Int32 matchId Get(Int32) Declaration public Match Get(int matchId) Parameters Type Name Description System.Int32 matchId Returns Type Description Match GetByCreator(Int32) Declaration public List<Match> GetByCreator(int creatorId) Parameters Type Name Description System.Int32 creatorId Returns Type Description System.Collections.Generic.List < Match > GetByCreator(Int32, Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByCreator(int creatorId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 creatorId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetByGame(Int32) Declaration public List<Match> GetByGame(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < Match > GetByGame(Int32, Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByGame(int gameId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 gameId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetByGameAndCreator(Int32, Int32) Declaration public List<Match> GetByGameAndCreator(int gameId, int creatorId) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId Returns Type Description System.Collections.Generic.List < Match > GetByGameAndCreator(Int32, Int32, Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByGameAndCreator(int gameId, int creatorId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetByTime(Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByTime(DateTime? start, DateTime? end) Parameters Type Name Description System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > Update(Match) Declaration public Match Update(Match match) Parameters Type Name Description Match match Returns Type Description Match"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorRoleConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorRoleConfig.html",
    "title": "Class ActorRoleConfig | SUGAR",
    "keywords": "Class ActorRoleConfig Inheritance System.Object ActorRoleConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < ActorRole > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorRoleConfig : IEntityTypeConfiguration<ActorRole> Methods Configure(EntityTypeBuilder<ActorRole>) Declaration public void Configure(EntityTypeBuilder<ActorRole> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < ActorRole > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.EvaluationConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.EvaluationConfig.html",
    "title": "Class EvaluationConfig | SUGAR",
    "keywords": "Class EvaluationConfig Inheritance System.Object EvaluationConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Evaluation > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class EvaluationConfig : IEntityTypeConfiguration<Evaluation> Methods Configure(EntityTypeBuilder<Evaluation>) Declaration public void Configure(EntityTypeBuilder<Evaluation> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Evaluation > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.EvaluationCriteriaConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.EvaluationCriteriaConfig.html",
    "title": "Class EvaluationCriteriaConfig | SUGAR",
    "keywords": "Class EvaluationCriteriaConfig Inheritance System.Object EvaluationCriteriaConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < EvaluationCriteria > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class EvaluationCriteriaConfig : IEntityTypeConfiguration<EvaluationCriteria> Methods Configure(EntityTypeBuilder<EvaluationCriteria>) Declaration public void Configure(EntityTypeBuilder<EvaluationCriteria> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < EvaluationCriteria > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.EvaluationDataConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.EvaluationDataConfig.html",
    "title": "Class EvaluationDataConfig | SUGAR",
    "keywords": "Class EvaluationDataConfig Inheritance System.Object EvaluationDataConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < EvaluationData > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class EvaluationDataConfig : IEntityTypeConfiguration<EvaluationData> Methods Configure(EntityTypeBuilder<EvaluationData>) Declaration public void Configure(EntityTypeBuilder<EvaluationData> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < EvaluationData > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework.Exceptions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework.Exceptions Classes DbExceptionHandler DuplicateRecordException MissingRecordException"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.ActorDataExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.ActorDataExtensions.html",
    "title": "Class ActorDataExtensions | SUGAR",
    "keywords": "Class ActorDataExtensions Inheritance System.Object ActorDataExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Extensions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public static class ActorDataExtensions Methods FilterByActorId(SUGARContext, Int32) Declaration public static IQueryable<ActorData> FilterByActorId(this SUGARContext context, int actorId) Parameters Type Name Description SUGARContext context System.Int32 actorId Returns Type Description System.Linq.IQueryable < ActorData > FilterByGameId(IQueryable<ActorData>, Int32) Declaration public static IQueryable<ActorData> FilterByGameId(this IQueryable<ActorData> actorDataQueryable, int gameId) Parameters Type Name Description System.Linq.IQueryable < ActorData > actorDataQueryable System.Int32 gameId Returns Type Description System.Linq.IQueryable < ActorData > FilterByIds(SUGARContext, List<Int32>) Declaration public static IQueryable<ActorData> FilterByIds(this SUGARContext context, List<int> ids) Parameters Type Name Description SUGARContext context System.Collections.Generic.List < System.Int32 > ids Returns Type Description System.Linq.IQueryable < ActorData > FilterByKey(IQueryable<ActorData>, String) Declaration public static IQueryable<ActorData> FilterByKey(this IQueryable<ActorData> actorDataQueryable, string key) Parameters Type Name Description System.Linq.IQueryable < ActorData > actorDataQueryable System.String key Returns Type Description System.Linq.IQueryable < ActorData > FilterByKeys(IQueryable<ActorData>, ICollection<String>) Declaration public static IQueryable<ActorData> FilterByKeys(this IQueryable<ActorData> actorDataQueryable, ICollection<string> keys) Parameters Type Name Description System.Linq.IQueryable < ActorData > actorDataQueryable System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Linq.IQueryable < ActorData >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.ContextExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.ContextExtensions.html",
    "title": "Class ContextExtensions | SUGAR",
    "keywords": "Class ContextExtensions Inheritance System.Object ContextExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Extensions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public static class ContextExtensions Methods HandleDetatchedActor(SUGARContext, Actor) Declaration public static void HandleDetatchedActor(this SUGARContext context, Actor actor) Parameters Type Name Description SUGARContext context Actor actor HandleDetatchedActor(SUGARContext, Int32) Declaration public static void HandleDetatchedActor(this SUGARContext context, int actorId) Parameters Type Name Description SUGARContext context System.Int32 actorId HandleDetatchedGame(SUGARContext, Int32) Declaration public static void HandleDetatchedGame(this SUGARContext context, int gameId) Parameters Type Name Description SUGARContext context System.Int32 gameId HandleDetatchedGameData(SUGARContext, EvaluationData) Declaration public static void HandleDetatchedGameData(this SUGARContext context, EvaluationData evaluationData) Parameters Type Name Description SUGARContext context EvaluationData evaluationData"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.DbSetExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.DbSetExtensions.html",
    "title": "Class DbSetExtensions | SUGAR",
    "keywords": "Class DbSetExtensions Functionality missing from EF.Core that was available in EF 6 Inheritance System.Object DbSetExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Extensions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public static class DbSetExtensions Methods IncludeAll(DbSet<Account>) Declaration public static IQueryable<Account> IncludeAll(this DbSet<Account> dbSet) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbSet < Account > dbSet Returns Type Description System.Linq.IQueryable < Account > IncludeAll(DbSet<Evaluation>) Declaration public static IQueryable<Evaluation> IncludeAll(this DbSet<Evaluation> dbSet) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbSet < Evaluation > dbSet Returns Type Description System.Linq.IQueryable < Evaluation > IncludeAll(DbSet<Group>) Declaration public static IQueryable<Group> IncludeAll(this DbSet<Group> dbSet) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbSet < Group > dbSet Returns Type Description System.Linq.IQueryable < Group > IncludeAll(DbSet<Match>) Declaration public static IQueryable<Match> IncludeAll(this DbSet<Match> dbSet) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbSet < Match > dbSet Returns Type Description System.Linq.IQueryable < Match > IncludeAll(DbSet<User>) Declaration public static IQueryable<User> IncludeAll(this DbSet<User> dbSet) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbSet < User > dbSet Returns Type Description System.Linq.IQueryable < User >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.SUGARContextFactory.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.SUGARContextFactory.html",
    "title": "Class SUGARContextFactory | SUGAR",
    "keywords": "Class SUGARContextFactory Inheritance System.Object SUGARContextFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class SUGARContextFactory Constructors SUGARContextFactory(String) Declaration public SUGARContextFactory(string connectionString = null) Parameters Type Name Description System.String connectionString Fields ConnectionString Declaration public readonly string ConnectionString Field Value Type Description System.String Methods ApplyOptions(DbContextOptionsBuilder) Declaration public DbContextOptionsBuilder ApplyOptions(DbContextOptionsBuilder options) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder options Returns Type Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder Create() Declaration public SUGARContext Create() Returns Type Description SUGARContext"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.AccountControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.AccountControllerTests.html",
    "title": "Class AccountControllerTests | SUGAR",
    "keywords": "Class AccountControllerTests Inheritance System.Object EntityFrameworkTestBase AccountControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class AccountControllerTests : EntityFrameworkTestBase Methods CreateAndGetAccount() Declaration [Fact] public void CreateAndGetAccount() CreateDuplicateAccount() Declaration [Fact] public void CreateDuplicateAccount() DeleteExistingAccount() Declaration [Fact] public void DeleteExistingAccount() DeleteNonExistingAccount() Declaration [Fact] public void DeleteNonExistingAccount() GetMultipleAccountsByName() Declaration [Fact] public void GetMultipleAccountsByName() GetNonExistingAccounts() Declaration [Fact] public void GetNonExistingAccounts()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.AchievementControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.AchievementControllerTests.html",
    "title": "Class AchievementControllerTests | SUGAR",
    "keywords": "Class AchievementControllerTests Inheritance System.Object EntityFrameworkTestBase AchievementControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class AchievementControllerTests : EntityFrameworkTestBase Methods CreateAndGetAchievement() Declaration [Fact] public void CreateAndGetAchievement() CreateAndGetGlobalAchievement() Declaration [Fact] public void CreateAndGetGlobalAchievement() CreateDuplicateAchievement() Declaration [Fact] public void CreateDuplicateAchievement() DeleteExistingAchievement() Declaration [Fact] public void DeleteExistingAchievement() DeleteNonExistingGroupAchievement() Declaration [Fact] public void DeleteNonExistingGroupAchievement() GetAchievementsByGame() Declaration [Fact] public void GetAchievementsByGame() GetAchievementsByNonExistingGame() Declaration [Fact] public void GetAchievementsByNonExistingGame() GetNonExistingAchievement() Declaration [Fact] public void GetNonExistingAchievement() UpdateAchievement() Declaration [Fact] public void UpdateAchievement() UpdateAchievementToDuplicateName() Declaration [Fact] public void UpdateAchievementToDuplicateName() UpdateNonExistingAchievement() Declaration [Fact] public void UpdateNonExistingAchievement()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.ClearDatabaseFixture.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.ClearDatabaseFixture.html",
    "title": "Class ClearDatabaseFixture | SUGAR",
    "keywords": "Class ClearDatabaseFixture Inheritance System.Object ClearDatabaseFixture Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class ClearDatabaseFixture Constructors ClearDatabaseFixture() Declaration public ClearDatabaseFixture()"
  },
  "api/PlayGen.SUGAR.Server.Model.ActorClaim.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.ActorClaim.html",
    "title": "Class ActorClaim | SUGAR",
    "keywords": "Class ActorClaim Inheritance System.Object ActorClaim Implements System.IEquatable < ActorClaim > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class ActorClaim : IEquatable<ActorClaim> Properties Actor Declaration public Actor Actor { get; set; } Property Value Type Description Actor ActorId Declaration public int ActorId { get; set; } Property Value Type Description System.Int32 Claim Declaration public Claim Claim { get; set; } Property Value Type Description Claim ClaimId Declaration public int ClaimId { get; set; } Property Value Type Description System.Int32 EntityId Declaration public int EntityId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Methods Equals(ActorClaim) Declaration public bool Equals(ActorClaim other) Parameters Type Name Description ActorClaim other Returns Type Description System.Boolean Implements System.IEquatable<T> Extension Methods ActorClaimExtensions.ToContract(ActorClaim)"
  },
  "api/PlayGen.SUGAR.Server.Model.ActorData.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.ActorData.html",
    "title": "Class ActorData | SUGAR",
    "keywords": "Class ActorData Inheritance System.Object ActorData Implements IModificationHistory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class ActorData : IModificationHistory Properties ActorId Declaration public int ActorId { get; set; } Property Value Type Description System.Int32 DateCreated Declaration public DateTime DateCreated { get; set; } Property Value Type Description System.DateTime DateModified Declaration public DateTime DateModified { get; set; } Property Value Type Description System.DateTime EvaluationDataType Declaration public EvaluationDataType EvaluationDataType { get; set; } Property Value Type Description EvaluationDataType GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Key Declaration public string Key { get; set; } Property Value Type Description System.String Value Declaration public string Value { get; set; } Property Value Type Description System.String Implements IModificationHistory Extension Methods ActorDataExtensions.ToContract(ActorData)"
  },
  "api/PlayGen.SUGAR.Server.Model.ActorRelationship.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.ActorRelationship.html",
    "title": "Class ActorRelationship | SUGAR",
    "keywords": "Class ActorRelationship Inheritance System.Object ActorRelationship Implements IRelationship Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class ActorRelationship : IRelationship Properties Acceptor Declaration public Actor Acceptor { get; set; } Property Value Type Description Actor AcceptorId Declaration public int AcceptorId { get; set; } Property Value Type Description System.Int32 Requestor Declaration public Actor Requestor { get; set; } Property Value Type Description Actor RequestorId Declaration public int RequestorId { get; set; } Property Value Type Description System.Int32 Implements IRelationship Extension Methods RelationshipExtensions.ToContract(ActorRelationship)"
  },
  "api/PlayGen.SUGAR.Server.Model.ActorRelationshipRequest.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.ActorRelationshipRequest.html",
    "title": "Class ActorRelationshipRequest | SUGAR",
    "keywords": "Class ActorRelationshipRequest Inheritance System.Object ActorRelationshipRequest Implements IRelationship Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class ActorRelationshipRequest : IRelationship Properties Acceptor Declaration public Actor Acceptor { get; set; } Property Value Type Description Actor AcceptorId Declaration public int AcceptorId { get; set; } Property Value Type Description System.Int32 Requestor Declaration public Actor Requestor { get; set; } Property Value Type Description Actor RequestorId Declaration public int RequestorId { get; set; } Property Value Type Description System.Int32 Implements IRelationship"
  },
  "api/PlayGen.SUGAR.Server.Model.Match.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Match.html",
    "title": "Class Match | SUGAR",
    "keywords": "Class Match Inheritance System.Object Match Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Match Properties Creator Declaration public virtual User Creator { get; set; } Property Value Type Description User CreatorId Declaration public int CreatorId { get; set; } Property Value Type Description System.Int32 Data Declaration public virtual List<EvaluationData> Data { get; set; } Property Value Type Description System.Collections.Generic.List < EvaluationData > Ended Declaration public DateTime? Ended { get; set; } Property Value Type Description System.Nullable < System.DateTime > Game Declaration public virtual Game Game { get; set; } Property Value Type Description Game GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Started Declaration public DateTime? Started { get; set; } Property Value Type Description System.Nullable < System.DateTime > Extension Methods MatchExtensions.ToContract(Match)"
  },
  "api/PlayGen.SUGAR.Server.Model.Reward.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Reward.html",
    "title": "Class Reward | SUGAR",
    "keywords": "Class Reward Inheritance System.Object Reward Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Reward Properties Evaluation Declaration public Evaluation Evaluation { get; set; } Property Value Type Description Evaluation EvaluationDataCategory Declaration public EvaluationDataCategory EvaluationDataCategory { get; set; } Property Value Type Description EvaluationDataCategory EvaluationDataKey Declaration public string EvaluationDataKey { get; set; } Property Value Type Description System.String EvaluationDataType Declaration public EvaluationDataType EvaluationDataType { get; set; } Property Value Type Description EvaluationDataType EvaluationId Declaration public int EvaluationId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Value Declaration public string Value { get; set; } Property Value Type Description System.String Extension Methods RewardExtensions.ToContract(Reward)"
  },
  "api/PlayGen.SUGAR.Server.Model.Role.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Role.html",
    "title": "Class Role | SUGAR",
    "keywords": "Class Role Inheritance System.Object Role Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Role Properties ClaimScope Declaration public ClaimScope ClaimScope { get; set; } Property Value Type Description ClaimScope Default Declaration public bool Default { get; set; } Property Value Type Description System.Boolean Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String RoleClaims Declaration public virtual List<RoleClaim> RoleClaims { get; set; } Property Value Type Description System.Collections.Generic.List < RoleClaim > Extension Methods RoleExtensions.ToContract(Role)"
  },
  "api/PlayGen.SUGAR.Server.Model.RoleClaim.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.RoleClaim.html",
    "title": "Class RoleClaim | SUGAR",
    "keywords": "Class RoleClaim Inheritance System.Object RoleClaim Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class RoleClaim Properties Claim Declaration public Claim Claim { get; set; } Property Value Type Description Claim ClaimId Declaration public int ClaimId { get; set; } Property Value Type Description System.Int32 Role Declaration public Role Role { get; set; } Property Value Type Description Role RoleId Declaration public int RoleId { get; set; } Property Value Type Description System.Int32 Extension Methods RoleClaimExtensions.ToContract(RoleClaim)"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GroupController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GroupController.html",
    "title": "Class GroupController | SUGAR",
    "keywords": "Class GroupController Web Controller that facilitates Group specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller GroupController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class GroupController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors GroupController(GroupController, IAuthorizationService) Declaration public GroupController(GroupController groupCoreController, IAuthorizationService authorizationService) Parameters Type Name Description GroupController groupCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(GroupRequest) Create a new Group. Requires the to be unique for Groups. Example Usage: POST api/group Declaration [HttpPost] public IActionResult Create([FromBody] GroupRequest actor) Parameters Type Name Description GroupRequest actor object that holds the details of the new Group. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A containing the new Group details. Delete(Int32) Delete group with the provided. Example Usage: DELETE api/group/1 Declaration [HttpDelete(\"{id:int}\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id Group ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get() Get a list of all Groups. Example Usage: GET api/group/list Declaration [HttpGet(\"list\")] public IActionResult Get() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of that hold Group details. Get(Int32) Get Group that matches provided. Example Usage: GET api/group/findbyid/1 Declaration [HttpGet(\"findbyid/{id:int}\", Name = \"GetByGroupId\")] public IActionResult Get([FromRoute] int id) Parameters Type Name Description System.Int32 id Group id. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult which matches search criteria. Get(String) Get a list of Groups that match provided. Example Usage: GET api/group/find/group1 Declaration [HttpGet(\"find/{name}\")] public IActionResult Get([FromRoute] string name) Parameters Type Name Description System.String name Group name. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. GetControlled() Get a list of all Groups this Actor has control over. Example Usage: GET api/group/controlled Declaration [HttpGet(\"controlled\")] public IActionResult GetControlled() Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of that hold Group details. Update(Int32, GroupRequest) Update an existing Group. Example Usage: PUT api/group/update/1 Declaration [HttpPut(\"update/{id:int}\")] public Task<IActionResult> Update([FromRoute] int id, [FromBody] GroupRequest group) Parameters Type Name Description System.Int32 id Id of the existing Group. GroupRequest group object that holds the details of the Group. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GroupMemberController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.GroupMemberController.html",
    "title": "Class GroupMemberController | SUGAR",
    "keywords": "Class GroupMemberController Web Controller that facilitates User to Group relationship specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller GroupMemberController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class GroupMemberController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors GroupMemberController(RelationshipController, IAuthorizationService) Declaration public GroupMemberController(RelationshipController relationshipController, IAuthorizationService authorizationService) Parameters Type Name Description RelationshipController relationshipController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods CreateMemberRequest(RelationshipRequest) Create a new relationship request between the User and Group. Requires a relationship between the User and Group to not already exist. Example Usage: POST api/groupmember Declaration [HttpPost] public Task<IActionResult> CreateMemberRequest([FromBody] RelationshipRequest relationship) Parameters Type Name Description RelationshipRequest relationship object that holds the details of the new relationship request. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new Relationship details. GetMemberCount(Int32) Get a count of users that have a relationship with this . Example Usage: GET api/groupmember/membercount/1 Declaration [HttpGet(\"membercount/{groupId:int}\")] public IActionResult GetMemberCount([FromRoute] int groupId) Parameters Type Name Description System.Int32 groupId ID of the group. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A count of members in the group that matches the search criteria. GetMemberRequests(Int32) Get a list of all Users that have relationship requests for this . Example Usage: GET api/groupmember/requests/1 Declaration [HttpGet(\"requests/{groupId:int}\")] public Task<IActionResult> GetMemberRequests([FromRoute] int groupId) Parameters Type Name Description System.Int32 groupId ID of the group. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. GetMembers(Int32) Get a list of all Users that have relationships with this . Example Usage: GET api/groupmember/members/1 Declaration [HttpGet(\"members/{groupId:int}\")] public IActionResult GetMembers([FromRoute] int groupId) Parameters Type Name Description System.Int32 groupId ID of the group. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. GetSentRequests(Int32) Get a list of all Groups that have been sent relationship requests for this . Example Usage: GET api/groupmember/sentrequests/1 Declaration [HttpGet(\"sentrequests/{userId:int}\")] public Task<IActionResult> GetSentRequests([FromRoute] int userId) Parameters Type Name Description System.Int32 userId ID of the user. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. GetUserGroups(Int32) Get a list of all Groups that have relationships with this . Example Usage: GET api/groupmember/usergroups/1 Declaration [HttpGet(\"usergroups/{userId:int}\")] public IActionResult GetUserGroups([FromRoute] int userId) Parameters Type Name Description System.Int32 userId ID of the User. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. UpdateMember(RelationshipStatusUpdate) Update an existing relationship between and . Requires the relationship to already exist between the User and Group. Example Usage: PUT api/groupmember Declaration [HttpPut] public Task<IActionResult> UpdateMember([FromBody] RelationshipStatusUpdate relationship) Parameters Type Name Description RelationshipStatusUpdate relationship object that holds the details of the relationship. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > UpdateMemberRequest(RelationshipStatusUpdate) Update an existing relationship request between and . Requires the relationship request to already exist between the User and Group. Example Usage: PUT api/groupmember/request Declaration [HttpPut(\"request\")] public Task<IActionResult> UpdateMemberRequest([FromBody] RelationshipStatusUpdate relationship) Parameters Type Name Description RelationshipStatusUpdate relationship object that holds the details of the relationship. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.LeaderboardsController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.LeaderboardsController.html",
    "title": "Class LeaderboardsController | SUGAR",
    "keywords": "Class LeaderboardsController Web Controller that facilitates Leaderboard specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller LeaderboardsController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class LeaderboardsController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors LeaderboardsController(LeaderboardController, LeaderboardController, IAuthorizationService) Declaration public LeaderboardsController(LeaderboardController leaderboardController, LeaderboardController leaderboardEvaluationController, IAuthorizationService authorizationService) Parameters Type Name Description LeaderboardController leaderboardController LeaderboardController leaderboardEvaluationController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(LeaderboardRequest) Create a new Leaderboard. Requires and to be unique to that . Example Usage: POST api/leaderboards/create Declaration [HttpPost(\"create\")] public Task<IActionResult> Create([FromBody] LeaderboardRequest newLeaderboard) Parameters Type Name Description LeaderboardRequest newLeaderboard object that holds the details of the new Leaderboard. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Returns a object containing details for the newly created Leaderboard. Delete(String, Int32) Delete Leaderboard with the and provided. Example Usage: DELETE api/leaderboards/LEADERBOARD_TOKEN/1 Declaration [HttpDelete(\"{token}/global\")] [HttpDelete(\"{token}/{gameId:int}\")] public Task<IActionResult> Delete([FromRoute] string token, [FromRoute] int gameId) Parameters Type Name Description System.String token Token of Leaderboard System.Int32 gameId ID of the Game the Leaderboard is for Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get(Int32) Find a list of leaderboards that match . If global is provided instead of a gameId, get all global leaderboards, ie. leaderboards that are not associated with a specific game. Example Usage: GET api/leaderboards/game/1/list Declaration [HttpGet(\"global/list\")] [HttpGet(\"game/{gameId:int}/list\")] public IActionResult Get([FromRoute] int gameId) Parameters Type Name Description System.Int32 gameId Game ID Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns multiple that hold Leaderboard details Get(String, Int32) Find a single leaderboard matching the token and gameId. Example Usage: GET api/leaderboards/LEADERBOARD_TOKEN/1 Declaration [HttpGet(\"{token}/global\")] [HttpGet(\"{token}/{gameId:int}\")] public IActionResult Get([FromRoute] string token, [FromRoute] int gameId) Parameters Type Name Description System.String token Token System.Int32 gameId Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns a single that holds Leaderboard details GetLeaderboardStandings(LeaderboardStandingsRequest) Get the standings for a Leaderboard using a . Example Usage: POST api/leaderboards/standings Declaration [HttpPost(\"standings\")] public IActionResult GetLeaderboardStandings([FromBody] LeaderboardStandingsRequest leaderboardDetails) Parameters Type Name Description LeaderboardStandingsRequest leaderboardDetails object that holds the details that are wanted from the Leaderboard. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult Returns multiple that hold actor positions in the leaderboard. Update(LeaderboardRequest) Update an existing Leaderboard. Example Usage: PUT api/leaderboards/update Declaration [HttpPut(\"update\")] public Task<IActionResult> Update([FromBody] LeaderboardRequest leaderboard) Parameters Type Name Description LeaderboardRequest leaderboard object that holds the details of the Leaderboard. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.MatchController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.MatchController.html",
    "title": "Class MatchController | SUGAR",
    "keywords": "Class MatchController Web controller that facillitates Match specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller MatchController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class MatchController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors MatchController(MatchController, IAuthorizationService) Declaration public MatchController(MatchController matchCoreController, IAuthorizationService authorizationService) Parameters Type Name Description MatchController matchCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Add(EvaluationDataRequest) Create a new GameData record. Example Usage: POST api/match/1/data Declaration [HttpPost] public Task<IActionResult> Add([FromBody] EvaluationDataRequest newData) Parameters Type Name Description EvaluationDataRequest newData object that holds the details of the new Match Data. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new Match Data details. Create() Method to create a match for a game a user is currently logged into Example Usage: GET api/match/create Declaration [HttpGet(\"create\")] public Task<IActionResult> Create() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > The newly created Create(Int32) Method for admins to creates a match for a game they are not logged into. Example Usage: GET api/match/create/1 Declaration [HttpGet(\"create/{gameId:int}\")] public Task<IActionResult> Create(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > The newly created CreateAndStart() Method to create a match for a game a user is currently logged into which is also started automatically. Example Usage: GET api/match/create Declaration [HttpGet(\"createandstart\")] public Task<IActionResult> CreateAndStart() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > The newly created End(Int32) Ends a match for the game that the user is currently logged in for. Example Usage: GET api/match/1/end Declaration [HttpGet(\"{matchId:int}/end\")] public Task<IActionResult> End([FromRoute] int matchId) Parameters Type Name Description System.Int32 matchId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > End(Int32, Int32) Method for admins to end a match for a game they are not logged into. Example Usage: GET api/match/1/end Declaration [HttpGet(\"{gameId:int}/{matchId:int}/end\")] public Task<IActionResult> End([FromRoute] int gameId, [FromRoute] int matchId) Parameters Type Name Description System.Int32 gameId System.Int32 matchId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Get(Int32, String[]) Find a list of all MatchData that match the input parameters. Example Usage: GET api/match/1/data Declaration [HttpGet] public IActionResult Get(int matchId, string[] keys) Parameters Type Name Description System.Int32 matchId Id of a User/Group. System.String [] keys Array of Key names. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of which match the search criteria. GetByCreator(Int32) Get a list of matches that were created by a specific actor. Example Usage: GET api/match/creator/1 Declaration [HttpGet(\"creator/{creatorId:int}\")] public IActionResult GetByCreator(int creatorId) Parameters Type Name Description System.Int32 creatorId Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of GetByCreator(Int32, Nullable<DateTime>, Nullable<DateTime>) Get a list of matches that were created by a specific actor, filtered by a time range. Example Usage: GET api/match/creator/1/2016-12-20T15:40:30/2016-12-20T16:50:40 Declaration [HttpGet(\"creator/{creatorId:int}/{start:datetime}/{end:datetime}\")] public IActionResult GetByCreator(int creatorId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 creatorId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of GetByGame(Int32) Get a list of matches for a specific game. Example Usage: GET api/match/game/1 Declaration [HttpGet(\"game/{gameId:int}\")] public IActionResult GetByGame(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of GetByGame(Int32, Nullable<DateTime>, Nullable<DateTime>) Get a list of matches for a specific game, filtered by a time range. Example Usage: GET api/match/game/1/2016-12-20T15:40:30/2016-12-20T16:50:40 Declaration [HttpGet(\"game/{gameId:int}/{start:datetime}/{end:datetime}\")] public IActionResult GetByGame(int gameId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 gameId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of GetByGameAndCreator(Int32, Int32) Get a list of matches for a specific game created by a specific actor. Example Usage: GET api/match/game/1/creator/1 Declaration [HttpGet(\"game/{gameId:int}/creator/{creatorId:int}\")] public IActionResult GetByGameAndCreator(int gameId, int creatorId) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of GetByGameAndCreator(Int32, Int32, Nullable<DateTime>, Nullable<DateTime>) Get a list of matches for a specific game created by a specific user, filtered by a time range. Example Usage: GET api/match/game/1/creator/1/2016-12-20T15:40:30/2016-12-20T16:50:40 Declaration [HttpGet(\"game/{gameId:int}/creator/{creatorId:int}/{start:datetime}/{end:datetime}\")] public IActionResult GetByGameAndCreator(int gameId, int creatorId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of GetByTime(Nullable<DateTime>, Nullable<DateTime>) Get a list of matches filtered by a time range. Example Usage: GET api/match/2016-12-20T15:40:30/2016-12-20T16:50:40 Declaration [HttpGet(\"{start:datetime}/{end:datetime}\")] public IActionResult GetByTime(DateTime? start, DateTime? end) Parameters Type Name Description System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A list of Start(Int32) Start a match for the game the user is currently logged into. Example Usage: GET api/match/1/start Declaration [HttpGet(\"{matchId:int}/start\")] public Task<IActionResult> Start(int matchId) Parameters Type Name Description System.Int32 matchId Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorRoleExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ActorRoleExtensions.html",
    "title": "Class ActorRoleExtensions | SUGAR",
    "keywords": "Class ActorRoleExtensions Inheritance System.Object ActorRoleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class ActorRoleExtensions Methods ToContract(ActorRole) Declaration public static ActorRoleResponse ToContract(this ActorRole actorRoleModel) Parameters Type Name Description ActorRole actorRoleModel Returns Type Description ActorRoleResponse ToContractList(IEnumerable<ActorRole>) Declaration public static IEnumerable<ActorRoleResponse> ToContractList(this IEnumerable<ActorRole> actorRoleModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < ActorRole > actorRoleModels Returns Type Description System.Collections.Generic.IEnumerable < ActorRoleResponse > ToModel(ActorRoleRequest) Declaration public static ActorRole ToModel(this ActorRoleRequest actorRoleContract) Parameters Type Name Description ActorRoleRequest actorRoleContract Returns Type Description ActorRole"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ClaimExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.ClaimExtensions.html",
    "title": "Class ClaimExtensions | SUGAR",
    "keywords": "Class ClaimExtensions Inheritance System.Object ClaimExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class ClaimExtensions Methods ToContract(Claim) Declaration public static ClaimResponse ToContract(this Claim claimModel) Parameters Type Name Description Claim claimModel Returns Type Description ClaimResponse ToContractList(IEnumerable<Claim>) Declaration public static IEnumerable<ClaimResponse> ToContractList(this IEnumerable<Claim> claimModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < Claim > claimModels Returns Type Description System.Collections.Generic.IEnumerable < ClaimResponse >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.EvaluationCriteriaExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.EvaluationCriteriaExtensions.html",
    "title": "Class EvaluationCriteriaExtensions | SUGAR",
    "keywords": "Class EvaluationCriteriaExtensions Inheritance System.Object EvaluationCriteriaExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class EvaluationCriteriaExtensions Methods ToContract(EvaluationCriteria) Declaration public static EvaluationCriteriaResponse ToContract(this EvaluationCriteria completionCriteria) Parameters Type Name Description EvaluationCriteria completionCriteria Returns Type Description EvaluationCriteriaResponse ToContractList(List<EvaluationCriteria>) Declaration public static List<EvaluationCriteriaResponse> ToContractList(this List<EvaluationCriteria> completionCriterias) Parameters Type Name Description System.Collections.Generic.List < EvaluationCriteria > completionCriterias Returns Type Description System.Collections.Generic.List < EvaluationCriteriaResponse > ToModel(EvaluationCriteriaCreateRequest) Declaration public static EvaluationCriteria ToModel(this EvaluationCriteriaCreateRequest completionCriteria) Parameters Type Name Description EvaluationCriteriaCreateRequest completionCriteria Returns Type Description EvaluationCriteria ToModel(EvaluationCriteriaUpdateRequest) Declaration public static EvaluationCriteria ToModel(this EvaluationCriteriaUpdateRequest completionCriteria) Parameters Type Name Description EvaluationCriteriaUpdateRequest completionCriteria Returns Type Description EvaluationCriteria ToModelList(List<EvaluationCriteriaCreateRequest>) Declaration public static List<EvaluationCriteria> ToModelList(this List<EvaluationCriteriaCreateRequest> completionCriterias) Parameters Type Name Description System.Collections.Generic.List < EvaluationCriteriaCreateRequest > completionCriterias Returns Type Description System.Collections.Generic.List < EvaluationCriteria > ToModelList(List<EvaluationCriteriaUpdateRequest>) Declaration public static List<EvaluationCriteria> ToModelList(this List<EvaluationCriteriaUpdateRequest> completionCriterias) Parameters Type Name Description System.Collections.Generic.List < EvaluationCriteriaUpdateRequest > completionCriterias Returns Type Description System.Collections.Generic.List < EvaluationCriteria >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.EvaluationDataExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.EvaluationDataExtensions.html",
    "title": "Class EvaluationDataExtensions | SUGAR",
    "keywords": "Class EvaluationDataExtensions Inheritance System.Object EvaluationDataExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class EvaluationDataExtensions Methods ToContract(EvaluationData) Declaration public static EvaluationDataResponse ToContract(this EvaluationData evaluationData) Parameters Type Name Description EvaluationData evaluationData Returns Type Description EvaluationDataResponse ToContractList(List<EvaluationData>) Declaration public static List<EvaluationDataResponse> ToContractList(this List<EvaluationData> models) Parameters Type Name Description System.Collections.Generic.List < EvaluationData > models Returns Type Description System.Collections.Generic.List < EvaluationDataResponse >"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.GameDataExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.GameDataExtensions.html",
    "title": "Class GameDataExtensions | SUGAR",
    "keywords": "Class GameDataExtensions Inheritance System.Object GameDataExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class GameDataExtensions Methods ToGameDataModel(EvaluationDataRequest) Declaration public static EvaluationData ToGameDataModel(this EvaluationDataRequest contract) Parameters Type Name Description EvaluationDataRequest contract Returns Type Description EvaluationData"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.GameExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.GameExtensions.html",
    "title": "Class GameExtensions | SUGAR",
    "keywords": "Class GameExtensions Inheritance System.Object GameExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class GameExtensions Methods ToContract(Game) Declaration public static GameResponse ToContract(this Game gameModel) Parameters Type Name Description Game gameModel Returns Type Description GameResponse ToContractList(IEnumerable<Game>) Declaration public static IEnumerable<GameResponse> ToContractList(this IEnumerable<Game> gameModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < Game > gameModels Returns Type Description System.Collections.Generic.IEnumerable < GameResponse > ToModel(GameRequest) Declaration public static Game ToModel(this GameRequest gameContract) Parameters Type Name Description GameRequest gameContract Returns Type Description Game"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.GroupExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.GroupExtensions.html",
    "title": "Class GroupExtensions | SUGAR",
    "keywords": "Class GroupExtensions Inheritance System.Object GroupExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class GroupExtensions Methods ToContract(Group) Declaration public static GroupResponse ToContract(this Group groupModel) Parameters Type Name Description Group groupModel Returns Type Description GroupResponse ToContractList(IEnumerable<Group>) Declaration public static IEnumerable<GroupResponse> ToContractList(this IEnumerable<Group> groupModels) Parameters Type Name Description System.Collections.Generic.IEnumerable < Group > groupModels Returns Type Description System.Collections.Generic.IEnumerable < GroupResponse > ToGroupModel(GroupRequest) Declaration public static Group ToGroupModel(this GroupRequest groupContract) Parameters Type Name Description GroupRequest groupContract Returns Type Description Group"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Extensions.HttpContextExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Extensions.HttpContextExtensions.html",
    "title": "Class HttpContextExtensions | SUGAR",
    "keywords": "Class HttpContextExtensions Inheritance System.Object HttpContextExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Extensions Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public static class HttpContextExtensions Methods GetCustomClassAttribute<T>(ActionDescriptor) Declaration public static T GetCustomClassAttribute<T>(this ActionDescriptor actionDescriptor)where T : Attribute Parameters Type Name Description Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor actionDescriptor Returns Type Description T Type Parameters Name Description T GetCustomClassAttributes<T>(ActionDescriptor) Declaration public static IEnumerable<T> GetCustomClassAttributes<T>(this ActionDescriptor actionDescriptor)where T : Attribute Parameters Type Name Description Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor actionDescriptor Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T GetCustomMethodAttribute<T>(ActionDescriptor) Declaration public static T GetCustomMethodAttribute<T>(this ActionDescriptor actionDescriptor)where T : Attribute Parameters Type Name Description Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor actionDescriptor Returns Type Description T Type Parameters Name Description T GetCustomMethodAttributes<T>(ActionDescriptor) Declaration public static IEnumerable<T> GetCustomMethodAttributes<T>(this ActionDescriptor actionDescriptor)where T : Attribute Parameters Type Name Description Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor actionDescriptor Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T GetSessionId(HttpContext) Declaration public static int GetSessionId(this HttpContext context) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context Returns Type Description System.Int32"
  },
  "api/PlayGen.SUGAR.Client.Tests.APIVersionTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.APIVersionTests.html",
    "title": "Class APIVersionTests | SUGAR",
    "keywords": "Class APIVersionTests Inheritance System.Object ClientTestBase APIVersionTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class APIVersionTests : ClientTestBase Constructors APIVersionTests(ClientTestsFixture) Declaration public APIVersionTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanAccessWithMatchingAPIVersion() Declaration [Fact] public void CanAccessWithMatchingAPIVersion() CanAccessWithMatchingMajorButMismatchedMinor(Int32, Int32) Declaration [Theory] [InlineData(new object[]{0, 0})] [InlineData(new object[]{0, 1})] [InlineData(new object[]{2, 8})] [InlineData(new object[]{35, 2387})] public void CanAccessWithMatchingMajorButMismatchedMinor(int minor, int build) Parameters Type Name Description System.Int32 minor System.Int32 build CantAccessWithMismatchedAPIVersion() Declaration [Fact] public void CantAccessWithMismatchedAPIVersion()"
  },
  "api/PlayGen.SUGAR.Client.Tests.ClientTestsFixtureCollection.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.ClientTestsFixtureCollection.html",
    "title": "Class ClientTestsFixtureCollection | SUGAR",
    "keywords": "Class ClientTestsFixtureCollection Inheritance System.Object ClientTestsFixtureCollection Implements Xunit.ICollectionFixture < ClientTestsFixture > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax [CollectionDefinition(\"ClientTestsFixture\")] public class ClientTestsFixtureCollection : ICollectionFixture<ClientTestsFixture> Implements Xunit.ICollectionFixture<TFixture>"
  },
  "api/PlayGen.SUGAR.Client.Tests.GameDataClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.GameDataClientTests.html",
    "title": "Class GameDataClientTests | SUGAR",
    "keywords": "Class GameDataClientTests Inheritance System.Object ClientTestBase GameDataClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class GameDataClientTests : ClientTestBase Constructors GameDataClientTests(ClientTestsFixture) Declaration public GameDataClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanCreate() Declaration [Fact] public void CanCreate() CanCreateWithValidKey(String) Declaration [Theory] [InlineData(new object[]{\"a\"})] [InlineData(new object[]{\"My_key0\"})] [InlineData(new object[]{\"1mykey\"})] [InlineData(new object[]{\"_key\"})] [InlineData(new object[]{\"_\"})] [InlineData(new object[]{\"9291\"})] public void CanCreateWithValidKey(string dataKey) Parameters Type Name Description System.String dataKey CanGetGameData() Declaration [Fact] public void CanGetGameData() CanGetGameDataByMultipleKeys() Declaration [Fact] public void CanGetGameDataByMultipleKeys() CanGetGlobalGameData() Declaration [Fact] public void CanGetGlobalGameData() CannotCreateWithMismatchedData() Declaration [Fact] public void CannotCreateWithMismatchedData() CannotCreateWithoutActorId() Declaration [Fact] public void CannotCreateWithoutActorId() CannotCreateWithoutEvaluationDataType() Declaration [Fact] public void CannotCreateWithoutEvaluationDataType() CannotCreateWithoutGameId() Declaration [Fact] public void CannotCreateWithoutGameId() CannotCreateWithoutKey() Declaration [Fact] public void CannotCreateWithoutKey() CannotCreateWithoutValue() Declaration [Fact] public void CannotCreateWithoutValue() CannotGetGameDataWithoutActorId() Declaration [Fact] public void CannotGetGameDataWithoutActorId() CantCreateWithInValidKey(String) Declaration [Theory] [InlineData(new object[]{\"\"})] [InlineData(new object[]{\"$\"})] [InlineData(new object[]{\"dj_+das\"})] public void CantCreateWithInValidKey(string dataKey) Parameters Type Name Description System.String dataKey"
  },
  "api/PlayGen.SUGAR.Client.Tests.GroupMemberClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.GroupMemberClientTests.html",
    "title": "Class GroupMemberClientTests | SUGAR",
    "keywords": "Class GroupMemberClientTests Inheritance System.Object ClientTestBase GroupMemberClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class GroupMemberClientTests : ClientTestBase Constructors GroupMemberClientTests(ClientTestsFixture) Declaration public GroupMemberClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanAcceptRequest() Declaration [Fact] public void CanAcceptRequest() CanCreateAutoAcceptedRequest() Declaration [Fact] public void CanCreateAutoAcceptedRequest() CanCreateRequest() Declaration [Fact] public void CanCreateRequest() CanGetMemberRequests() Declaration [Fact] public void CanGetMemberRequests() CanGetMembers() Declaration [Fact] public void CanGetMembers() CanGetSentRequests() Declaration [Fact] public void CanGetSentRequests() CanGetUserGroups() Declaration [Fact] public void CanGetUserGroups() CannotCreateDuplicateAutoAcceptedRequest() Declaration [Fact] public void CannotCreateDuplicateAutoAcceptedRequest() CannotCreateDuplicateRequest() Declaration [Fact] public void CannotCreateDuplicateRequest() CannotCreateDuplicateRequestOfAccepted() Declaration [Fact] public void CannotCreateDuplicateRequestOfAccepted() CannotCreateRequestWithNonExistingGroup() Declaration [Fact] public void CannotCreateRequestWithNonExistingGroup() CannotCreateRequestWithNonExistingUser() Declaration [Fact] public void CannotCreateRequestWithNonExistingUser() CannotUpdateAlreadyAcceptedRequest() Declaration [Fact] public void CannotUpdateAlreadyAcceptedRequest() CannotUpdateNotExistingRelationship() Declaration [Fact] public void CannotUpdateNotExistingRelationship() CannotUpdateNotExistingRequest() Declaration [Fact] public void CannotUpdateNotExistingRequest() CanRejectRequest() Declaration [Fact] public void CanRejectRequest() CanUpdateRelationship() Declaration [Fact] public void CanUpdateRelationship()"
  },
  "api/PlayGen.SUGAR.Client.Tests.HttpClientHandler.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.HttpClientHandler.html",
    "title": "Class HttpClientHandler | SUGAR",
    "keywords": "Class HttpClientHandler Inheritance System.Object HttpClientHandler Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class HttpClientHandler : IHttpHandler Constructors HttpClientHandler(HttpClient) Declaration public HttpClientHandler(HttpClient client) Parameters Type Name Description System.Net.Http.HttpClient client Methods HandleRequest(HttpRequest) Declaration public HttpResponse HandleRequest(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description HttpResponse"
  },
  "api/PlayGen.SUGAR.Client.Tests.ResourceClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.ResourceClientTests.html",
    "title": "Class ResourceClientTests | SUGAR",
    "keywords": "Class ResourceClientTests Inheritance System.Object ClientTestBase ResourceClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class ResourceClientTests : ClientTestBase Constructors ResourceClientTests(ClientTestsFixture) Declaration public ResourceClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanCreate() Declaration [Fact] public void CanCreate() CanGetGlobalResource() Declaration [Fact] public void CanGetGlobalResource() CanGetResource() Declaration [Fact] public void CanGetResource() CanGetResourceByMultipleKeys() Declaration [Fact] public void CanGetResourceByMultipleKeys() CannotCreateWithoutActorId() Declaration [Fact] public void CannotCreateWithoutActorId() CannotCreateWithoutGameId() Declaration [Fact] public void CannotCreateWithoutGameId() CannotCreateWithoutKey() Declaration [Fact] public void CannotCreateWithoutKey() CannotCreateWithoutQuantity() Declaration [Fact] public void CannotCreateWithoutQuantity() CannotGetResourceWithoutActorId() Declaration [Fact] public void CannotGetResourceWithoutActorId() CannotTransferNonExistingResource() Declaration [Fact] public void CannotTransferNonExistingResource() CannotTransferWithLessThan1Quantity(Int64) Declaration [Theory] [InlineData(new object[]{0})] [InlineData(new object[]{-1})] [InlineData(new object[]{-2000})] public void CannotTransferWithLessThan1Quantity(long transferQuantity) Parameters Type Name Description System.Int64 transferQuantity CannotTransferWithOutOfRangeQuantity() Declaration [Fact] public void CannotTransferWithOutOfRangeQuantity() CanTransferCreateResourceFromUserToUser() Declaration [Fact] public void CanTransferCreateResourceFromUserToUser() CanTransferUpdateResourceFromUserToUser() Declaration [Fact] public void CanTransferUpdateResourceFromUserToUser() CanUpdateExisting() Declaration [Fact] public void CanUpdateExisting()"
  },
  "api/PlayGen.SUGAR.Client.Tests.UserClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.UserClientTests.html",
    "title": "Class UserClientTests | SUGAR",
    "keywords": "Class UserClientTests Inheritance System.Object ClientTestBase UserClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class UserClientTests : ClientTestBase Constructors UserClientTests(ClientTestsFixture) Declaration public UserClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanCreateWithValidDescription(String) Declaration [Theory] [InlineData(null)] [InlineData(new object[]{\"Short Description\"})] [InlineData(new object[]{\"Medium Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi sodales nisl quis neque tempus bibendum. Nunc ut sem vel metus venenatis euismod sed id enim. Sed faucibus erat eget sapien fringilla, id malesuada nunc convallis. Nam dapibus cursus accumsan. Sed in fermentum libero. Proin quis felis turpis. Etiam feugiat scelerisque metus id pretium. Morbi lacus purus, ornare eget libero nec, fringilla laoreet dui. Suspendisse dictum a turpis eu vulputate. Vestibulum ante ipsum primis in cras amet.\"})] [InlineData(new object[]{\"Max Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in venenatis augue, quis hendrerit justo. Praesent malesuada leo vel nisl aliquet, id efficitur nibh tincidunt. Donec laoreet orci vel sollicitudin rutrum. Maecenas lacinia libero nec finibus porttitor. Donec tempus tincidunt felis in viverra. Aliquam eleifend ex sem, at porta sapien malesuada ac. Praesent auctor ligula dictum odio gravida tempor. Fusce malesuada malesuada magna non pretium. Mauris lobortis accumsan porttitor. Donec commodo risus at neque porttitor volutpat. Phasellus et ullamcorper libero, vel euismod massa. Vivamus ullamcorper nibh a dolor accumsan tempor. Curabitur laoreet accumsan nisi non porttitor. Donec tincidunt sapien eu ligula consequat fringilla sed eu augue. Nulla sed convallis lacus, eu venenatis urna. Duis eu purus tempor dolor porttitor tincidunt eu quis libero. Nunc sit amet aliquet eros.Sed sed vestibulum nulla.Phasellus suscipit arcu vel neque egestas, eget rutrum est sollicitudin.Curabitur amet.\"})] public void CanCreateWithValidDescription(string description) Parameters Type Name Description System.String description CanGetUserById() Declaration [Fact] public void CanGetUserById() CanGetUsersByName() Declaration [Fact] public void CanGetUsersByName() CannotGetNotExistingUserById() Declaration [Fact] public void CannotGetNotExistingUserById() CannotGetNotExistingUserByName() Declaration [Fact] public void CannotGetNotExistingUserByName() CannotGetUserByEmptyName() Declaration [Fact] public void CannotGetUserByEmptyName() CannotUpdateNonExistingUser() Declaration [Fact] public void CannotUpdateNonExistingUser() CannotUpdateUserToDuplicateName() Declaration [Fact] public void CannotUpdateUserToDuplicateName() CannotUpdateUserToNoName() Declaration [Fact] public void CannotUpdateUserToNoName() CantCreateWithInvalidDescription(String) Declaration [Theory] [InlineData(new object[]{\"Over Max Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam vel pulvinar lorem. Nulla dictum tincidunt sem sed ornare. Etiam convallis gravida dolor et euismod. Cras vitae mattis felis, vitae placerat tortor. Suspendisse ultrices sagittis blandit. Vestibulum aliquet odio ut erat ornare, at scelerisque sapien iaculis. Donec commodo volutpat sapien, viverra imperdiet odio vestibulum at. Nullam aliquet gravida felis egestas mollis. Donec sodales, lorem ac lobortis feugiat, dolor neque iaculis leo, et finibus felis lorem sit amet odio. Fusce sodales risus in accumsan volutpat.In elementum scelerisque ex non mattis.Cras in malesuada metus.Suspendisse vitae volutpat velit.Nulla nibh lectus, elementum quis libero quis, iaculis pharetra erat.Nam in tortor tincidunt, volutpat neque vel, vestibulum nisi.Curabitur imperdiet mattis maximus.Ut posuere volutpat vehicula.Nunc interdum arcu nisl, nec vehicula tellus ultrices non.Fusce in placerat lectus.Etiam gravida vitae nibh eget interdum.Proin sagittis sem non tempor luctus.Morbi tempor, risus nec pretium aliquet, felis ante metus.\"})] public void CantCreateWithInvalidDescription(string description) Parameters Type Name Description System.String description CanUpdateUser() Declaration [Fact] public void CanUpdateUser()"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Extensions.AuthorizationHeaderExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Extensions.AuthorizationHeaderExtensions.html",
    "title": "Class AuthorizationHeaderExtensions | SUGAR",
    "keywords": "Class AuthorizationHeaderExtensions Inheritance System.Object AuthorizationHeaderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication.Extensions Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public static class AuthorizationHeaderExtensions Methods GetAuthorization(HttpRequest) Declaration public static string GetAuthorization(this HttpRequest request) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpRequest request Returns Type Description System.String GetAuthorization(HttpResponse) Declaration public static string GetAuthorization(this HttpResponse response) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse response Returns Type Description System.String GetAuthorizationToken(HttpRequest) Declaration public static string GetAuthorizationToken(this HttpRequest request) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpRequest request Returns Type Description System.String GetAuthorizationToken(HttpResponse) Declaration public static string GetAuthorizationToken(this HttpResponse response) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse response Returns Type Description System.String GetAuthorizationToken(IHeaderDictionary) Declaration public static string GetAuthorizationToken(this IHeaderDictionary headers) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers Returns Type Description System.String HasAuthorization(HttpRequest) Declaration public static bool HasAuthorization(this HttpRequest request) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpRequest request Returns Type Description System.Boolean HasAuthorization(HttpResponse) Declaration public static bool HasAuthorization(this HttpResponse response) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse response Returns Type Description System.Boolean SetAuthorization(HttpResponse, String) Declaration public static void SetAuthorization(this HttpResponse response, string authorization) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse response System.String authorization SetAuthorizationToken(HttpResponse, String) Declaration public static void SetAuthorizationToken(this HttpResponse response, string token) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpResponse response System.String token"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Filters.TokenReissueFilter.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Filters.TokenReissueFilter.html",
    "title": "Class TokenReissueFilter | SUGAR",
    "keywords": "Class TokenReissueFilter Inheritance System.Object TokenReissueFilter Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication.Filters Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public class TokenReissueFilter : IActionFilter, IFilterMetadata Constructors TokenReissueFilter(TokenController) Declaration public TokenReissueFilter(TokenController tokenController) Parameters Type Name Description TokenController tokenController Methods OnActionExecuted(ActionExecutedContext) Declaration public void OnActionExecuted(ActionExecutedContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext context OnActionExecuting(ActionExecutingContext) Declaration public void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Filters.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Filters.html",
    "title": "Namespace PlayGen.SUGAR.Server.Authentication.Filters | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Authentication.Filters Classes TokenReissueFilter"
  },
  "api/PlayGen.SUGAR.Server.Authorization.AuthorizationAttribute.html": {
    "href": "api/PlayGen.SUGAR.Server.Authorization.AuthorizationAttribute.html",
    "title": "Class AuthorizationAttribute | SUGAR",
    "keywords": "Class AuthorizationAttribute Inheritance System.Object System.Attribute Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute AuthorizationAttribute Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IResultFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.Order System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.Match(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authorization Assembly : PlayGen.SUGAR.Server.Authorization.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public class AuthorizationAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Constructors AuthorizationAttribute(ClaimScope, AuthorizationAction, AuthorizationEntity) Declaration public AuthorizationAttribute(ClaimScope claimScope, AuthorizationAction action, AuthorizationEntity entity) Parameters Type Name Description ClaimScope claimScope AuthorizationAction action AuthorizationEntity entity Properties ClaimScope Declaration public ClaimScope ClaimScope { get; set; } Property Value Type Description ClaimScope Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods OnActionExecuting(ActionExecutingContext) Declaration public override void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Overrides Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IResultFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.Authorization.AuthorizationExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authorization.AuthorizationExtensions.html",
    "title": "Class AuthorizationExtensions | SUGAR",
    "keywords": "Class AuthorizationExtensions Inheritance System.Object AuthorizationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authorization Assembly : PlayGen.SUGAR.Server.Authorization.dll Syntax public static class AuthorizationExtensions Methods Key(ClaimScope) Declaration public static string Key(this ClaimScope scope) Parameters Type Name Description ClaimScope scope Returns Type Description System.String ScopeItems(HttpContext, ClaimScope) Declaration public static IAuthorizationRequirement ScopeItems(this HttpContext context, ClaimScope scope) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context ClaimScope scope Returns Type Description Microsoft.AspNetCore.Authorization.IAuthorizationRequirement"
  },
  "api/PlayGen.SUGAR.Server.Core.Authorization.AuthorizationHandlerWithNull.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Authorization.AuthorizationHandlerWithNull.html",
    "title": "Class AuthorizationHandlerWithNull | SUGAR",
    "keywords": "Class AuthorizationHandlerWithNull Inheritance System.Object Microsoft.AspNetCore.Authorization.AuthorizationHandler < AuthorizationRequirement > AuthorizationHandlerWithNull Implements Microsoft.AspNetCore.Authorization.IAuthorizationHandler Inherited Members Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Authorization Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class AuthorizationHandlerWithNull : AuthorizationHandler<AuthorizationRequirement>, IAuthorizationHandler Constructors AuthorizationHandlerWithNull(ActorClaimController, ClaimController) Declaration public AuthorizationHandlerWithNull(ActorClaimController actorClaimDbController, ClaimController claimDbController) Parameters Type Name Description ActorClaimController actorClaimDbController ClaimController claimDbController Methods HandleRequirementAsync(AuthorizationHandlerContext, AuthorizationRequirement) Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, AuthorizationRequirement requirement) Parameters Type Name Description Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context AuthorizationRequirement requirement Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement) Implements Microsoft.AspNetCore.Authorization.IAuthorizationHandler"
  },
  "api/PlayGen.SUGAR.Server.Core.Authorization.AuthorizationHandlerWithoutEntity.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Authorization.AuthorizationHandlerWithoutEntity.html",
    "title": "Class AuthorizationHandlerWithoutEntity | SUGAR",
    "keywords": "Class AuthorizationHandlerWithoutEntity Inheritance System.Object Microsoft.AspNetCore.Authorization.AuthorizationHandler < AuthorizationRequirement , ClaimScope > AuthorizationHandlerWithoutEntity Implements Microsoft.AspNetCore.Authorization.IAuthorizationHandler Inherited Members Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, ClaimScope>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext) Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, ClaimScope>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, ClaimScope) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Authorization Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class AuthorizationHandlerWithoutEntity : AuthorizationHandler<AuthorizationRequirement, ClaimScope>, IAuthorizationHandler Constructors AuthorizationHandlerWithoutEntity(ActorClaimController, ClaimController) Declaration public AuthorizationHandlerWithoutEntity(ActorClaimController actorClaimDbController, ClaimController claimDbController) Parameters Type Name Description ActorClaimController actorClaimDbController ClaimController claimDbController Methods HandleRequirementAsync(AuthorizationHandlerContext, AuthorizationRequirement, ClaimScope) Declaration protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, AuthorizationRequirement requirement, ClaimScope scope) Parameters Type Name Description Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context AuthorizationRequirement requirement ClaimScope scope Returns Type Description System.Threading.Tasks.Task Overrides Microsoft.AspNetCore.Authorization.AuthorizationHandler<PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, ClaimScope>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement, ClaimScope) Implements Microsoft.AspNetCore.Authorization.IAuthorizationHandler"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.AccountSourceController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.AccountSourceController.html",
    "title": "Class AccountSourceController | SUGAR",
    "keywords": "Class AccountSourceController Inheritance System.Object AccountSourceController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class AccountSourceController Constructors AccountSourceController(ILogger<AccountSourceController>, AccountSourceController) Declaration public AccountSourceController(ILogger<AccountSourceController> logger, AccountSourceController accountSourceDbController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < AccountSourceController > logger AccountSourceController accountSourceDbController Methods Create(AccountSource) Declaration public AccountSource Create(AccountSource newSource) Parameters Type Name Description AccountSource newSource Returns Type Description AccountSource Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<AccountSource> Get() Returns Type Description System.Collections.Generic.List < AccountSource > Get(Int32) Declaration public AccountSource Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description AccountSource GetByToken(String) Declaration public AccountSource GetByToken(string token) Parameters Type Name Description System.String token Returns Type Description AccountSource Update(AccountSource) Declaration public void Update(AccountSource source) Parameters Type Name Description AccountSource source"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.ActorClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.ActorClaimController.html",
    "title": "Class ActorClaimController | SUGAR",
    "keywords": "Class ActorClaimController Inheritance System.Object ActorClaimController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ActorClaimController Constructors ActorClaimController(ILogger<ActorClaimController>, ActorClaimController, ActorRoleController, RoleClaimController, RelationshipController) Declaration public ActorClaimController(ILogger<ActorClaimController> logger, ActorClaimController actorClaimDbController, ActorRoleController actorRoleController, RoleClaimController roleClaimController, RelationshipController relationshipController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ActorClaimController > logger ActorClaimController actorClaimDbController ActorRoleController actorRoleController RoleClaimController roleClaimController RelationshipController relationshipController Methods Create(ActorClaim) Declaration public ActorClaim Create(ActorClaim newClaim) Parameters Type Name Description ActorClaim newClaim Returns Type Description ActorClaim Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration public ActorClaim Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description ActorClaim GetActorClaims(Int32) Declaration public List<ActorClaim> GetActorClaims(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < ActorClaim > GetActorClaimsByScope(Int32, ClaimScope) Declaration public List<ActorClaim> GetActorClaimsByScope(int actorId, ClaimScope scope) Parameters Type Name Description System.Int32 actorId ClaimScope scope Returns Type Description System.Collections.Generic.List < ActorClaim > GetActorClaimsForEntity(Int32, Int32, ClaimScope) Declaration public List<Claim> GetActorClaimsForEntity(int actorId, int entityId, ClaimScope scope) Parameters Type Name Description System.Int32 actorId System.Int32 entityId ClaimScope scope Returns Type Description System.Collections.Generic.List < Claim > GetClaimActors(Int32, Int32) Declaration public List<Actor> GetClaimActors(int claimId, int entityId) Parameters Type Name Description System.Int32 claimId System.Int32 entityId Returns Type Description System.Collections.Generic.List < Actor >"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.GameDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.GameDataController.html",
    "title": "Class GameDataController | SUGAR",
    "keywords": "Class GameDataController Inheritance System.Object GameDataController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class GameDataController Constructors GameDataController(ILogger<GameDataController>, ILogger<EvaluationDataController>, SUGARContextFactory, ActorController) Declaration public GameDataController(ILogger<GameDataController> logger, ILogger<EvaluationDataController> evaluationDataLogger, SUGARContextFactory contextFactory, ActorController actorController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < GameDataController > logger Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger SUGARContextFactory contextFactory ActorController actorController Methods Add(EvaluationData) Declaration public EvaluationData Add(EvaluationData newData) Parameters Type Name Description EvaluationData newData Returns Type Description EvaluationData Add(EvaluationData[]) Declaration public void Add(EvaluationData[] evaluationData) Parameters Type Name Description EvaluationData [] evaluationData Get(Int32, Int32, String[]) Declaration public List<EvaluationData> Get(int gameId, int actorId, string[] keys) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String [] keys Returns Type Description System.Collections.Generic.List < EvaluationData > GetActorData(Int32) Declaration public List<EvaluationData> GetActorData(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < EvaluationData > GetGameActors(Int32) Declaration public List<Actor> GetGameActors(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < Actor > GetGameKeys(Int32) Declaration public List<KeyValuePair<string, EvaluationDataType>> GetGameKeys(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < System.Collections.Generic.KeyValuePair < System.String , EvaluationDataType >>"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.GroupController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.GroupController.html",
    "title": "Class GroupController | SUGAR",
    "keywords": "Class GroupController Inheritance System.Object ActorController GroupController Inherited Members ActorController.ActorDeletedEvent ActorController.TriggerDeletedEvent(Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class GroupController : ActorController Constructors GroupController(ILogger<GroupController>, GroupController, ActorController, ActorClaimController, ActorRoleController, RelationshipController) Declaration public GroupController(ILogger<GroupController> logger, GroupController groupDbController, ActorController actorDbController, ActorClaimController actorClaimController, ActorRoleController actorRoleController, RelationshipController relationshipController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < GroupController > logger GroupController groupDbController ActorController actorDbController ActorClaimController actorClaimController ActorRoleController actorRoleController RelationshipController relationshipController Methods Create(Group, Int32) Declaration public Group Create(Group newGroup, int creatorId) Parameters Type Name Description Group newGroup System.Int32 creatorId Returns Type Description Group Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<Group> Get() Returns Type Description System.Collections.Generic.List < Group > Get(Int32) Declaration public Group Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Group GetByPermissions(Int32) Declaration public List<Group> GetByPermissions(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < Group > Search(String) Declaration public List<Group> Search(string name) Parameters Type Name Description System.String name Returns Type Description System.Collections.Generic.List < Group > Update(Group) Declaration public void Update(Group group) Parameters Type Name Description Group group"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.RoleController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.RoleController.html",
    "title": "Class RoleController | SUGAR",
    "keywords": "Class RoleController Inheritance System.Object RoleController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class RoleController Constructors RoleController(ILogger<RoleController>, RoleController, ActorRoleController) Declaration public RoleController(ILogger<RoleController> logger, RoleController roleDbController, ActorRoleController actorRoleController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < RoleController > logger RoleController roleDbController ActorRoleController actorRoleController Methods Create(Role, Int32) Declaration public Role Create(Role newRole, int creatorId) Parameters Type Name Description Role newRole System.Int32 creatorId Returns Type Description Role Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<Role> Get() Returns Type Description System.Collections.Generic.List < Role > GetById(Int32) Declaration public Role GetById(int id) Parameters Type Name Description System.Int32 id Returns Type Description Role GetByScope(ClaimScope) Declaration public List<Role> GetByScope(ClaimScope scope) Parameters Type Name Description ClaimScope scope Returns Type Description System.Collections.Generic.List < Role > GetDefaultForScope(ClaimScope) Declaration public Role GetDefaultForScope(ClaimScope scope) Parameters Type Name Description ClaimScope scope Returns Type Description Role"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.UserController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.UserController.html",
    "title": "Class UserController | SUGAR",
    "keywords": "Class UserController Inheritance System.Object ActorController UserController Inherited Members ActorController.ActorDeletedEvent ActorController.TriggerDeletedEvent(Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class UserController : ActorController Constructors UserController(ILogger<UserController>, UserController, ActorController, ActorRoleController) Declaration public UserController(ILogger<UserController> logger, UserController userController, ActorController actorDbController, ActorRoleController actorRoleController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < UserController > logger UserController userController ActorController actorDbController ActorRoleController actorRoleController Methods Create(User) Declaration public User Create(User newUser) Parameters Type Name Description User newUser Returns Type Description User Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get() Declaration public List<User> Get() Returns Type Description System.Collections.Generic.List < User > Get(Int32) Declaration public User Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description User Search(String, Boolean) Declaration public List<User> Search(string name, bool exactMatch) Parameters Type Name Description System.String name System.Boolean exactMatch Returns Type Description System.Collections.Generic.List < User > Update(User) Declaration public User Update(User user) Parameters Type Name Description User user Returns Type Description User"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.ProgressEvaluator.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.ProgressEvaluator.html",
    "title": "Class ProgressEvaluator | SUGAR",
    "keywords": "Class ProgressEvaluator Inheritance System.Object ProgressEvaluator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ProgressEvaluator Constructors ProgressEvaluator(EvaluationController) Declaration public ProgressEvaluator(EvaluationController evaluationController) Parameters Type Name Description EvaluationController evaluationController Methods EvaluateActor(List<Evaluation>, Session) Declaration public ConcurrentProgressCache EvaluateActor(List<Evaluation> evaluations, Session session) Parameters Type Name Description System.Collections.Generic.List < Evaluation > evaluations Session session Returns Type Description ConcurrentProgressCache EvaluateSessions(ICollection<Session>, Evaluation) Declaration public ConcurrentProgressCache EvaluateSessions(ICollection<Session> sessions, Evaluation evaluation) Parameters Type Name Description System.Collections.Generic.ICollection < Session > sessions Evaluation evaluation Returns Type Description ConcurrentProgressCache EvaluateSessions(ICollection<Session>, ICollection<Evaluation>) Declaration public ConcurrentProgressCache EvaluateSessions(ICollection<Session> sessions, ICollection<Evaluation> evaluations) Parameters Type Name Description System.Collections.Generic.ICollection < Session > sessions System.Collections.Generic.ICollection < Evaluation > evaluations Returns Type Description ConcurrentProgressCache"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.ProgressNotificationCache.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.ProgressNotificationCache.html",
    "title": "Class ProgressNotificationCache | SUGAR",
    "keywords": "Class ProgressNotificationCache Check newly evaluated progress and store notifications for values of any significance Inheritance System.Object ProgressNotificationCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ProgressNotificationCache Methods Get(Int32, Int32) Declaration public ConcurrentDictionary<int, ConcurrentDictionary<Evaluation, float>> Get(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Collections.Concurrent.ConcurrentDictionary < System.Int32 , System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single >> Remove(Int32) Declaration public bool Remove(int evaluationId) Parameters Type Name Description System.Int32 evaluationId Returns Type Description System.Boolean Remove(Int32, Int32) Declaration public bool Remove(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Boolean Update(ConcurrentProgressCache, Single) Declaration public void Update(ConcurrentProgressCache addProgress, float minProgress = 1F) Parameters Type Name Description ConcurrentProgressCache addProgress System.Single minProgress"
  },
  "api/PlayGen.SUGAR.Server.Core.Exceptions.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Exceptions.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Exceptions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Exceptions Classes InvalidAccountDetailsException InvalidDataException InvalidOperationException"
  },
  "api/PlayGen.SUGAR.Server.Core.Sessions.Session.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Sessions.Session.html",
    "title": "Class Session | SUGAR",
    "keywords": "Class Session Inheritance System.Object Session Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Sessions Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class Session Constructors Session(Int32, Int32) Declaration public Session(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Properties ActorId Declaration public int ActorId { get; } Property Value Type Description System.Int32 GameId Declaration public int GameId { get; } Property Value Type Description System.Int32 Id Declaration public long Id { get; } Property Value Type Description System.Int64 LastActive Declaration public DateTime LastActive { get; } Property Value Type Description System.DateTime"
  },
  "api/PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement.html": {
    "href": "api/PlayGen.SUGAR.Server.Authorization.AuthorizationRequirement.html",
    "title": "Class AuthorizationRequirement | SUGAR",
    "keywords": "Class AuthorizationRequirement Inheritance System.Object AuthorizationRequirement Implements Microsoft.AspNetCore.Authorization.IAuthorizationRequirement Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authorization Assembly : PlayGen.SUGAR.Server.Authorization.dll Syntax public class AuthorizationRequirement : IAuthorizationRequirement Constructors AuthorizationRequirement(ClaimScope, String) Declaration public AuthorizationRequirement(ClaimScope scope, string name) Parameters Type Name Description ClaimScope scope System.String name Properties ClaimScope Declaration public ClaimScope ClaimScope { get; set; } Property Value Type Description ClaimScope Name Declaration public string Name { get; set; } Property Value Type Description System.String Implements Microsoft.AspNetCore.Authorization.IAuthorizationRequirement"
  },
  "api/PlayGen.SUGAR.Server.Authorization.html": {
    "href": "api/PlayGen.SUGAR.Server.Authorization.html",
    "title": "Namespace PlayGen.SUGAR.Server.Authorization | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Authorization Classes AuthorizationAttribute AuthorizationExtensions AuthorizationRequirement"
  },
  "api/PlayGen.SUGAR.Server.Core.Authorization.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Authorization.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Authorization | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Authorization Classes AuthorizationHandler AuthorizationHandlerWithNull AuthorizationHandlerWithoutEntity ClaimController"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.AccountController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.AccountController.html",
    "title": "Class AccountController | SUGAR",
    "keywords": "Class AccountController Inheritance System.Object AccountController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class AccountController Constructors AccountController(ILogger<AccountController>, AccountController, AccountSourceController, UserController, ActorRoleController) Declaration public AccountController(ILogger<AccountController> logger, AccountController accountDbController, AccountSourceController accountSourceCoreController, UserController userCoreController, ActorRoleController actorRoleController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < AccountController > logger AccountController accountDbController AccountSourceController accountSourceCoreController UserController userCoreController ActorRoleController actorRoleController Methods Authenticate(Account, String) Declaration public Account Authenticate(Account toVerify, string sourceToken) Parameters Type Name Description Account toVerify System.String sourceToken Returns Type Description Account Create(Account, String) Declaration public Account Create(Account toRegister, string sourceToken) Parameters Type Name Description Account toRegister System.String sourceToken Returns Type Description Account Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.ActorController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.ActorController.html",
    "title": "Class ActorController | SUGAR",
    "keywords": "Class ActorController Inheritance System.Object ActorController GroupController UserController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ActorController Constructors ActorController(ActorController) Declaration public ActorController(ActorController actorDbController) Parameters Type Name Description ActorController actorDbController Methods Get(Int32) Declaration public Actor Get(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description Actor TriggerDeletedEvent(Int32) Declaration protected void TriggerDeletedEvent(int actorId) Parameters Type Name Description System.Int32 actorId Events ActorDeletedEvent Declaration public static event Action<int> ActorDeletedEvent Event Type Type Description System.Action < System.Int32 >"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.ActorDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.ActorDataController.html",
    "title": "Class ActorDataController | SUGAR",
    "keywords": "Class ActorDataController Inheritance System.Object ActorDataController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ActorDataController Constructors ActorDataController(ILogger<ActorDataController>, ActorDataController) Declaration public ActorDataController(ILogger<ActorDataController> logger, ActorDataController actorDataDbController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ActorDataController > logger ActorDataController actorDataDbController Methods Add(ActorData) Declaration public ActorData Add(ActorData newData) Parameters Type Name Description ActorData newData Returns Type Description ActorData Get(Int32, Int32, ICollection<String>) Declaration public List<ActorData> Get(int gameId, int actorId, ICollection<string> keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Collections.Generic.List < ActorData > KeyExists(Int32, Int32, String) Declaration public bool KeyExists(int gameId, int actorId, string key) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key Returns Type Description System.Boolean ParseCheck(ActorData) Declaration protected bool ParseCheck(ActorData data) Parameters Type Name Description ActorData data Returns Type Description System.Boolean Update(ActorData) Declaration public void Update(ActorData newData) Parameters Type Name Description ActorData newData"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.LeaderboardController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.LeaderboardController.html",
    "title": "Class LeaderboardController | SUGAR",
    "keywords": "Class LeaderboardController Inheritance System.Object CriteriaEvaluator LeaderboardController Inherited Members CriteriaEvaluator.RelationshipCoreController CriteriaEvaluator.ContextFactory CriteriaEvaluator.EvaluationDataLogger CriteriaEvaluator.IsCriteriaSatisified(Int32, Int32, List<EvaluationCriteria>, ActorType, EvaluationType) CriteriaEvaluator.Evaluate(Int32, Int32, EvaluationCriteria, ActorType, EvaluationType) CriteriaEvaluator.EvaluateLong(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateFloat(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateString(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateBool(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateManyLong(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyFloat(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyString(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyBool(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.CompareValues<T>(T, T, ComparisonType, EvaluationDataType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class LeaderboardController : CriteriaEvaluator Constructors LeaderboardController(ILogger<LeaderboardController>, ILogger<EvaluationDataController>, RelationshipController, ActorController, GroupController, UserController, SUGARContextFactory) Declaration public LeaderboardController(ILogger<LeaderboardController> logger, ILogger<EvaluationDataController> evaluationDataLogger, RelationshipController relationshipCoreController, ActorController actorController, GroupController groupController, UserController userController, SUGARContextFactory contextFactory) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < LeaderboardController > logger Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger RelationshipController relationshipCoreController ActorController actorController GroupController groupController UserController userController SUGARContextFactory contextFactory Fields ActorController Declaration protected readonly ActorController ActorController Field Value Type Description ActorController GroupController Declaration protected readonly GroupController GroupController Field Value Type Description GroupController UserController Declaration protected readonly UserController UserController Field Value Type Description UserController Methods EvaluateCount(EvaluationDataController, List<Actor>, Int32, String, LeaderboardType, EvaluationDataType, StandingsRequest) Declaration protected List<StandingsResponse> EvaluateCount(EvaluationDataController evaluationDataController, List<Actor> actors, int gameId, string key, LeaderboardType type, EvaluationDataType evaluationDataType, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController System.Collections.Generic.List < Actor > actors System.Int32 gameId System.String key LeaderboardType type EvaluationDataType evaluationDataType StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > EvaluateCumulative(EvaluationDataController, List<Actor>, Int32, String, LeaderboardType, EvaluationDataType, StandingsRequest) Declaration protected List<StandingsResponse> EvaluateCumulative(EvaluationDataController evaluationDataController, List<Actor> actors, int gameId, string key, LeaderboardType type, EvaluationDataType evaluationDataType, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController System.Collections.Generic.List < Actor > actors System.Int32 gameId System.String key LeaderboardType type EvaluationDataType evaluationDataType StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > EvaluateEarliest(EvaluationDataController, List<Actor>, Int32, String, LeaderboardType, EvaluationDataType, StandingsRequest) Declaration protected List<StandingsResponse> EvaluateEarliest(EvaluationDataController evaluationDataController, List<Actor> actors, int gameId, string key, LeaderboardType type, EvaluationDataType evaluationDataType, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController System.Collections.Generic.List < Actor > actors System.Int32 gameId System.String key LeaderboardType type EvaluationDataType evaluationDataType StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > EvaluateHighest(EvaluationDataController, List<Actor>, Int32, String, LeaderboardType, EvaluationDataType, StandingsRequest) Declaration protected List<StandingsResponse> EvaluateHighest(EvaluationDataController evaluationDataController, List<Actor> actors, int gameId, string key, LeaderboardType type, EvaluationDataType evaluationDataType, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController System.Collections.Generic.List < Actor > actors System.Int32 gameId System.String key LeaderboardType type EvaluationDataType evaluationDataType StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > EvaluateLatest(EvaluationDataController, List<Actor>, Int32, String, LeaderboardType, EvaluationDataType, StandingsRequest) Declaration protected List<StandingsResponse> EvaluateLatest(EvaluationDataController evaluationDataController, List<Actor> actors, int gameId, string key, LeaderboardType type, EvaluationDataType evaluationDataType, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController System.Collections.Generic.List < Actor > actors System.Int32 gameId System.String key LeaderboardType type EvaluationDataType evaluationDataType StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > EvaluateLowest(EvaluationDataController, List<Actor>, Int32, String, LeaderboardType, EvaluationDataType, StandingsRequest) Declaration protected List<StandingsResponse> EvaluateLowest(EvaluationDataController evaluationDataController, List<Actor> actors, int gameId, string key, LeaderboardType type, EvaluationDataType evaluationDataType, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController System.Collections.Generic.List < Actor > actors System.Int32 gameId System.String key LeaderboardType type EvaluationDataType evaluationDataType StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > FilterResults(List<StandingsResponse>, Int32, Int32, LeaderboardFilterType, Nullable<Int32>) Declaration protected List<StandingsResponse> FilterResults(List<StandingsResponse> typeResults, int limit, int offset, LeaderboardFilterType filter, int ? actorId) Parameters Type Name Description System.Collections.Generic.List < StandingsResponse > typeResults System.Int32 limit System.Int32 offset LeaderboardFilterType filter System.Nullable < System.Int32 > actorId Returns Type Description System.Collections.Generic.List < StandingsResponse > GatherStandings(Leaderboard, StandingsRequest) Declaration protected List<StandingsResponse> GatherStandings(Leaderboard leaderboard, StandingsRequest request) Parameters Type Name Description Leaderboard leaderboard StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse > GetActors(EvaluationDataController, Leaderboard, StandingsRequest) Declaration protected List<Actor> GetActors(EvaluationDataController evaluationDataController, Leaderboard leaderboard, StandingsRequest request) Parameters Type Name Description EvaluationDataController evaluationDataController Leaderboard leaderboard StandingsRequest request Returns Type Description System.Collections.Generic.List < Actor > GetName(Int32, ActorType) Declaration protected string GetName(int id, ActorType actorType) Parameters Type Name Description System.Int32 id ActorType actorType Returns Type Description System.String GetStandings(Leaderboard, StandingsRequest) Declaration public List<StandingsResponse> GetStandings(Leaderboard leaderboard, StandingsRequest request) Parameters Type Name Description Leaderboard leaderboard StandingsRequest request Returns Type Description System.Collections.Generic.List < StandingsResponse >"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.MatchController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.MatchController.html",
    "title": "Class MatchController | SUGAR",
    "keywords": "Class MatchController Inheritance System.Object MatchController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class MatchController Constructors MatchController(ILogger<MatchController>, ILogger<EvaluationDataController>, SUGARContextFactory, MatchController) Declaration public MatchController(ILogger<MatchController> logger, ILogger<EvaluationDataController> evaluationDataLogger, SUGARContextFactory contextFactory, MatchController matchDbController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < MatchController > logger Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger SUGARContextFactory contextFactory MatchController matchDbController Methods AddData(EvaluationData) Declaration public EvaluationData AddData(EvaluationData newData) Parameters Type Name Description EvaluationData newData Returns Type Description EvaluationData Create(Int32, Int32) Declaration public Match Create(int gameId, int creatorId) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId Returns Type Description Match End(Int32) Declaration public Match End(int matchId) Parameters Type Name Description System.Int32 matchId Returns Type Description Match Get(Int32) Declaration public Match Get(int matchId) Parameters Type Name Description System.Int32 matchId Returns Type Description Match GetByCreator(Int32) Declaration public List<Match> GetByCreator(int creatorId) Parameters Type Name Description System.Int32 creatorId Returns Type Description System.Collections.Generic.List < Match > GetByCreator(Int32, Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByCreator(int creatorId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 creatorId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetByGame(Int32) Declaration public List<Match> GetByGame(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < Match > GetByGame(Int32, Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByGame(int gameId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 gameId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetByGameAndCreator(Int32, Int32) Declaration public List<Match> GetByGameAndCreator(int gameId, int creatorId) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId Returns Type Description System.Collections.Generic.List < Match > GetByGameAndCreator(Int32, Int32, Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByGameAndCreator(int gameId, int creatorId, DateTime? start, DateTime? end) Parameters Type Name Description System.Int32 gameId System.Int32 creatorId System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetByTime(Nullable<DateTime>, Nullable<DateTime>) Declaration public List<Match> GetByTime(DateTime? start, DateTime? end) Parameters Type Name Description System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Collections.Generic.List < Match > GetData(Int32, String[]) Declaration public List<EvaluationData> GetData(int matchId, string[] keys = null) Parameters Type Name Description System.Int32 matchId System.String [] keys Returns Type Description System.Collections.Generic.List < EvaluationData > Start(Int32) Declaration public Match Start(int matchId) Parameters Type Name Description System.Int32 matchId Returns Type Description Match"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Controllers | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Controllers Classes AccountController AccountSourceController ActorClaimController ActorController ActorDataController ActorRoleController EvaluationController EvaluationDataController GameController GameDataController GroupController LeaderboardController MatchController RelationshipController ResourceController RewardController RoleClaimController RoleController UserController"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.ConcurrentProgressCache.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.ConcurrentProgressCache.html",
    "title": "Class ConcurrentProgressCache | SUGAR",
    "keywords": "Class ConcurrentProgressCache Inheritance System.Object ConcurrentProgressCache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ConcurrentProgressCache Methods AddProgress(ConcurrentProgressCache, Func<Single, Boolean>) Declaration public void AddProgress(ConcurrentProgressCache addConcurrentProgressCache, Func<float, bool> addCondition = null) Parameters Type Name Description ConcurrentProgressCache addConcurrentProgressCache System.Func < System.Single , System.Boolean > addCondition AddProgress(Int32, Int32, Evaluation, Single) Declaration public void AddProgress(int gameId, int actorId, Evaluation evaluation, float progress) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Evaluation evaluation System.Single progress GetActorProgress(Int32, Int32) Declaration public ConcurrentDictionary<Evaluation, float> GetActorProgress(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single > GetGameProgress(Int32) Declaration public ConcurrentDictionary<int, ConcurrentDictionary<Evaluation, float>> GetGameProgress(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Concurrent.ConcurrentDictionary < System.Int32 , System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single >> Remove(Int32) Declaration public bool Remove(int evaluationId) Parameters Type Name Description System.Int32 evaluationId Returns Type Description System.Boolean RemoveActor(Int32, Int32) Declaration public bool RemoveActor(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Boolean TakeActorProgress(Int32, Int32) Declaration public ConcurrentDictionary<int, ConcurrentDictionary<Evaluation, float>> TakeActorProgress(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Collections.Concurrent.ConcurrentDictionary < System.Int32 , System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single >> TryGetActorProgress(Int32, Int32, out ConcurrentDictionary<Evaluation, Single>) Declaration public bool TryGetActorProgress(int gameId, int actorId, out ConcurrentDictionary<Evaluation, float> actorProgress) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single > actorProgress Returns Type Description System.Boolean TryGetGameProgress(Int32, out ConcurrentDictionary<Int32, ConcurrentDictionary<Evaluation, Single>>) Declaration public bool TryGetGameProgress(int gameId, out ConcurrentDictionary<int, ConcurrentDictionary<Evaluation, float>> gameProgress) Parameters Type Name Description System.Int32 gameId System.Collections.Concurrent.ConcurrentDictionary < System.Int32 , System.Collections.Concurrent.ConcurrentDictionary < Evaluation , System.Single >> gameProgress Returns Type Description System.Boolean"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.StandingsRequest.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.StandingsRequest.html",
    "title": "Class StandingsRequest | SUGAR",
    "keywords": "Class StandingsRequest Inheritance System.Object StandingsRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class StandingsRequest Properties ActorId Declaration public int ? ActorId { get; set; } Property Value Type Description System.Nullable < System.Int32 > DateEnd Declaration public DateTime DateEnd { get; set; } Property Value Type Description System.DateTime DateStart Declaration public DateTime DateStart { get; set; } Property Value Type Description System.DateTime GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 LeaderboardFilterType Declaration public LeaderboardFilterType LeaderboardFilterType { get; set; } Property Value Type Description LeaderboardFilterType LeaderboardToken Declaration public string LeaderboardToken { get; set; } Property Value Type Description System.String MultiplePerActor Declaration public bool MultiplePerActor { get; set; } Property Value Type Description System.Boolean PageLimit Declaration public int PageLimit { get; set; } Property Value Type Description System.Int32 PageOffset Declaration public int PageOffset { get; set; } Property Value Type Description System.Int32"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.StandingsResponse.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.StandingsResponse.html",
    "title": "Class StandingsResponse | SUGAR",
    "keywords": "Class StandingsResponse Inheritance System.Object StandingsResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class StandingsResponse Properties ActorId Declaration public int ActorId { get; set; } Property Value Type Description System.Int32 ActorName Declaration public string ActorName { get; set; } Property Value Type Description System.String Ranking Declaration public int Ranking { get; set; } Property Value Type Description System.Int32 Value Declaration public string Value { get; set; } Property Value Type Description System.String Extension Methods LeaderboardExtensions.ToContract(StandingsResponse)"
  },
  "api/PlayGen.SUGAR.Server.Core.Sessions.SessionTracker.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Sessions.SessionTracker.html",
    "title": "Class SessionTracker | SUGAR",
    "keywords": "Class SessionTracker Inheritance System.Object SessionTracker Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Sessions Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class SessionTracker : IDisposable Constructors SessionTracker(ILogger<SessionTracker>, TimeSpan, TimeSpan) Declaration public SessionTracker(ILogger<SessionTracker> logger, TimeSpan sessionTimeout, TimeSpan timeoutCheckInterval) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < SessionTracker > logger System.TimeSpan sessionTimeout System.TimeSpan timeoutCheckInterval Methods Dispose() Declaration public void Dispose() EndSession(Int64) Declaration public void EndSession(long sessionId) Parameters Type Name Description System.Int64 sessionId Finalize() Declaration protected void Finalize() GetByActor(Int32) Declaration public List<Session> GetByActor(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < Session > GetByGames(List<Int32>) Declaration public List<Session> GetByGames(List<int> gameIds) Parameters Type Name Description System.Collections.Generic.List < System.Int32 > gameIds Returns Type Description System.Collections.Generic.List < Session > IsActive(Int64) Declaration public bool IsActive(long sessionId) Parameters Type Name Description System.Int64 sessionId Returns Type Description System.Boolean SetLastActive(Int64, DateTime) Declaration public void SetLastActive(long sessionId, DateTime lastActive) Parameters Type Name Description System.Int64 sessionId System.DateTime lastActive StartSession(Int32, Int32) Declaration public Session StartSession(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description Session Events SessionEndedEvent Declaration public event Action<Session> SessionEndedEvent Event Type Type Description System.Action < Session > SessionStartedEvent Declaration public event Action<Session> SessionStartedEvent Event Type Type Description System.Action < Session > Implements System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.Core.Sessions.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Sessions.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Sessions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Sessions Classes Session SessionTracker"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.ProgressEvaluatorTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.ProgressEvaluatorTests.html",
    "title": "Class ProgressEvaluatorTests | SUGAR",
    "keywords": "Class ProgressEvaluatorTests Inheritance System.Object ProgressEvaluatorTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public class ProgressEvaluatorTests Constructors ProgressEvaluatorTests() Declaration public ProgressEvaluatorTests() Methods CanEvaluateActor() Declaration [Fact] public void CanEvaluateActor()"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents.html",
    "title": "Namespace PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Core.Tests.EvaluationEvents Classes EvaluationGameDataMapperEvaluationTests EvaluationTestsBase EvaluationTrackerTests ProgressEvaluatorTests"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.GameDataControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.GameDataControllerTests.html",
    "title": "Class GameDataControllerTests | SUGAR",
    "keywords": "Class GameDataControllerTests Inheritance System.Object GameDataControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax [Collection(\"Project Fixture Collection\")] public class GameDataControllerTests Methods CanCreateWithValidKey(String) Declaration [Theory] [InlineData(new object[]{\"a\"})] [InlineData(new object[]{\"My_key0\"})] [InlineData(new object[]{\"1mykey\"})] [InlineData(new object[]{\"_key\"})] [InlineData(new object[]{\"_\"})] [InlineData(new object[]{\"9291\"})] public void CanCreateWithValidKey(string key) Parameters Type Name Description System.String key CantCreateWithInValidKey(String) Declaration [Theory] [InlineData(new object[]{\"\"})] [InlineData(new object[]{\"$\"})] [InlineData(new object[]{\"dj_+das\"})] public void CantCreateWithInValidKey(string key) Parameters Type Name Description System.String key"
  },
  "api/PlayGen.SUGAR.Server.Core.Tests.Helpers.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Tests.Helpers.html",
    "title": "Class Helpers | SUGAR",
    "keywords": "Class Helpers Inheritance System.Object Helpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Tests Assembly : PlayGen.SUGAR.Server.Core.Tests.dll Syntax public static class Helpers Methods CompleteGenericAchievement(Evaluation, Int32) Declaration public static void CompleteGenericAchievement(Evaluation evaluation, int actorId) Parameters Type Name Description Evaluation evaluation System.Int32 actorId ComposeAchievementGameDatas(Int32, Evaluation, String) Declaration public static List<EvaluationData> ComposeAchievementGameDatas(int actorId, Evaluation evaluation, string value = \"50\") Parameters Type Name Description System.Int32 actorId Evaluation evaluation System.String value Returns Type Description System.Collections.Generic.List < EvaluationData > ComposeEvaluationData(Int32, EvaluationCriteria, Int32, String) Declaration public static EvaluationData ComposeEvaluationData(int actorId, EvaluationCriteria evaluationCriteria, int gameId, string value = \"50\") Parameters Type Name Description System.Int32 actorId EvaluationCriteria evaluationCriteria System.Int32 gameId System.String value Returns Type Description EvaluationData ComposeGenericAchievement(String, Int32, Int32) Declaration public static Evaluation ComposeGenericAchievement(string key, int gameId, int evaluationCriteriaCount = 1) Parameters Type Name Description System.String key System.Int32 gameId System.Int32 evaluationCriteriaCount Returns Type Description Evaluation CreateAndCompleteGenericAchievement(String, Int32, Int32) Declaration public static Evaluation CreateAndCompleteGenericAchievement(string key, int actorId, int gameId) Parameters Type Name Description System.String key System.Int32 actorId System.Int32 gameId Returns Type Description Evaluation CreateGenericAchievement(String, Int32) Declaration public static Evaluation CreateGenericAchievement(string key, int gameId) Parameters Type Name Description System.String key System.Int32 gameId Returns Type Description Evaluation CreateGenericAchievementGameData(Evaluation, Int32, String) Declaration public static void CreateGenericAchievementGameData(Evaluation evaluation, int actorId, string value = \"50\") Parameters Type Name Description Evaluation evaluation System.Int32 actorId System.String value GetOrCreateGame(String) Declaration public static Game GetOrCreateGame(string name) Parameters Type Name Description System.String name Returns Type Description Game GetOrCreateUser(String) Declaration public static User GetOrCreateUser(string name) Parameters Type Name Description System.String name Returns Type Description User"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorDataController.html",
    "title": "Class ActorDataController | SUGAR",
    "keywords": "Class ActorDataController Inheritance System.Object DbController ActorDataController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorDataController : DbController Constructors ActorDataController(SUGARContextFactory) Declaration public ActorDataController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(ActorData) Declaration public ActorData Create(ActorData data) Parameters Type Name Description ActorData data Returns Type Description ActorData Get(Int32, Int32, ICollection<String>) Declaration public List<ActorData> Get(int gameId, int actorId, ICollection<string> keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Collections.Generic.List < ActorData > KeyExists(Int32, Int32, String) Declaration public bool KeyExists(int gameId, int actorId, string key) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key Returns Type Description System.Boolean Update(ActorData) Declaration public void Update(ActorData updatedData) Parameters Type Name Description ActorData updatedData"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorRoleController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ActorRoleController.html",
    "title": "Class ActorRoleController | SUGAR",
    "keywords": "Class ActorRoleController Inheritance System.Object DbController ActorRoleController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorRoleController : DbController Constructors ActorRoleController(SUGARContextFactory) Declaration public ActorRoleController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(ActorRole) Declaration public ActorRole Create(ActorRole actorRole) Parameters Type Name Description ActorRole actorRole Returns Type Description ActorRole Delete(Int32) Declaration public void Delete(int id) Parameters Type Name Description System.Int32 id Get(Int32) Declaration public ActorRole Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description ActorRole GetActorRoles(Int32, Boolean) Declaration public List<ActorRole> GetActorRoles(int actorId, bool includeClaims = false) Parameters Type Name Description System.Int32 actorId System.Boolean includeClaims Returns Type Description System.Collections.Generic.List < ActorRole > GetActorRolesForEntity(Int32, Int32, ClaimScope, Boolean) Declaration public List<ActorRole> GetActorRolesForEntity(int actorId, int entityId, ClaimScope scope, bool includeClaims = false) Parameters Type Name Description System.Int32 actorId System.Int32 entityId ClaimScope scope System.Boolean includeClaims Returns Type Description System.Collections.Generic.List < ActorRole > GetRoleActors(Int32, Int32) Declaration public List<Actor> GetRoleActors(int roleId, int entityId) Parameters Type Name Description System.Int32 roleId System.Int32 entityId Returns Type Description System.Collections.Generic.List < Actor >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ClaimController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.ClaimController.html",
    "title": "Class ClaimController | SUGAR",
    "keywords": "Class ClaimController Inheritance System.Object DbController ClaimController Inherited Members DbController.ContextFactory DbController.DbExceptionHandler DbController.SaveChanges(DbContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ClaimController : DbController Constructors ClaimController(SUGARContextFactory) Declaration public ClaimController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Methods Create(List<Claim>) Declaration public List<Claim> Create(List<Claim> claims) Parameters Type Name Description System.Collections.Generic.List < Claim > claims Returns Type Description System.Collections.Generic.List < Claim > Get() Declaration public List<Claim> Get() Returns Type Description System.Collections.Generic.List < Claim > Get(ClaimScope, String) Declaration public Claim Get(ClaimScope scope, string name) Parameters Type Name Description ClaimScope scope System.String name Returns Type Description Claim Get(Int32) Declaration public Claim Get(int id) Parameters Type Name Description System.Int32 id Returns Type Description Claim"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.DbController.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Controllers.DbController.html",
    "title": "Class DbController | SUGAR",
    "keywords": "Class DbController Inheritance System.Object DbController AccountController AccountSourceController ActorClaimController ActorController ActorDataController ActorRoleController ClaimController EvaluationController EvaluationDataController GameController GroupController LeaderboardController MatchController RelationshipController RoleClaimController RoleController UserController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Controllers Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public abstract class DbController Constructors DbController(SUGARContextFactory) Declaration protected DbController(SUGARContextFactory contextFactory) Parameters Type Name Description SUGARContextFactory contextFactory Fields ContextFactory Declaration protected readonly SUGARContextFactory ContextFactory Field Value Type Description SUGARContextFactory DbExceptionHandler Declaration protected readonly DbExceptionHandler DbExceptionHandler Field Value Type Description DbExceptionHandler Methods SaveChanges(DbContext) Declaration protected void SaveChanges(DbContext context) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContext context"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.AchievementConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.AchievementConfig.html",
    "title": "Class AchievementConfig | SUGAR",
    "keywords": "Class AchievementConfig Inheritance System.Object AchievementConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Achievement > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class AchievementConfig : IEntityTypeConfiguration<Achievement> Methods Configure(EntityTypeBuilder<Achievement>) Declaration public void Configure(EntityTypeBuilder<Achievement> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Achievement > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorClaimConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorClaimConfig.html",
    "title": "Class ActorClaimConfig | SUGAR",
    "keywords": "Class ActorClaimConfig Inheritance System.Object ActorClaimConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < ActorClaim > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorClaimConfig : IEntityTypeConfiguration<ActorClaim> Methods Configure(EntityTypeBuilder<ActorClaim>) Declaration public void Configure(EntityTypeBuilder<ActorClaim> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < ActorClaim > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorConfig.html",
    "title": "Class ActorConfig | SUGAR",
    "keywords": "Class ActorConfig Inheritance System.Object ActorConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < Actor > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorConfig : IEntityTypeConfiguration<Actor> Methods Configure(EntityTypeBuilder<Actor>) Declaration public void Configure(EntityTypeBuilder<Actor> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < Actor > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorDataConfig.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.ActorDataConfig.html",
    "title": "Class ActorDataConfig | SUGAR",
    "keywords": "Class ActorDataConfig Inheritance System.Object ActorDataConfig Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration < ActorData > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class ActorDataConfig : IEntityTypeConfiguration<ActorData> Methods Configure(EntityTypeBuilder<ActorData>) Declaration public void Configure(EntityTypeBuilder<ActorData> builder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder < ActorData > builder Implements Microsoft.EntityFrameworkCore.IEntityTypeConfiguration<TEntity>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.EntityConfigs.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework.EntityConfigs | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework.EntityConfigs Classes AccountConfig AchievementConfig ActorClaimConfig ActorConfig ActorDataConfig ActorRelationshipConfig ActorRelationshipRequestConfig ActorRoleConfig EvaluationConfig EvaluationCriteriaConfig EvaluationDataConfig GameConfig GroupConfig LeaderboardConfig RewardConfig RoleClaimConfig SentEvaluationNotificationConfig SkillConfig UserConfig"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.DbExceptionHandler.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.DbExceptionHandler.html",
    "title": "Class DbExceptionHandler | SUGAR",
    "keywords": "Class DbExceptionHandler Inheritance System.Object DbExceptionHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Exceptions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class DbExceptionHandler Methods Handle(Exception) Declaration public void Handle(Exception exception) Parameters Type Name Description System.Exception exception"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.DuplicateRecordException.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.DuplicateRecordException.html",
    "title": "Class DuplicateRecordException | SUGAR",
    "keywords": "Class DuplicateRecordException Inheritance System.Object System.Exception DuplicateRecordException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetType() System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : PlayGen.SUGAR.Server.EntityFramework.Exceptions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class DuplicateRecordException : Exception, ISerializable Constructors DuplicateRecordException() Declaration public DuplicateRecordException() DuplicateRecordException(String) Declaration public DuplicateRecordException(string message) Parameters Type Name Description System.String message DuplicateRecordException(String, Exception) Declaration public DuplicateRecordException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.MissingRecordException.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Exceptions.MissingRecordException.html",
    "title": "Class MissingRecordException | SUGAR",
    "keywords": "Class MissingRecordException Inheritance System.Object System.Exception MissingRecordException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetType() System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : PlayGen.SUGAR.Server.EntityFramework.Exceptions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public class MissingRecordException : Exception, ISerializable Constructors MissingRecordException() Declaration public MissingRecordException() MissingRecordException(String) Declaration public MissingRecordException(string message) Parameters Type Name Description System.String message MissingRecordException(String, Exception) Declaration public MissingRecordException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.ClearDatabaseFixtureCollection.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.ClearDatabaseFixtureCollection.html",
    "title": "Class ClearDatabaseFixtureCollection | SUGAR",
    "keywords": "Class ClearDatabaseFixtureCollection Inheritance System.Object ClearDatabaseFixtureCollection Implements Xunit.ICollectionFixture < ClearDatabaseFixture > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax [CollectionDefinition(\"ClearDatabaseFixture\")] public class ClearDatabaseFixtureCollection : ICollectionFixture<ClearDatabaseFixture> Implements Xunit.ICollectionFixture<TFixture>"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.ControllerLocator.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.ControllerLocator.html",
    "title": "Class ControllerLocator | SUGAR",
    "keywords": "Class ControllerLocator Inheritance System.Object ControllerLocator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public abstract class ControllerLocator Fields ContextFactory Declaration public static readonly SUGARContextFactory ContextFactory Field Value Type Description SUGARContextFactory Properties AccountController Declaration public static AccountController AccountController { get; } Property Value Type Description AccountController AccountSourceController Declaration public static AccountSourceController AccountSourceController { get; } Property Value Type Description AccountSourceController ActorClaimController Declaration public static ActorClaimController ActorClaimController { get; } Property Value Type Description ActorClaimController ActorController Declaration public static ActorController ActorController { get; } Property Value Type Description ActorController ActorRoleController Declaration public static ActorRoleController ActorRoleController { get; } Property Value Type Description ActorRoleController ClaimController Declaration public static ClaimController ClaimController { get; } Property Value Type Description ClaimController EvaluationController Declaration public static EvaluationController EvaluationController { get; } Property Value Type Description EvaluationController EvaluationDataController Declaration public static EvaluationDataController EvaluationDataController { get; } Property Value Type Description EvaluationDataController GameController Declaration public static GameController GameController { get; } Property Value Type Description GameController GroupController Declaration public static GroupController GroupController { get; } Property Value Type Description GroupController LeaderboardController Declaration public static LeaderboardController LeaderboardController { get; } Property Value Type Description LeaderboardController MatchController Declaration public static MatchController MatchController { get; } Property Value Type Description MatchController RelationshipController Declaration public static RelationshipController RelationshipController { get; } Property Value Type Description RelationshipController RoleClaimController Declaration public static RoleClaimController RoleClaimController { get; } Property Value Type Description RoleClaimController RoleController Declaration public static RoleController RoleController { get; } Property Value Type Description RoleController UserController Declaration public static UserController UserController { get; } Property Value Type Description UserController"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.EntityFrameworkTestBase.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.EntityFrameworkTestBase.html",
    "title": "Class EntityFrameworkTestBase | SUGAR",
    "keywords": "Class EntityFrameworkTestBase Inheritance System.Object EntityFrameworkTestBase AccountControllerTests AchievementControllerTests EvaluationDataControllerTests GameControllerTests GroupControllerTests GroupMemberControllerTests UserControllerTests UserFriendControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax [Collection(\"ClearDatabaseFixture\")] public abstract class EntityFrameworkTestBase"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.EvaluationDataControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.EvaluationDataControllerTests.html",
    "title": "Class EvaluationDataControllerTests | SUGAR",
    "keywords": "Class EvaluationDataControllerTests Inheritance System.Object EntityFrameworkTestBase EvaluationDataControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class EvaluationDataControllerTests : EntityFrameworkTestBase Methods CreateAndGetGameGlobalEvaluationData() Declaration [Fact] public void CreateAndGetGameGlobalEvaluationData() CreateAndGetUserGameEvaluationData() Declaration [Fact] public void CreateAndGetUserGameEvaluationData() CreateAndGetUserGlobalEvaluationData() Declaration [Fact] public void CreateAndGetUserGlobalEvaluationData() GetMultipleUserEvaluationDatas() Declaration [Fact] public void GetMultipleUserEvaluationDatas() GetUserEvaluationDatasWithNonExistingGame() Declaration [Fact] public void GetUserEvaluationDatasWithNonExistingGame() GetUserEvaluationDatasWithNonExistingKey() Declaration [Fact] public void GetUserEvaluationDatasWithNonExistingKey() GetUserEvaluationDatasWithNonExistingUser() Declaration [Fact] public void GetUserEvaluationDatasWithNonExistingUser()"
  },
  "api/PlayGen.SUGAR.Server.Model.Account.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Account.html",
    "title": "Class Account | SUGAR",
    "keywords": "Class Account Inheritance System.Object Account Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Account Properties AccountSource Declaration public virtual AccountSource AccountSource { get; set; } Property Value Type Description AccountSource AccountSourceId Declaration public int AccountSourceId { get; set; } Property Value Type Description System.Int32 Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String Password Declaration public string Password { get; set; } Property Value Type Description System.String User Declaration public virtual User User { get; set; } Property Value Type Description User UserId Declaration public int UserId { get; set; } Property Value Type Description System.Int32 Extension Methods AccountExtensions.ToContract(Account)"
  },
  "api/PlayGen.SUGAR.Server.Model.AccountSource.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.AccountSource.html",
    "title": "Class AccountSource | SUGAR",
    "keywords": "Class AccountSource Inheritance System.Object AccountSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class AccountSource Properties ApiSecret Declaration public string ApiSecret { get; set; } Property Value Type Description System.String AutoRegister Declaration public bool AutoRegister { get; set; } Property Value Type Description System.Boolean Description Declaration public string Description { get; set; } Property Value Type Description System.String Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 RequiresPassword Declaration public bool RequiresPassword { get; set; } Property Value Type Description System.Boolean Token Declaration public string Token { get; set; } Property Value Type Description System.String UsernamePattern Declaration public string UsernamePattern { get; set; } Property Value Type Description System.String Extension Methods AccountSourceExtensions.ToContract(AccountSource)"
  },
  "api/PlayGen.SUGAR.Server.Model.Achievement.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Achievement.html",
    "title": "Class Achievement | SUGAR",
    "keywords": "Class Achievement Inheritance System.Object Evaluation Achievement Inherited Members Evaluation.Id Evaluation.GameId Evaluation.Name Evaluation.Description Evaluation.ActorType Evaluation.Token Evaluation.EvaluationCriterias Evaluation.Rewards System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Achievement : Evaluation Properties EvaluationType Declaration public override EvaluationType EvaluationType { get; } Property Value Type Description EvaluationType Overrides Evaluation.EvaluationType Extension Methods AchievementExtensions.ToContract(Achievement)"
  },
  "api/PlayGen.SUGAR.Server.Model.Actor.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Actor.html",
    "title": "Class Actor | SUGAR",
    "keywords": "Class Actor Inheritance System.Object Actor Group User Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public abstract class Actor Properties Acceptors Declaration public virtual List<ActorRelationship> Acceptors { get; set; } Property Value Type Description System.Collections.Generic.List < ActorRelationship > ActorType Declaration public abstract ActorType ActorType { get; } Property Value Type Description ActorType Description Declaration public string Description { get; set; } Property Value Type Description System.String Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 Name Declaration public string Name { get; set; } Property Value Type Description System.String RequestAcceptors Declaration public virtual List<ActorRelationshipRequest> RequestAcceptors { get; set; } Property Value Type Description System.Collections.Generic.List < ActorRelationshipRequest > Requestors Declaration public virtual List<ActorRelationship> Requestors { get; set; } Property Value Type Description System.Collections.Generic.List < ActorRelationship > RequestRequestors Declaration public virtual List<ActorRelationshipRequest> RequestRequestors { get; set; } Property Value Type Description System.Collections.Generic.List < ActorRelationshipRequest > Extension Methods ActorExtensions.ToActorContract(Actor)"
  },
  "api/PlayGen.SUGAR.Server.Model.Interfaces.IModificationHistory.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Interfaces.IModificationHistory.html",
    "title": "Interface IModificationHistory | SUGAR",
    "keywords": "Interface IModificationHistory Namespace : PlayGen.SUGAR.Server.Model.Interfaces Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public interface IModificationHistory Properties DateCreated Declaration DateTime DateCreated { get; set; } Property Value Type Description System.DateTime DateModified Declaration DateTime DateModified { get; set; } Property Value Type Description System.DateTime"
  },
  "api/PlayGen.SUGAR.Server.Model.Interfaces.IRelationship.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Interfaces.IRelationship.html",
    "title": "Interface IRelationship | SUGAR",
    "keywords": "Interface IRelationship Namespace : PlayGen.SUGAR.Server.Model.Interfaces Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public interface IRelationship Properties AcceptorId Declaration int AcceptorId { get; set; } Property Value Type Description System.Int32 RequestorId Declaration int RequestorId { get; set; } Property Value Type Description System.Int32"
  },
  "api/PlayGen.SUGAR.Server.Model.Interfaces.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Interfaces.html",
    "title": "Namespace PlayGen.SUGAR.Server.Model.Interfaces | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Model.Interfaces Interfaces IGameData IModificationHistory IRelationship"
  },
  "api/PlayGen.SUGAR.Server.Model.Leaderboard.html": {
    "href": "api/PlayGen.SUGAR.Server.Model.Leaderboard.html",
    "title": "Class Leaderboard | SUGAR",
    "keywords": "Class Leaderboard Inheritance System.Object Leaderboard Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Model Assembly : PlayGen.SUGAR.Server.Model.dll Syntax public class Leaderboard Properties ActorType Declaration public ActorType ActorType { get; set; } Property Value Type Description ActorType CriteriaScope Declaration public CriteriaScope CriteriaScope { get; set; } Property Value Type Description CriteriaScope EvaluationDataCategory Declaration public EvaluationDataCategory EvaluationDataCategory { get; set; } Property Value Type Description EvaluationDataCategory EvaluationDataKey Declaration public string EvaluationDataKey { get; set; } Property Value Type Description System.String EvaluationDataType Declaration public EvaluationDataType EvaluationDataType { get; set; } Property Value Type Description EvaluationDataType GameId Declaration public int GameId { get; set; } Property Value Type Description System.Int32 LeaderboardType Declaration public LeaderboardType LeaderboardType { get; set; } Property Value Type Description LeaderboardType Name Declaration public string Name { get; set; } Property Value Type Description System.String Token Declaration public string Token { get; set; } Property Value Type Description System.String Extension Methods LeaderboardExtensions.ToContract(Leaderboard)"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Attributes.ArgumentsNotNullAttribute.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Attributes.ArgumentsNotNullAttribute.html",
    "title": "Class ArgumentsNotNullAttribute | SUGAR",
    "keywords": "Class ArgumentsNotNullAttribute Attributes used to flag controller actions where not null arguments may be passed. Inheritance System.Object System.Attribute Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute ArgumentsNotNullAttribute Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IResultFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate) Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.Order System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.Match(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Attributes Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax public class ArgumentsNotNullAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Methods OnActionExecuting(ActionExecutingContext) Declaration public override void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Overrides Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IResultFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncResultFilter Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Attributes.ValidateSessionAttribute.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Attributes.ValidateSessionAttribute.html",
    "title": "Class ValidateSessionAttribute | SUGAR",
    "keywords": "Class ValidateSessionAttribute Inheritance System.Object System.Attribute ValidateSessionAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.Match(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Attributes Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class ValidateSessionAttribute : Attribute"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Attributes.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Attributes.html",
    "title": "Namespace PlayGen.SUGAR.Server.WebAPI.Attributes | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.WebAPI.Attributes Classes ArgumentsNotNullAttribute Attributes used to flag controller actions where not null arguments may be passed. ValidateSessionAttribute"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.AccountController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.AccountController.html",
    "title": "Class AccountController | SUGAR",
    "keywords": "Class AccountController Web Controller that facilitates account specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller AccountController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] public class AccountController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors AccountController(AccountController, IAuthorizationService) Declaration public AccountController(AccountController accountCoreController, IAuthorizationService authorizationService) Parameters Type Name Description AccountController accountCoreController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods Create(AccountRequest) Register a new account and creates an associated user. Requires the to be unique. Returns a JsonWebToken used for authorization in any further calls to the API. Example Usage: POST api/account/create Declaration [HttpPost(\"create\")] public IActionResult Create([FromBody] AccountRequest accountRequest) Parameters Type Name Description AccountRequest accountRequest object that contains the details of the new Account. Returns Type Description Microsoft.AspNetCore.Mvc.IActionResult A containing the new Account details. Delete(Int32) Delete Account with the ID provided. Example Usage: DELETE api/account/1 Declaration [HttpDelete(\"{id:int}\")] [Authorize(\"Bearer\")] public Task<IActionResult> Delete([FromRoute] int id) Parameters Type Name Description System.Int32 id Account ID. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ResourceController.html": {
    "href": "api/PlayGen.SUGAR.Server.WebAPI.Controllers.ResourceController.html",
    "title": "Class ResourceController | SUGAR",
    "keywords": "Class ResourceController Web Controller that facilitates UserData specific operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase Microsoft.AspNetCore.Mvc.Controller ResourceController Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable Inherited Members Microsoft.AspNetCore.Mvc.Controller.View() Microsoft.AspNetCore.Mvc.Controller.View(System.String) Microsoft.AspNetCore.Mvc.Controller.View(System.Object) Microsoft.AspNetCore.Mvc.Controller.View(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView() Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object) Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object) Microsoft.AspNetCore.Mvc.Controller.Json(System.Object, Newtonsoft.Json.JsonSerializerSettings) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext) Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext, Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate) Microsoft.AspNetCore.Mvc.Controller.Dispose() Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean) Microsoft.AspNetCore.Mvc.Controller.ViewData Microsoft.AspNetCore.Mvc.Controller.TempData Microsoft.AspNetCore.Mvc.Controller.ViewBag Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.WebAPI.Controllers Assembly : PlayGen.SUGAR.Server.WebAPI.dll Syntax [Route(\"api/[controller]\")] [Authorize(\"Bearer\")] public class ResourceController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors ResourceController(ResourceController, IAuthorizationService) Declaration public ResourceController(ResourceController resourceController, IAuthorizationService authorizationService) Parameters Type Name Description ResourceController resourceController Microsoft.AspNetCore.Authorization.IAuthorizationService authorizationService Methods AddOrUpdate(ResourceAddRequest) Creates or updates a Resource record. Example Usage: POST api/resource Declaration [HttpPost] public Task<IActionResult> AddOrUpdate([FromBody] ResourceAddRequest resourceRequest) Parameters Type Name Description ResourceAddRequest resourceRequest object that holds the details of the ResourceData. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the new Resource details. Get(Nullable<Int32>, Nullable<Int32>, String[]) Find a list of all Resources filtered by the , and provided. Example Usage: GET api/resource?actorId=1&gameId=1&key=key1&key=key2 Declaration [HttpGet] public Task<IActionResult> Get(int ? gameId, int ? actorId, string[] keys) Parameters Type Name Description System.Nullable < System.Int32 > gameId ID of a Game. System.Nullable < System.Int32 > actorId ID of a User/Group. System.String [] keys Optional array of Key names to filter results by. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A list of which match the search criteria. Transfer(ResourceTransferRequest) Transfers a quantity of a specific resource. Example Usage: Post api/resource/transfer Declaration [HttpPost(\"transfer\")] public Task<IActionResult> Transfer([FromBody] ResourceTransferRequest transferRequest) Parameters Type Name Description ResourceTransferRequest transferRequest object that holds the details of the resoruce transfer. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A containing the modified resources. Implements Microsoft.AspNetCore.Mvc.Filters.IActionFilter Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata System.IDisposable"
  },
  "api/PlayGen.SUGAR.Client.Tests.ClientTestsFixture.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.ClientTestsFixture.html",
    "title": "Class ClientTestsFixture | SUGAR",
    "keywords": "Class ClientTestsFixture Inheritance System.Object ClientTestsFixture Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class ClientTestsFixture : IDisposable Constructors ClientTestsFixture() Declaration public ClientTestsFixture() Fields Server Declaration protected readonly TestServer Server Field Value Type Description Microsoft.AspNetCore.TestHost.TestServer SUGARClient Declaration public readonly SUGARClient SUGARClient Field Value Type Description SUGARClient Methods CreateSugarClient(Dictionary<String, String>) Declaration public SUGARClient CreateSugarClient(Dictionary<string, string> persistentHeaders = null) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.String > persistentHeaders Returns Type Description SUGARClient Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/PlayGen.SUGAR.Client.Tests.EvaluationClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.EvaluationClientTests.html",
    "title": "Class EvaluationClientTests | SUGAR",
    "keywords": "Class EvaluationClientTests Inheritance System.Object ClientTestBase EvaluationClientTests AchievementClientTests SkillClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public abstract class EvaluationClientTests : ClientTestBase Constructors EvaluationClientTests(ClientTestsFixture) Declaration protected EvaluationClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CompleteGenericEvaluation(String, Int32, Int32) Declaration protected void CompleteGenericEvaluation(string key, int userId, int gameId) Parameters Type Name Description System.String key System.Int32 userId System.Int32 gameId"
  },
  "api/PlayGen.SUGAR.Client.Tests.GroupClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.GroupClientTests.html",
    "title": "Class GroupClientTests | SUGAR",
    "keywords": "Class GroupClientTests Inheritance System.Object ClientTestBase GroupClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class GroupClientTests : ClientTestBase Constructors GroupClientTests(ClientTestsFixture) Declaration public GroupClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanCreateGroup() Declaration [Fact] public void CanCreateGroup() CanCreateWithValidDescription(String) Declaration [Theory] [InlineData(new object[]{\"\"})] [InlineData(new object[]{\"Short Description\"})] [InlineData(new object[]{\"Medium Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi sodales nisl quis neque tempus bibendum. Nunc ut sem vel metus venenatis euismod sed id enim. Sed faucibus erat eget sapien fringilla, id malesuada nunc convallis. Nam dapibus cursus accumsan. Sed in fermentum libero. Proin quis felis turpis. Etiam feugiat scelerisque metus id pretium. Morbi lacus purus, ornare eget libero nec, fringilla laoreet dui. Suspendisse dictum a turpis eu vulputate. Vestibulum ante ipsum primis in cras amet.\"})] [InlineData(new object[]{\"Max Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut in venenatis augue, quis hendrerit justo. Praesent malesuada leo vel nisl aliquet, id efficitur nibh tincidunt. Donec laoreet orci vel sollicitudin rutrum. Maecenas lacinia libero nec finibus porttitor. Donec tempus tincidunt felis in viverra. Aliquam eleifend ex sem, at porta sapien malesuada ac. Praesent auctor ligula dictum odio gravida tempor. Fusce malesuada malesuada magna non pretium. Mauris lobortis accumsan porttitor. Donec commodo risus at neque porttitor volutpat. Phasellus et ullamcorper libero, vel euismod massa. Vivamus ullamcorper nibh a dolor accumsan tempor. Curabitur laoreet accumsan nisi non porttitor. Donec tincidunt sapien eu ligula consequat fringilla sed eu augue. Nulla sed convallis lacus, eu venenatis urna. Duis eu purus tempor dolor porttitor tincidunt eu quis libero. Nunc sit amet aliquet eros.Sed sed vestibulum nulla.Phasellus suscipit arcu vel neque egestas, eget rutrum est sollicitudin.Curabitur amet.\"})] public void CanCreateWithValidDescription(string description) Parameters Type Name Description System.String description CanDeleteGroup() Declaration [Fact] public void CanDeleteGroup() CanGetGroupById() Declaration [Fact] public void CanGetGroupById() CanGetGroupsByName() Declaration [Fact] public void CanGetGroupsByName() CannotCreateDuplicateGroup() Declaration [Fact] public void CannotCreateDuplicateGroup() CannotCreateGroupWithNoName() Declaration [Fact] public void CannotCreateGroupWithNoName() CannotDeleteNonExistingGroup() Declaration [Fact] public void CannotDeleteNonExistingGroup() CannotGetGroupByEmptyName() Declaration [Fact] public void CannotGetGroupByEmptyName() CannotGetNotExistingGroupById() Declaration [Fact] public void CannotGetNotExistingGroupById() CannotGetNotExistingGroupByName() Declaration [Fact] public void CannotGetNotExistingGroupByName() CannotUpdateGroupToDuplicateName() Declaration [Fact] public void CannotUpdateGroupToDuplicateName() CannotUpdateGroupToNoName() Declaration [Fact] public void CannotUpdateGroupToNoName() CannotUpdateNonExistingGroup() Declaration [Fact] public void CannotUpdateNonExistingGroup() CantCreateWithInvalidDescription(String) Declaration [Theory] [InlineData(new object[]{\"Over Max Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam vel pulvinar lorem. Nulla dictum tincidunt sem sed ornare. Etiam convallis gravida dolor et euismod. Cras vitae mattis felis, vitae placerat tortor. Suspendisse ultrices sagittis blandit. Vestibulum aliquet odio ut erat ornare, at scelerisque sapien iaculis. Donec commodo volutpat sapien, viverra imperdiet odio vestibulum at. Nullam aliquet gravida felis egestas mollis. Donec sodales, lorem ac lobortis feugiat, dolor neque iaculis leo, et finibus felis lorem sit amet odio. Fusce sodales risus in accumsan volutpat.In elementum scelerisque ex non mattis.Cras in malesuada metus.Suspendisse vitae volutpat velit.Nulla nibh lectus, elementum quis libero quis, iaculis pharetra erat.Nam in tortor tincidunt, volutpat neque vel, vestibulum nisi.Curabitur imperdiet mattis maximus.Ut posuere volutpat vehicula.Nunc interdum arcu nisl, nec vehicula tellus ultrices non.Fusce in placerat lectus.Etiam gravida vitae nibh eget interdum.Proin sagittis sem non tempor luctus.Morbi tempor, risus nec pretium aliquet, felis ante metus.\"})] public void CantCreateWithInvalidDescription(string description) Parameters Type Name Description System.String description CanUpdateGroup() Declaration [Fact] public void CanUpdateGroup()"
  },
  "api/PlayGen.SUGAR.Client.Tests.LeaderboardClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.LeaderboardClientTests.html",
    "title": "Class LeaderboardClientTests | SUGAR",
    "keywords": "Class LeaderboardClientTests Inheritance System.Object ClientTestBase LeaderboardClientTests Inherited Members ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class LeaderboardClientTests : ClientTestBase Constructors LeaderboardClientTests(ClientTestsFixture) Declaration public LeaderboardClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanGetGlobalLeaderboardStandings() Declaration [Fact] public void CanGetGlobalLeaderboardStandings() CanGetLeaderboardsByGame() Declaration [Fact] public void CanGetLeaderboardsByGame() CanGetLeaderboardStandings() Declaration [Fact] public void CanGetLeaderboardStandings() CanGetMultipleLeaderboardStandingsForActor() Declaration [Fact] public void CanGetMultipleLeaderboardStandingsForActor() CannotGetFriendsLeaderboardStandingsWithoutActorId() Declaration [Fact] public void CannotGetFriendsLeaderboardStandingsWithoutActorId() CannotGetGlobalLeaderboardWithEmptyToken() Declaration [Fact] public void CannotGetGlobalLeaderboardWithEmptyToken() CannotGetGroupMemberLeaderboardStandingsWithoutActorId() Declaration [Fact] public void CannotGetGroupMemberLeaderboardStandingsWithoutActorId() CannotGetGroupMembersLeaderboardStandingsWithIncorrectActorType() Declaration [Fact] public void CannotGetGroupMembersLeaderboardStandingsWithIncorrectActorType() CannotGetLeaderboardsByNotExistingGame() Declaration [Fact] public void CannotGetLeaderboardsByNotExistingGame() CannotGetLeaderboardStandingsWithIncorrectActorType() Declaration [Fact] public void CannotGetLeaderboardStandingsWithIncorrectActorType() CannotGetLeaderboardStandingsWithoutGameId() Declaration [Fact] public void CannotGetLeaderboardStandingsWithoutGameId() CannotGetLeaderboardStandingsWithoutLeaderboardFilterType() Declaration [Fact] public void CannotGetLeaderboardStandingsWithoutLeaderboardFilterType() CannotGetLeaderboardStandingsWithoutPageLimit() Declaration [Fact] public void CannotGetLeaderboardStandingsWithoutPageLimit() CannotGetLeaderboardStandingsWithoutPageOffset() Declaration [Fact] public void CannotGetLeaderboardStandingsWithoutPageOffset() CannotGetLeaderboardStandingsWithoutToken() Declaration [Fact] public void CannotGetLeaderboardStandingsWithoutToken() CannotGetLeaderboardStandingsWithZeroPageLimit() Declaration [Fact] public void CannotGetLeaderboardStandingsWithZeroPageLimit() CannotGetLeaderboardWithEmptyToken() Declaration [Fact] public void CannotGetLeaderboardWithEmptyToken() CannotGetNearLeaderboardStandingsWithoutActorId() Declaration [Fact] public void CannotGetNearLeaderboardStandingsWithoutActorId() CannotGetNotExistingGlobalLeaderboard() Declaration [Fact] public void CannotGetNotExistingGlobalLeaderboard() CannotGetNotExistingLeaderboard() Declaration [Fact] public void CannotGetNotExistingLeaderboard() CannotGetNotExistingLeaderboardStandings() Declaration [Fact] public void CannotGetNotExistingLeaderboardStandings()"
  },
  "api/PlayGen.SUGAR.Client.Tests.SkillClientTests.html": {
    "href": "api/PlayGen.SUGAR.Client.Tests.SkillClientTests.html",
    "title": "Class SkillClientTests | SUGAR",
    "keywords": "Class SkillClientTests Inheritance System.Object ClientTestBase EvaluationClientTests SkillClientTests Inherited Members EvaluationClientTests.CompleteGenericEvaluation(String, Int32, Int32) ClientTestBase.Fixture System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Client.Tests Assembly : PlayGen.SUGAR.Client.Tests.dll Syntax public class SkillClientTests : EvaluationClientTests Constructors SkillClientTests(ClientTestsFixture) Declaration public SkillClientTests(ClientTestsFixture fixture) Parameters Type Name Description ClientTestsFixture fixture Methods CanDisableNotifications() Declaration [Fact] public void CanDisableNotifications() CanGetGlobalSkillProgress() Declaration [Fact] public void CanGetGlobalSkillProgress() CanGetNotifications() Declaration [Fact] public void CanGetNotifications() CanGetSkillProgress() Declaration [Fact] public void CanGetSkillProgress() CannotGetNotExistingGlobalSkillProgress() Declaration [Fact] public void CannotGetNotExistingGlobalSkillProgress() CannotGetNotExistingSkillProgress() Declaration [Fact] public void CannotGetNotExistingSkillProgress() DontGetAlreadyRecievedNotifications() Declaration [Fact] public void DontGetAlreadyRecievedNotifications()"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Exceptions.ClaimNotFoundException.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Exceptions.ClaimNotFoundException.html",
    "title": "Class ClaimNotFoundException | SUGAR",
    "keywords": "Class ClaimNotFoundException Inheritance System.Object ClaimNotFoundException Namespace : PlayGen.SUGAR.Server.Authentication.Exceptions Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public class ClaimNotFoundException : SUGARException Constructors ClaimNotFoundException(String) Declaration public ClaimNotFoundException(string message) Parameters Type Name Description System.String message"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Exceptions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Exceptions.html",
    "title": "Namespace PlayGen.SUGAR.Server.Authentication.Exceptions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Authentication.Exceptions Classes ClaimNotFoundException"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Extensions.ClaimsExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Extensions.ClaimsExtensions.html",
    "title": "Class ClaimsExtensions | SUGAR",
    "keywords": "Class ClaimsExtensions Inheritance System.Object ClaimsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication.Extensions Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public static class ClaimsExtensions Methods GetGameId(IHeaderDictionary) Declaration public static int GetGameId(this IHeaderDictionary headers) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers Returns Type Description System.Int32 GetSessionId(IHeaderDictionary) Declaration public static int GetSessionId(this IHeaderDictionary headers) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers Returns Type Description System.Int32 GetUserId(IHeaderDictionary) Declaration public static int GetUserId(this IHeaderDictionary headers) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers Returns Type Description System.Int32 TryGetGameId(IHeaderDictionary, out Int32) Declaration public static bool TryGetGameId(this IHeaderDictionary headers, out int gameId) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.Int32 gameId Returns Type Description System.Boolean TryGetSessionId(IHeaderDictionary, out Int32) Declaration public static bool TryGetSessionId(this IHeaderDictionary headers, out int sessionId) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.Int32 sessionId Returns Type Description System.Boolean TryGetUserId(IHeaderDictionary, out Int32) Declaration public static bool TryGetUserId(this IHeaderDictionary headers, out int userId) Parameters Type Name Description Microsoft.AspNetCore.Http.IHeaderDictionary headers System.Int32 userId Returns Type Description System.Boolean"
  },
  "api/PlayGen.SUGAR.Server.Authentication.Extensions.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.Extensions.html",
    "title": "Namespace PlayGen.SUGAR.Server.Authentication.Extensions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.Authentication.Extensions Classes AuthorizationHeaderExtensions AuthorizationTokenExtensions ClaimsExtensions"
  },
  "api/PlayGen.SUGAR.Server.Authentication.TokenController.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.TokenController.html",
    "title": "Class TokenController | SUGAR",
    "keywords": "Class TokenController Inheritance System.Object TokenController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Authentication Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public class TokenController Constructors TokenController(TokenAuthOptions) Declaration public TokenController(TokenAuthOptions token) Parameters Type Name Description TokenAuthOptions token Methods IssueToken(HttpContext, Session) Declaration public void IssueToken(HttpContext context, Session session) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context Session session IssueToken(HttpContext, Int64, Int32, Int32) Declaration public void IssueToken(HttpContext context, long sessionId, int gameId, int userId) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context System.Int64 sessionId System.Int32 gameId System.Int32 userId RevokeToken(HttpContext) Declaration public void RevokeToken(HttpContext context) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context"
  },
  "api/PlayGen.SUGAR.Server.Authentication.TokenValidity.html": {
    "href": "api/PlayGen.SUGAR.Server.Authentication.TokenValidity.html",
    "title": "Enum TokenValidity | SUGAR",
    "keywords": "Enum TokenValidity Namespace : PlayGen.SUGAR.Server.Authentication Assembly : PlayGen.SUGAR.Server.Authentication.dll Syntax public enum TokenValidity Fields Name Description Expired Invalid Valid"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.EvaluationController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.EvaluationController.html",
    "title": "Class EvaluationController | SUGAR",
    "keywords": "Class EvaluationController Inheritance System.Object CriteriaEvaluator EvaluationController Inherited Members CriteriaEvaluator.RelationshipCoreController CriteriaEvaluator.ContextFactory CriteriaEvaluator.EvaluationDataLogger CriteriaEvaluator.IsCriteriaSatisified(Int32, Int32, List<EvaluationCriteria>, ActorType, EvaluationType) CriteriaEvaluator.Evaluate(Int32, Int32, EvaluationCriteria, ActorType, EvaluationType) CriteriaEvaluator.EvaluateLong(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateFloat(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateString(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateBool(Int32, Int32, EvaluationCriteria) CriteriaEvaluator.EvaluateManyLong(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyFloat(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyString(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.EvaluateManyBool(Int32, List<Actor>, EvaluationCriteria) CriteriaEvaluator.CompareValues<T>(T, T, ComparisonType, EvaluationDataType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class EvaluationController : CriteriaEvaluator Constructors EvaluationController(ILogger<EvaluationController>, ILogger<EvaluationDataController>, EvaluationController, RelationshipController, ActorController, RewardController, SUGARContextFactory) Declaration public EvaluationController(ILogger<EvaluationController> logger, ILogger<EvaluationDataController> evaluationDataLogger, EvaluationController evaluationDbController, RelationshipController relationshipCoreController, ActorController actorController, RewardController rewardController, SUGARContextFactory contextFactory) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < EvaluationController > logger Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger EvaluationController evaluationDbController RelationshipController relationshipCoreController ActorController actorController RewardController rewardController SUGARContextFactory contextFactory Fields EvaluationCreatedEvent Declaration public static Action<Evaluation> EvaluationCreatedEvent Field Value Type Description System.Action < Evaluation > EvaluationDeletedEvent Declaration public static Action<Evaluation> EvaluationDeletedEvent Field Value Type Description System.Action < Evaluation > EvaluationUpdatedEvent Declaration public static Action<Evaluation> EvaluationUpdatedEvent Field Value Type Description System.Action < Evaluation > Methods Create(Evaluation) Declaration public Evaluation Create(Evaluation evaluation) Parameters Type Name Description Evaluation evaluation Returns Type Description Evaluation Delete(String, Int32) Declaration public void Delete(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId EvaluateProgress(Evaluation, Int32) Declaration public float EvaluateProgress(Evaluation evaluation, int actorId) Parameters Type Name Description Evaluation evaluation System.Int32 actorId Returns Type Description System.Single Get() Declaration public List<Evaluation> Get() Returns Type Description System.Collections.Generic.List < Evaluation > Get(String, Int32) Declaration public Evaluation Get(string token, int gameId) Parameters Type Name Description System.String token System.Int32 gameId Returns Type Description Evaluation GetByGame(Int32) Declaration public List<Evaluation> GetByGame(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < Evaluation > GetEvaluation(Int32, EvaluationType) Declaration public List<Evaluation> GetEvaluation(int gameId, EvaluationType evaluationType) Parameters Type Name Description System.Int32 gameId EvaluationType evaluationType Returns Type Description System.Collections.Generic.List < Evaluation > GetGameProgress(Int32, Int32) Declaration public List<EvaluationProgress> GetGameProgress(int gameId, int actorId) Parameters Type Name Description System.Int32 gameId System.Int32 actorId Returns Type Description System.Collections.Generic.List < EvaluationProgress > GetProgress(String, Int32, Int32) Declaration public EvaluationProgress GetProgress(string token, int gameId, int actorId) Parameters Type Name Description System.String token System.Int32 gameId System.Int32 actorId Returns Type Description EvaluationProgress IsAlreadyCompleted(Evaluation, Int32) Declaration public bool IsAlreadyCompleted(Evaluation evaluation, int actorId) Parameters Type Name Description Evaluation evaluation System.Int32 actorId Returns Type Description System.Boolean Update(Evaluation) Declaration public void Update(Evaluation evaluation) Parameters Type Name Description Evaluation evaluation"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.EvaluationDataController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.EvaluationDataController.html",
    "title": "Class EvaluationDataController | SUGAR",
    "keywords": "Class EvaluationDataController Inheritance System.Object EvaluationDataController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class EvaluationDataController Constructors EvaluationDataController(ILogger<EvaluationDataController>, SUGARContextFactory, EvaluationDataCategory) Declaration public EvaluationDataController(ILogger<EvaluationDataController> logger, SUGARContextFactory contextFactory, EvaluationDataCategory category) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < EvaluationDataController > logger SUGARContextFactory contextFactory EvaluationDataCategory category Fields EvaluationDataAddedEvent Declaration public static Action<EvaluationData> EvaluationDataAddedEvent Field Value Type Description System.Action < EvaluationData > Methods Add(EvaluationData) Declaration public EvaluationData Add(EvaluationData newData) Parameters Type Name Description EvaluationData newData Returns Type Description EvaluationData Add(EvaluationData[]) Declaration public void Add(EvaluationData[] datas) Parameters Type Name Description EvaluationData [] datas CountKeys(Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public int CountKeys(int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Int32 Get(ICollection<Int32>) Declaration public List<EvaluationData> Get(ICollection<int> ids) Parameters Type Name Description System.Collections.Generic.ICollection < System.Int32 > ids Returns Type Description System.Collections.Generic.List < EvaluationData > Get(Int32, Int32, Nullable<Int32>, String[]) Declaration public List<EvaluationData> Get(int gameId, int actorId, int ? entityId, string[] keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Nullable < System.Int32 > entityId System.String [] keys Returns Type Description System.Collections.Generic.List < EvaluationData > Get(Int32, Int32, String[]) Declaration public List<EvaluationData> Get(int gameId, int actorId, string[] keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String [] keys Returns Type Description System.Collections.Generic.List < EvaluationData > Get(Int32, String[]) Declaration public List<EvaluationData> Get(int entityId, string[] keys = null) Parameters Type Name Description System.Int32 entityId System.String [] keys Returns Type Description System.Collections.Generic.List < EvaluationData > GetActorData(Int32) Declaration public List<EvaluationData> GetActorData(int actorId) Parameters Type Name Description System.Int32 actorId Returns Type Description System.Collections.Generic.List < EvaluationData > GetGameActors(Int32) Declaration public List<int> GetGameActors(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < System.Int32 > GetGameKeyActors(Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public List<int> GetGameKeyActors(int gameId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Collections.Generic.List < System.Int32 > GetGameKeys(Int32) Declaration public List<KeyValuePair<string, EvaluationDataType>> GetGameKeys(int gameId) Parameters Type Name Description System.Int32 gameId Returns Type Description System.Collections.Generic.List < System.Collections.Generic.KeyValuePair < System.String , EvaluationDataType >> IsValid(EvaluationData, out String) Declaration public static bool IsValid(EvaluationData data, out string failure) Parameters Type Name Description EvaluationData data System.String failure Returns Type Description System.Boolean KeyExists(Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public bool KeyExists(int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean List(Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public List<EvaluationData> List(int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Collections.Generic.List < EvaluationData > ParseCheck(EvaluationData) Declaration protected static bool ParseCheck(EvaluationData data) Parameters Type Name Description EvaluationData data Returns Type Description System.Boolean TryGetEarliest(Int32, Int32, String, out EvaluationData, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetEarliest(int gameId, int actorId, string key, out EvaluationData earliest, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationData earliest EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean TryGetLatest(Int32, Int32, String, out EvaluationData, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetLatest(int gameId, int actorId, string key, out EvaluationData latest, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key EvaluationData latest EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean TryGetMax<T>(Int32, Int32, String, out Nullable<T>, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetMax<T>(int gameId, int actorId, string key, out T? value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime))where T : struct Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key System.Nullable <T> value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean Type Parameters Name Description T TryGetMin<T>(Int32, Int32, String, out Nullable<T>, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetMin<T>(int gameId, int actorId, string key, out T? value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime))where T : struct Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key System.Nullable <T> value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean Type Parameters Name Description T TryGetSum<T>(Int32, Int32, String, out Nullable<T>, EvaluationDataType, DateTime, DateTime) Declaration public bool TryGetSum<T>(int gameId, int actorId, string key, out T? value, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime))where T : struct Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String key System.Nullable <T> value EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Boolean Type Parameters Name Description T Update(EvaluationData) Declaration public EvaluationData Update(EvaluationData data) Parameters Type Name Description EvaluationData data Returns Type Description EvaluationData ValidateData(EvaluationData) Declaration protected void ValidateData(EvaluationData data) Parameters Type Name Description EvaluationData data"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.RelationshipController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.RelationshipController.html",
    "title": "Class RelationshipController | SUGAR",
    "keywords": "Class RelationshipController Inheritance System.Object RelationshipController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class RelationshipController Constructors RelationshipController(ILogger<RelationshipController>, RelationshipController) Declaration public RelationshipController(ILogger<RelationshipController> logger, RelationshipController relationshipDbController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < RelationshipController > logger RelationshipController relationshipDbController Methods CreateRequest(ActorRelationship, Boolean) Create a new relationship between actores Declaration public void CreateRequest(ActorRelationship newRelationship, bool autoAccept) Parameters Type Name Description ActorRelationship newRelationship System.Boolean autoAccept If the relationship is accepted immediately GetRelationshipCount(Int32, ActorType) Get a count of relationships shared between an actor and other actor types Declaration public int GetRelationshipCount(int actorId, ActorType actorType) Parameters Type Name Description System.Int32 actorId The actor to get a list of relationships with ActorType actorType The type of actor that relationship is shared with Returns Type Description System.Int32 GetRelationships(Int32, ActorType) Get relationships shared between an actor and other actor types Declaration public List<Actor> GetRelationships(int actorId, ActorType actorType) Parameters Type Name Description System.Int32 actorId The actor to get list of relationsips with ActorType actorType The tyoe of actor that relationship is shared with Returns Type Description System.Collections.Generic.List < Actor > GetRequests(Int32, ActorType) Get relationship requests from an actor type to an actor Declaration public List<Actor> GetRequests(int actorId, ActorType fromActorType) Parameters Type Name Description System.Int32 actorId The recipient of the request ActorType fromActorType The actor type that sent the request Returns Type Description System.Collections.Generic.List < Actor > GetSentRequests(Int32, ActorType) Get relationship requests that an actor has sent to an actor type Declaration public List<Actor> GetSentRequests(int actorId, ActorType toActorType) Parameters Type Name Description System.Int32 actorId The actor who has sent requests ActorType toActorType The actor type that has received the requests Returns Type Description System.Collections.Generic.List < Actor > Update(ActorRelationship) Update an existing relationship between actors Declaration public void Update(ActorRelationship relationship) Parameters Type Name Description ActorRelationship relationship UpdateRequest(ActorRelationship, Boolean) Update an existing relationship request between actors Declaration public void UpdateRequest(ActorRelationship relationship, bool accepted) Parameters Type Name Description ActorRelationship relationship System.Boolean accepted If the relationship has been accepted by one of the actors"
  },
  "api/PlayGen.SUGAR.Server.Core.Controllers.ResourceController.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.Controllers.ResourceController.html",
    "title": "Class ResourceController | SUGAR",
    "keywords": "Class ResourceController Inheritance System.Object ResourceController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.Controllers Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class ResourceController Constructors ResourceController(ILogger<ResourceController>, ILogger<EvaluationDataController>, SUGARContextFactory) Declaration public ResourceController(ILogger<ResourceController> logger, ILogger<EvaluationDataController> evaluationDataLogger, SUGARContextFactory contextFactory) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ResourceController > logger Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger SUGARContextFactory contextFactory Methods AddQuantity(Int32, Int64) Declaration public EvaluationData AddQuantity(int resourceId, long addAmount) Parameters Type Name Description System.Int32 resourceId System.Int64 addAmount Returns Type Description EvaluationData Create(EvaluationData) Declaration public void Create(EvaluationData data) Parameters Type Name Description EvaluationData data Get(Int32, Int32, String[]) Declaration public List<EvaluationData> Get(int gameId, int actorId, string[] keys = null) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.String [] keys Returns Type Description System.Collections.Generic.List < EvaluationData > Transfer(Int32, Int32, Int32, String, Int64, out EvaluationData) Declaration public EvaluationData Transfer(int gameId, int fromActorId, int toActorId, string key, long transferQuantity, out EvaluationData fromResource) Parameters Type Name Description System.Int32 gameId System.Int32 fromActorId System.Int32 toActorId System.String key System.Int64 transferQuantity EvaluationData fromResource Returns Type Description EvaluationData"
  },
  "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.CriteriaEvaluator.html": {
    "href": "api/PlayGen.SUGAR.Server.Core.EvaluationEvents.CriteriaEvaluator.html",
    "title": "Class CriteriaEvaluator | SUGAR",
    "keywords": "Class CriteriaEvaluator Evaluates evaluation criteria. Inheritance System.Object CriteriaEvaluator EvaluationController LeaderboardController RewardController Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.Core.EvaluationEvents Assembly : PlayGen.SUGAR.Server.Core.dll Syntax public class CriteriaEvaluator Constructors CriteriaEvaluator(ILogger<EvaluationDataController>, SUGARContextFactory, RelationshipController) Declaration public CriteriaEvaluator(ILogger<EvaluationDataController> evaluationDataLogger, SUGARContextFactory contextFactory, RelationshipController relationshipCoreController) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < EvaluationDataController > evaluationDataLogger SUGARContextFactory contextFactory RelationshipController relationshipCoreController Fields ContextFactory Declaration protected readonly SUGARContextFactory ContextFactory Field Value Type Description SUGARContextFactory EvaluationDataLogger Declaration protected ILogger<EvaluationDataController> EvaluationDataLogger Field Value Type Description Microsoft.Extensions.Logging.ILogger < EvaluationDataController > RelationshipCoreController Declaration protected readonly RelationshipController RelationshipCoreController Field Value Type Description RelationshipController Methods CompareValues<T>(T, T, ComparisonType, EvaluationDataType) Declaration protected static float CompareValues<T>(T value, T expected, ComparisonType comparisonType, EvaluationDataType dataType)where T : IComparable Parameters Type Name Description T value T expected ComparisonType comparisonType EvaluationDataType dataType Returns Type Description System.Single Type Parameters Name Description T Evaluate(Int32, Int32, EvaluationCriteria, ActorType, EvaluationType) Declaration protected float Evaluate(int gameId, int actorId, EvaluationCriteria completionCriteria, ActorType actorType, EvaluationType evaluationType) Parameters Type Name Description System.Int32 gameId System.Int32 actorId EvaluationCriteria completionCriteria ActorType actorType EvaluationType evaluationType Returns Type Description System.Single EvaluateBool(Int32, Int32, EvaluationCriteria) Declaration protected float EvaluateBool(int gameId, int actorId, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Int32 actorId EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateFloat(Int32, Int32, EvaluationCriteria) Declaration protected float EvaluateFloat(int gameId, int actorId, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Int32 actorId EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateLong(Int32, Int32, EvaluationCriteria) Declaration protected float EvaluateLong(int gameId, int actorId, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Int32 actorId EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateManyBool(Int32, List<Actor>, EvaluationCriteria) Declaration protected float EvaluateManyBool(int gameId, List<Actor> actors, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Collections.Generic.List < Actor > actors EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateManyFloat(Int32, List<Actor>, EvaluationCriteria) Declaration protected float EvaluateManyFloat(int gameId, List<Actor> actors, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Collections.Generic.List < Actor > actors EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateManyLong(Int32, List<Actor>, EvaluationCriteria) Declaration protected float EvaluateManyLong(int gameId, List<Actor> actors, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Collections.Generic.List < Actor > actors EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateManyString(Int32, List<Actor>, EvaluationCriteria) Declaration protected float EvaluateManyString(int gameId, List<Actor> actors, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Collections.Generic.List < Actor > actors EvaluationCriteria completionCriteria Returns Type Description System.Single EvaluateString(Int32, Int32, EvaluationCriteria) Declaration protected float EvaluateString(int gameId, int actorId, EvaluationCriteria completionCriteria) Parameters Type Name Description System.Int32 gameId System.Int32 actorId EvaluationCriteria completionCriteria Returns Type Description System.Single IsCriteriaSatisified(Int32, Int32, List<EvaluationCriteria>, ActorType, EvaluationType) Declaration public float IsCriteriaSatisified(int gameId, int actorId, List<EvaluationCriteria> completionCriterias, ActorType actorType, EvaluationType evaluationType) Parameters Type Name Description System.Int32 gameId System.Int32 actorId System.Collections.Generic.List < EvaluationCriteria > completionCriterias ActorType actorType EvaluationType evaluationType Returns Type Description System.Single"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.EvaluationDataExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.EvaluationDataExtensions.html",
    "title": "Class EvaluationDataExtensions | SUGAR",
    "keywords": "Class EvaluationDataExtensions Inheritance System.Object EvaluationDataExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Extensions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public static class EvaluationDataExtensions Methods FilterBy(IQueryable<EvaluationData>, Int32, Int32, String, EvaluationDataType, DateTime, DateTime) Declaration public static List<EvaluationData> FilterBy(this IQueryable<EvaluationData> gameDataQueryable, int gameId, int actorId, string key, EvaluationDataType evaluationDataType, DateTime start = default (DateTime), DateTime end = default (DateTime)) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.Int32 gameId System.Int32 actorId System.String key EvaluationDataType evaluationDataType System.DateTime start System.DateTime end Returns Type Description System.Collections.Generic.List < EvaluationData > FilterByActorId(IQueryable<EvaluationData>, Int32) Declaration public static IQueryable<EvaluationData> FilterByActorId(this IQueryable<EvaluationData> gameDataQueryable, int actorId) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.Int32 actorId Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByDataType(IQueryable<EvaluationData>, EvaluationDataType) Declaration public static IQueryable<EvaluationData> FilterByDataType(this IQueryable<EvaluationData> gameDataQueryable, EvaluationDataType type) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable EvaluationDataType type Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByDateTimeRange(IQueryable<EvaluationData>, DateTime, DateTime) Declaration public static IQueryable<EvaluationData> FilterByDateTimeRange(this IQueryable<EvaluationData> gameDataQueryable, DateTime start, DateTime end) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.DateTime start System.DateTime end Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByGameId(IQueryable<EvaluationData>, Int32) Declaration public static IQueryable<EvaluationData> FilterByGameId(this IQueryable<EvaluationData> gameDataQueryable, int gameId) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.Int32 gameId Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByIds(IQueryable<EvaluationData>, ICollection<Int32>) Declaration public static IQueryable<EvaluationData> FilterByIds(this IQueryable<EvaluationData> gameDataQueryable, ICollection<int> ids) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.Collections.Generic.ICollection < System.Int32 > ids Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByKey(IQueryable<EvaluationData>, String) Declaration public static IQueryable<EvaluationData> FilterByKey(this IQueryable<EvaluationData> gameDataQueryable, string key) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.String key Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByKeys(IQueryable<EvaluationData>, ICollection<String>) Declaration public static IQueryable<EvaluationData> FilterByKeys(this IQueryable<EvaluationData> gameDataQueryable, ICollection<string> keys) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.Collections.Generic.ICollection < System.String > keys Returns Type Description System.Linq.IQueryable < EvaluationData > FilterByMatchId(IQueryable<EvaluationData>, Nullable<Int32>) Declaration public static IQueryable<EvaluationData> FilterByMatchId(this IQueryable<EvaluationData> gameDataQueryable, int ? entityId) Parameters Type Name Description System.Linq.IQueryable < EvaluationData > gameDataQueryable System.Nullable < System.Int32 > entityId Returns Type Description System.Linq.IQueryable < EvaluationData > GetCategoryData(SUGARContext, EvaluationDataCategory) Declaration public static IQueryable<EvaluationData> GetCategoryData(this SUGARContext context, EvaluationDataCategory category) Parameters Type Name Description SUGARContext context EvaluationDataCategory category Returns Type Description System.Linq.IQueryable < EvaluationData >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.MatchExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.MatchExtensions.html",
    "title": "Class MatchExtensions | SUGAR",
    "keywords": "Class MatchExtensions Inheritance System.Object MatchExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Extensions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public static class MatchExtensions Methods FilterByDateTimeRange(IQueryable<Match>, Nullable<DateTime>, Nullable<DateTime>) Declaration public static IQueryable<Match> FilterByDateTimeRange(this IQueryable<Match> matches, DateTime? start, DateTime? end) Parameters Type Name Description System.Linq.IQueryable < Match > matches System.Nullable < System.DateTime > start System.Nullable < System.DateTime > end Returns Type Description System.Linq.IQueryable < Match >"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.SUGARContextSeedExtensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.SUGARContextSeedExtensions.html",
    "title": "Class SUGARContextSeedExtensions | SUGAR",
    "keywords": "Class SUGARContextSeedExtensions Inheritance System.Object SUGARContextSeedExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Extensions Assembly : PlayGen.SUGAR.Server.EntityFramework.dll Syntax public static class SUGARContextSeedExtensions Methods EnsureSeeded(SUGARContext) Declaration public static void EnsureSeeded(this SUGARContext context) Parameters Type Name Description SUGARContext context EnsureTestsSeeded(SUGARContext) Declaration public static void EnsureTestsSeeded(this SUGARContext context) Parameters Type Name Description SUGARContext context"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Extensions.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework.Extensions | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework.Extensions Classes ActorDataExtensions ContextExtensions DbSetExtensions Functionality missing from EF.Core that was available in EF 6 EvaluationDataExtensions MatchExtensions SUGARContextSeedExtensions"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.UserControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.UserControllerTests.html",
    "title": "Class UserControllerTests | SUGAR",
    "keywords": "Class UserControllerTests Inheritance System.Object EntityFrameworkTestBase UserControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class UserControllerTests : EntityFrameworkTestBase Methods CreateAndGetUser() Declaration [Fact] public void CreateAndGetUser() CreateDuplicateUser() Declaration [Fact] public void CreateDuplicateUser() DeleteExistingUser() Declaration [Fact] public void DeleteExistingUser() DeleteNonExistingUser() Declaration [Fact] public void DeleteNonExistingUser() GetMultipleUsersByName() Declaration [Fact] public void GetMultipleUsersByName() GetNonExistingUser() Declaration [Fact] public void GetNonExistingUser() GetNonExistingUserById() Declaration [Fact] public void GetNonExistingUserById() GetUserById() Declaration [Fact] public void GetUserById() UpdateNonExistingUser() Declaration [Fact] public void UpdateNonExistingUser() UpdateUser() Declaration [Fact] public void UpdateUser() UpdateUserToDuplicateName() Declaration [Fact] public void UpdateUserToDuplicateName()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.UserFriendControllerTests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.UserFriendControllerTests.html",
    "title": "Class UserFriendControllerTests | SUGAR",
    "keywords": "Class UserFriendControllerTests Inheritance System.Object EntityFrameworkTestBase UserFriendControllerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : PlayGen.SUGAR.Server.EntityFramework.Tests Assembly : PlayGen.SUGAR.Server.EntityFramework.Tests.dll Syntax public class UserFriendControllerTests : EntityFrameworkTestBase Methods AcceptUserFriendRequest() Declaration [Fact] public void AcceptUserFriendRequest() CreateAndGetUserFriendRequest() Declaration [Fact] public void CreateAndGetUserFriendRequest() CreateDuplicateAcceptedUserFriend() Declaration [Fact] public void CreateDuplicateAcceptedUserFriend() CreateDuplicateReversedAcceptedUserFriend() Declaration [Fact] public void CreateDuplicateReversedAcceptedUserFriend() CreateDuplicateReversedUserFriend() Declaration [Fact] public void CreateDuplicateReversedUserFriend() CreateDuplicateUserFriend() Declaration [Fact] public void CreateDuplicateUserFriend() CreateRelationshipWithNonExistingAcceptor() Declaration [Fact] public void CreateRelationshipWithNonExistingAcceptor() CreateRelationshipWithNonExistingRequestor() Declaration [Fact] public void CreateRelationshipWithNonExistingRequestor() GetNonExistingUserFriendRequests() Declaration [Fact] public void GetNonExistingUserFriendRequests() GetNonExistingUserFriends() Declaration [Fact] public void GetNonExistingUserFriends() GetNonExistingUserSentFriendRequests() Declaration [Fact] public void GetNonExistingUserSentFriendRequests() GetUserSentFriendRequests() Declaration [Fact] public void GetUserSentFriendRequests() RejectUserFriendRequest() Declaration [Fact] public void RejectUserFriendRequest() UpdateNonExistingUserFriend() Declaration [Fact] public void UpdateNonExistingUserFriend() UpdateNonExistingUserFriendRequest() Declaration [Fact] public void UpdateNonExistingUserFriendRequest() UpdateUserFriend() Declaration [Fact] public void UpdateUserFriend()"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.Tests.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.Tests.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework.Tests | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework.Tests Classes AccountControllerTests AchievementControllerTests ClearDatabaseFixture ClearDatabaseFixtureCollection ControllerLocator EntityFrameworkTestBase EvaluationDataControllerTests GameControllerTests GroupControllerTests GroupMemberControllerTests Helpers UserControllerTests UserFriendControllerTests"
  },
  "api/PlayGen.SUGAR.Server.EntityFramework.html": {
    "href": "api/PlayGen.SUGAR.Server.EntityFramework.html",
    "title": "Namespace PlayGen.SUGAR.Server.EntityFramework | SUGAR",
    "keywords": "Namespace PlayGen.SUGAR.Server.EntityFramework Classes SUGARContext Entity Framework Database Configuration SUGARContextFactory"
  },
  "development/versioning.html": {
    "href": "development/versioning.html",
    "title": "Versioning | SUGAR",
    "keywords": "Versioning The Server and Client share an API Version, used to ensure compatibility. The API Version is made up of three parts in the format Major . Minor . Build version numbers. Major : Should increment when API Breaking changes are added. Minor : Should increment for Fixes and Additions that won't cause existing clients with the same Major version to break. Build : Should increment for every build. Version compatibility is ensured by the APIVersion filter in the PlayGen.SUGAR.Server.WebAPI project. When the Client sends a request, it must include the API Version string with the key \"APIVersion\" as a header. The APIVersion is shared between Server and Client projects in PlayGen.SUGAR.Common.APIVersion."
  },
  "restapi/restapi.html": {
    "href": "restapi/restapi.html",
    "title": "SUGAR Engine REST API | SUGAR",
    "keywords": "SUGAR Engine REST API Account ApiAccountCreatePost Register a new account and creates an associated user. Requires the PlayGen.SUGAR.Contracts.AccountRequest.Name to be unique. Returns a JsonWebToken used for authorization in any further calls to the API. Example Usage: POST api/account/create Request POST /api/Account/create Parameters Name Type Value Notes accountRequest PlayGen.SUGAR.Contracts.AccountRequest object that contains the details of the new Account. Responses Status Code Description Samples 200 Success ApiAccountByIdDelete Delete Account with the ID provided. Example Usage: DELETE api/account/1 Request DELETE /api/Account/{id} Parameters Name Type Value Notes *id integer Account ID. Responses Status Code Description Samples 200 Success AccountSource ApiAccountSourceListGet Get a list of all AccountSources. Example Usage: GET api/accountSource/list Request GET /api/AccountSource/list Responses Status Code Description Samples 200 Success ApiAccountSourceFindbyidByIdGet Get AccountSource that matches provided. Example Usage: GET api/accountSource/findbyid/1 Request GET /api/AccountSource/findbyid/{id} Parameters Name Type Value Notes *id integer Responses Status Code Description Samples 200 Success ApiAccountSourcePost Create a new AccountSource. Requires the PlayGen.SUGAR.Contracts.AccountSourceRequest.Token to be unique. Example Usage: POST api/accountSource Request POST /api/AccountSource Parameters Name Type Value Notes newAccountSource PlayGen.SUGAR.Contracts.AccountSourceRequest object that contains the details of the new AccountSource. Responses Status Code Description Samples 200 Success ApiAccountSourceUpdateByIdPut Update an existing AccountSource. Example Usage: PUT api/accountSource/update/1 Request PUT /api/AccountSource/update/{id} Parameters Name Type Value Notes *id integer Id of the existing AccountSource. accountSource PlayGen.SUGAR.Contracts.AccountSourceRequest object that holds the details of the AccountSource. Responses Status Code Description Samples 200 Success ApiAccountSourceByIdDelete Delete AccountSource with the ID provided. Example Usage: DELETE api/accountSource/1 Request DELETE /api/AccountSource/{id} Parameters Name Type Value Notes *id integer AccountSource ID. Responses Status Code Description Samples 200 Success Achievements ApiAchievementsFindByTokenByGameIdGet Find an Achievement that matches and . Example Usage: GET api/achievements/find/ACHIEVEMENT_TOKEN/1 Request GET /api/Achievements/find/{token}/{gameId} Parameters Name Type Value Notes *token string Token of Achievement *gameId integer ID of the Game the Achievement is for Responses Status Code Description Samples 200 Success ApiAchievementsFindByTokenGlobalGet Find an Achievement that matches and . Example Usage: GET api/achievements/find/ACHIEVEMENT_TOKEN/1 Request GET /api/Achievements/find/{token}/global Parameters Name Type Value Notes *token string Token of Achievement *gameId integer ID of the Game the Achievement is for Responses Status Code Description Samples 200 Success ApiAchievementsGlobalListGet Find a list of Achievements that match . If global is provided instead of a gameId, get all global achievements, ie. achievements that are not associated with a specific game. Example Usage: GET api/achievements/game/1/list Request GET /api/Achievements/global/list Parameters Name Type Value Notes *gameId integer Game ID Responses Status Code Description Samples 200 Success ApiAchievementsGameByGameIdListGet Find a list of Achievements that match . If global is provided instead of a gameId, get all global achievements, ie. achievements that are not associated with a specific game. Example Usage: GET api/achievements/game/1/list Request GET /api/Achievements/game/{gameId}/list Parameters Name Type Value Notes *gameId integer Game ID Responses Status Code Description Samples 200 Success ApiAchievementsGameByGameIdEvaluateByActorIdGet Find the current progress for all achievements for a for . Example Usage: GET api/achievements/game/1/evaluate/1 Request GET /api/Achievements/game/{gameId}/evaluate/{actorId} Parameters Name Type Value Notes *gameId integer ID of Game *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiAchievementsGlobalEvaluateByActorIdGet Find the current progress for all achievements for a for . Example Usage: GET api/achievements/game/1/evaluate/1 Request GET /api/Achievements/global/evaluate/{actorId} Parameters Name Type Value Notes *gameId integer ID of Game *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiAchievementsByTokenByGameIdEvaluateByActorIdGet Find the current progress for an Achievement for . Example Usage: GET api/achievements/ACHIEVEMENT_TOKEN/1/evaluate/1 Request GET /api/Achievements/{token}/{gameId}/evaluate/{actorId} Parameters Name Type Value Notes *token string Token of Achievement *gameId integer ID of the Game the Achievement is for *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiAchievementsByTokenGlobalEvaluateByActorIdGet Find the current progress for an Achievement for . Example Usage: GET api/achievements/ACHIEVEMENT_TOKEN/1/evaluate/1 Request GET /api/Achievements/{token}/global/evaluate/{actorId} Parameters Name Type Value Notes *token string Token of Achievement *gameId integer ID of the Game the Achievement is for *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiAchievementsCreatePost Create a new Achievement. Requires PlayGen.SUGAR.Contracts.EvaluationCreateRequest.Name to be unique to that PlayGen.SUGAR.Contracts.EvaluationCreateRequest.GameId. Example Usage: POST api/achievements/create Request POST /api/Achievements/create Parameters Name Type Value Notes newAchievement PlayGen.SUGAR.Contracts.EvaluationCreateRequest object that holds the details of the new Achievement. Responses Status Code Description Samples 200 Success ApiAchievementsUpdatePut Update an existing Achievement. Example Usage: PUT api/achievements/update Request PUT /api/Achievements/update Parameters Name Type Value Notes achievement PlayGen.SUGAR.Contracts.EvaluationCreateRequest object that holds the details of the Achievement. Responses Status Code Description Samples 200 Success ApiAchievementsByTokenGlobalDelete Delete Achievement with the and provided. Example Usage: DELETE api/achievements/ACHIEVEMENT_TOKEN/1 Request DELETE /api/Achievements/{token}/global Parameters Name Type Value Notes *token string Token of Achievement *gameId integer ID of the Game the Achievement is for Responses Status Code Description Samples 200 Success ApiAchievementsByTokenByGameIdDelete Delete Achievement with the and provided. Example Usage: DELETE api/achievements/ACHIEVEMENT_TOKEN/1 Request DELETE /api/Achievements/{token}/{gameId} Parameters Name Type Value Notes *token string Token of Achievement *gameId integer ID of the Game the Achievement is for Responses Status Code Description Samples 200 Success ActorClaim ApiActorClaimClaimByClaimIdEntityByEntityIdGet Get a list of all Actors for this Claim and Entity. Example Usage: GET api/actorclaim/claim/1/entity/1 Request GET /api/ActorClaim/claim/{claimId}/entity/{entityId} Parameters Name Type Value Notes *claimId integer *entityId integer Responses Status Code Description Samples 200 Success ApiActorClaimActorByIdGet Get a list of all Claims for this Actor. Example Usage: GET api/actorclaim/actor/1/ Request GET /api/ActorClaim/actor/{id} Parameters Name Type Value Notes *id integer Responses Status Code Description Samples 200 Success ApiActorClaimPost Create a new ActorClaim. Example Usage: POST api/actorclaim Request POST /api/ActorClaim Parameters Name Type Value Notes newClaim PlayGen.SUGAR.Contracts.ActorClaimRequest object that contains the details of the new ActorClaim. Responses Status Code Description Samples 200 Success ApiActorClaimByIdDelete Delete ActorClaim with the ID provided. Example Usage: DELETE api/actorclaim/1 Request DELETE /api/ActorClaim/{id} Parameters Name Type Value Notes *id integer ActorClaim ID. Responses Status Code Description Samples 200 Success ActorData ApiActorDataGet Find a list of all ActorData that match the , and provided. Example Usage: GET api/actordata?actorId=1&gameId=1&key=key1&key=key2 Request GET /api/ActorData[?actorId&gameId&key] Parameters Name Type Value Notes actorId integer ID of a User/Group. gameId integer ID of a Game. key array Array of Key names. Responses Status Code Description Samples 200 Success ApiActorDataPost Create a new ActorData record. Example Usage: POST api/actordata Request POST /api/ActorData Parameters Name Type Value Notes newData PlayGen.SUGAR.Contracts.EvaluationDataRequest object that holds the details of the new ActorData. Responses Status Code Description Samples 200 Success ActorRole ApiActorRoleRoleByRoleIdEntityByEntityIdGet Get a list of all Actors for this Role and Entity. Example Usage: GET api/actorrole/role/1/entity/1 Request GET /api/ActorRole/role/{roleId}/entity/{entityId} Parameters Name Type Value Notes *roleId integer *entityId integer Responses Status Code Description Samples 200 Success ApiActorRoleActorByActorIdEntityByEntityIdClaimscopeByScopeNameGet Get a list of all Roles for this Actor, ClaimScope and Entity. Example Usage: GET api/actorrole/actor/1/entity/1/claimscope/game Request GET /api/ActorRole/actor/{actorId}/entity/{entityId}/claimscope/{scopeName} Parameters Name Type Value Notes *actorId integer *entityId integer *scopeName string Responses Status Code Description Samples 200 Success ApiActorRoleControlledGet Get a list of all Roles this Actor has control over. Example Usage: GET api/actorrole/controlled Request GET /api/ActorRole/controlled Responses Status Code Description Samples 200 Success ApiActorRolePost Create a new ActorRole. Example Usage: POST api/actorrole Request POST /api/ActorRole Parameters Name Type Value Notes newRole PlayGen.SUGAR.Contracts.ActorRoleRequest object that contains the details of the new ActorRole. Responses Status Code Description Samples 200 Success ApiActorRoleByIdDelete Delete ActorRole with the ID provided. Example Usage: DELETE api/actorrole/1 Request DELETE /api/ActorRole/{id} Parameters Name Type Value Notes *id integer ActorRole ID. Responses Status Code Description Samples 200 Success Game ApiGameListGet Get a list of all Games. Example Usage: GET api/game/list Request GET /api/Game/list Responses Status Code Description Samples 200 Success ApiGameControlledGet Get a list of all Games this Actor has control over. Example Usage: GET api/game/controlled Request GET /api/Game/controlled Responses Status Code Description Samples 200 Success ApiGameFindByNameGet Get a list of Games that match provided. Example Usage: GET api/game/find/game1 Request GET /api/Game/find/{name} Parameters Name Type Value Notes *name string Game name Responses Status Code Description Samples 200 Success ApiGameFindbyidByIdGet Get Game that matches provided. Example Usage: GET api/game/findbyid/1 Request GET /api/Game/findbyid/{id} Parameters Name Type Value Notes *id integer Game id Responses Status Code Description Samples 200 Success ApiGamePost Create a new Game. Requires the PlayGen.SUGAR.Contracts.GameRequest.Name to be unique. Example Usage: POST api/game Request POST /api/Game Parameters Name Type Value Notes newGame PlayGen.SUGAR.Contracts.GameRequest object that contains the details of the new Game. Responses Status Code Description Samples 200 Success ApiGameUpdateByIdPut Update an existing Game. Example Usage: PUT api/game/update/1 Request PUT /api/Game/update/{id} Parameters Name Type Value Notes *id integer Id of the existing Game. game PlayGen.SUGAR.Contracts.GameRequest object that holds the details of the Game. Responses Status Code Description Samples 200 Success ApiGameByIdDelete Delete Game with the ID provided. Example Usage: DELETE api/game/1 Request DELETE /api/Game/{id} Parameters Name Type Value Notes *id integer Game ID. Responses Status Code Description Samples 200 Success GameData ApiGameDataGet Find a list of all GameData that match the , and provided. Example Usage: GET api/gamedata?actorId=1&gameId=1&key=key1&key=key2 Request GET /api/GameData[?actorId&gameId&key] Parameters Name Type Value Notes actorId integer ID of a User/Group. gameId integer ID of a Game. key array Array of Key names. Responses Status Code Description Samples 200 Success ApiGameDataPost Create a new GameData record. Example Usage: POST api/gamedata Request POST /api/GameData Parameters Name Type Value Notes newData PlayGen.SUGAR.Contracts.EvaluationDataRequest object that holds the details of the new GameData. Responses Status Code Description Samples 200 Success ApiGameDataGameactorsByIdGet Find a list of all Actors that have data saved for the game provided. Example Usage: GET api/gamedata/gameactors/1 Request GET /api/GameData/gameactors/{id} Parameters Name Type Value Notes *id integer ID of a Game. Responses Status Code Description Samples 200 Success ApiGameDataGamekeysByIdGet Find a list of all GameData keys for the provided. Example Usage: GET api/gamedata/gamekeys/1 Request GET /api/GameData/gamekeys/{id} Parameters Name Type Value Notes *id integer ID of a Game. Responses Status Code Description Samples 200 Success ApiGameDataHighestGet Example Usage: GET api/gamedata/highest?actorId=1&gameId=1&key=key1&key=key2&dataType=1 Request GET /api/GameData/highest?actorId&gameId&dataType&sortType[&key] Parameters Name Type Value Notes *actorId integer ID of a User/Group. *gameId integer ID of a Game. key string Array of Key names. *dataType string Data type of value *sortType string Responses Status Code Description Samples 200 Success Group ApiGroupListGet Get a list of all Groups. Example Usage: GET api/group/list Request GET /api/Group/list Responses Status Code Description Samples 200 Success ApiGroupControlledGet Get a list of all Groups this Actor has control over. Example Usage: GET api/group/controlled Request GET /api/Group/controlled Responses Status Code Description Samples 200 Success ApiGroupFindByNameGet Get a list of Groups that match provided. Example Usage: GET api/group/find/group1 Request GET /api/Group/find/{name} Parameters Name Type Value Notes *name string Group name. Responses Status Code Description Samples 200 Success ApiGroupFindbyidByIdGet Get Group that matches provided. Example Usage: GET api/group/findbyid/1 Request GET /api/Group/findbyid/{id} Parameters Name Type Value Notes *id integer Group id. Responses Status Code Description Samples 200 Success ApiGroupPost Create a new Group. Requires the !:GroupRequest.Name to be unique for Groups. Example Usage: POST api/group Request POST /api/Group Parameters Name Type Value Notes actor PlayGen.SUGAR.Contracts.GroupRequest object that holds the details of the new Group. Responses Status Code Description Samples 200 Success ApiGroupUpdateByIdPut Update an existing Group. Example Usage: PUT api/group/update/1 Request PUT /api/Group/update/{id} Parameters Name Type Value Notes *id integer Id of the existing Group. group PlayGen.SUGAR.Contracts.GroupRequest object that holds the details of the Group. Responses Status Code Description Samples 200 Success ApiGroupByIdDelete Delete group with the provided. Example Usage: DELETE api/group/1 Request DELETE /api/Group/{id} Parameters Name Type Value Notes *id integer Group ID. Responses Status Code Description Samples 200 Success GroupMember ApiGroupMemberRequestsByGroupIdGet Get a list of all Users that have relationship requests for this . Example Usage: GET api/groupmember/requests/1 Request GET /api/GroupMember/requests/{groupId} Parameters Name Type Value Notes *groupId integer ID of the group. Responses Status Code Description Samples 200 Success ApiGroupMemberSentrequestsByUserIdGet Get a list of all Groups that have been sent relationship requests for this . Example Usage: GET api/groupmember/sentrequests/1 Request GET /api/GroupMember/sentrequests/{userId} Parameters Name Type Value Notes *userId integer ID of the user. Responses Status Code Description Samples 200 Success ApiGroupMemberMembersByGroupIdGet Get a list of all Users that have relationships with this . Example Usage: GET api/groupmember/members/1 Request GET /api/GroupMember/members/{groupId} Parameters Name Type Value Notes *groupId integer ID of the group. Responses Status Code Description Samples 200 Success ApiGroupMemberMembercountByGroupIdGet Get a count of users that have a relationship with this . Example Usage: GET api/groupmember/membercount/1 Request GET /api/GroupMember/membercount/{groupId} Parameters Name Type Value Notes *groupId integer ID of the group. Responses Status Code Description Samples 200 Success ApiGroupMemberUsergroupsByUserIdGet Get a list of all Groups that have relationships with this . Example Usage: GET api/groupmember/usergroups/1 Request GET /api/GroupMember/usergroups/{userId} Parameters Name Type Value Notes *userId integer ID of the User. Responses Status Code Description Samples 200 Success ApiGroupMemberPut Update an existing relationship between and . Requires the relationship to already exist between the User and Group. Example Usage: PUT api/groupmember Request PUT /api/GroupMember Parameters Name Type Value Notes relationship PlayGen.SUGAR.Contracts.RelationshipStatusUpdate object that holds the details of the relationship. Responses Status Code Description Samples 200 Success ApiGroupMemberPost Create a new relationship request between the User and Group. Requires a relationship between the User and Group to not already exist. Example Usage: POST api/groupmember Request POST /api/GroupMember Parameters Name Type Value Notes relationship PlayGen.SUGAR.Contracts.RelationshipRequest object that holds the details of the new relationship request. Responses Status Code Description Samples 200 Success ApiGroupMemberRequestPut Update an existing relationship request between and . Requires the relationship request to already exist between the User and Group. Example Usage: PUT api/groupmember/request Request PUT /api/GroupMember/request Parameters Name Type Value Notes relationship PlayGen.SUGAR.Contracts.RelationshipStatusUpdate object that holds the details of the relationship. Responses Status Code Description Samples 200 Success Leaderboards ApiLeaderboardsGlobalListGet Find a list of leaderboards that match . If global is provided instead of a gameId, get all global leaderboards, ie. leaderboards that are not associated with a specific game. Example Usage: GET api/leaderboards/game/1/list Request GET /api/Leaderboards/global/list Parameters Name Type Value Notes *gameId integer Game ID Responses Status Code Description Samples 200 Success ApiLeaderboardsGameByGameIdListGet Find a list of leaderboards that match . If global is provided instead of a gameId, get all global leaderboards, ie. leaderboards that are not associated with a specific game. Example Usage: GET api/leaderboards/game/1/list Request GET /api/Leaderboards/game/{gameId}/list Parameters Name Type Value Notes *gameId integer Game ID Responses Status Code Description Samples 200 Success ApiLeaderboardsByTokenGlobalGet Find a single leaderboard matching the token and gameId. Example Usage: GET api/leaderboards/LEADERBOARD_TOKEN/1 Request GET /api/Leaderboards/{token}/global Parameters Name Type Value Notes *token string Token *gameId integer Responses Status Code Description Samples 200 Success ApiLeaderboardsByTokenGlobalDelete Delete Leaderboard with the and provided. Example Usage: DELETE api/leaderboards/LEADERBOARD_TOKEN/1 Request DELETE /api/Leaderboards/{token}/global Parameters Name Type Value Notes *token string Token of Leaderboard *gameId integer ID of the Game the Leaderboard is for Responses Status Code Description Samples 200 Success ApiLeaderboardsByTokenByGameIdGet Find a single leaderboard matching the token and gameId. Example Usage: GET api/leaderboards/LEADERBOARD_TOKEN/1 Request GET /api/Leaderboards/{token}/{gameId} Parameters Name Type Value Notes *token string Token *gameId integer Responses Status Code Description Samples 200 Success ApiLeaderboardsByTokenByGameIdDelete Delete Leaderboard with the and provided. Example Usage: DELETE api/leaderboards/LEADERBOARD_TOKEN/1 Request DELETE /api/Leaderboards/{token}/{gameId} Parameters Name Type Value Notes *token string Token of Leaderboard *gameId integer ID of the Game the Leaderboard is for Responses Status Code Description Samples 200 Success ApiLeaderboardsCreatePost Create a new Leaderboard. Requires PlayGen.SUGAR.Contracts.LeaderboardRequest.Name and PlayGen.SUGAR.Contracts.LeaderboardRequest.Token to be unique to that PlayGen.SUGAR.Contracts.LeaderboardRequest.GameId. Example Usage: POST api/leaderboards/create Request POST /api/Leaderboards/create Parameters Name Type Value Notes newLeaderboard PlayGen.SUGAR.Contracts.LeaderboardRequest object that holds the details of the new Leaderboard. Responses Status Code Description Samples 200 Success ApiLeaderboardsStandingsPost Get the standings for a Leaderboard using a PlayGen.SUGAR.Contracts.LeaderboardStandingsRequest. Example Usage: POST api/leaderboards/standings Request POST /api/Leaderboards/standings Parameters Name Type Value Notes leaderboardDetails PlayGen.SUGAR.Contracts.LeaderboardStandingsRequest object that holds the details that are wanted from the Leaderboard. Responses Status Code Description Samples 200 Success ApiLeaderboardsUpdatePut Update an existing Leaderboard. Example Usage: PUT api/leaderboards/update Request PUT /api/Leaderboards/update Parameters Name Type Value Notes leaderboard PlayGen.SUGAR.Contracts.LeaderboardRequest object that holds the details of the Leaderboard. Responses Status Code Description Samples 200 Success Match ApiMatchCreateByGameIdGet Method for admins to creates a match for a game they are not logged into. Example Usage: GET api/match/create/1 Request GET /api/Match/create/{gameId} Parameters Name Type Value Notes *gameId integer Responses Status Code Description Samples 200 Success ApiMatchCreateGet Method to create a match for a game a user is currently logged into Example Usage: GET api/match/create Request GET /api/Match/create Responses Status Code Description Samples 200 Success ApiMatchCreateandstartGet Method to create a match for a game a user is currently logged into which is also started automatically. Example Usage: GET api/match/create Request GET /api/Match/createandstart Responses Status Code Description Samples 200 Success ApiMatchByMatchIdStartGet Start a match for the game the user is currently logged into. Example Usage: GET api/match/1/start Request GET /api/Match/{matchId}/start Parameters Name Type Value Notes *matchId integer Responses Status Code Description Samples 200 Success ApiMatchByMatchIdEndGet Ends a match for the game that the user is currently logged in for. Example Usage: GET api/match/1/end Request GET /api/Match/{matchId}/end Parameters Name Type Value Notes *matchId integer Responses Status Code Description Samples 200 Success ApiMatchByGameIdByMatchIdEndGet Method for admins to end a match for a game they are not logged into. Example Usage: GET api/match/1/end Request GET /api/Match/{gameId}/{matchId}/end Parameters Name Type Value Notes *gameId integer *matchId integer Responses Status Code Description Samples 200 Success ApiMatchByStartByEndGet Get a list of matches filtered by a time range. Example Usage: GET api/match/2016-12-20T15:40:30/2016-12-20T16:50:40 Request GET /api/Match/{start}/{end} Parameters Name Type Value Notes *start string *end string Responses Status Code Description Samples 200 Success ApiMatchGameByGameIdGet Get a list of matches for a specific game. Example Usage: GET api/match/game/1 Request GET /api/Match/game/{gameId} Parameters Name Type Value Notes *gameId integer Responses Status Code Description Samples 200 Success ApiMatchGameByGameIdByStartByEndGet Get a list of matches for a specific game, filtered by a time range. Example Usage: GET api/match/game/1/2016-12-20T15:40:30/2016-12-20T16:50:40 Request GET /api/Match/game/{gameId}/{start}/{end} Parameters Name Type Value Notes *gameId integer *start string *end string Responses Status Code Description Samples 200 Success ApiMatchCreatorByCreatorIdGet Get a list of matches that were created by a specific actor. Example Usage: GET api/match/creator/1 Request GET /api/Match/creator/{creatorId} Parameters Name Type Value Notes *creatorId integer Responses Status Code Description Samples 200 Success ApiMatchCreatorByCreatorIdByStartByEndGet Get a list of matches that were created by a specific actor, filtered by a time range. Example Usage: GET api/match/creator/1/2016-12-20T15:40:30/2016-12-20T16:50:40 Request GET /api/Match/creator/{creatorId}/{start}/{end} Parameters Name Type Value Notes *creatorId integer *start string *end string Responses Status Code Description Samples 200 Success ApiMatchGameByGameIdCreatorByCreatorIdGet Get a list of matches for a specific game created by a specific actor. Example Usage: GET api/match/game/1/creator/1 Request GET /api/Match/game/{gameId}/creator/{creatorId} Parameters Name Type Value Notes *gameId integer *creatorId integer Responses Status Code Description Samples 200 Success ApiMatchGameByGameIdCreatorByCreatorIdByStartByEndGet Get a list of matches for a specific game created by a specific user, filtered by a time range. Example Usage: GET api/match/game/1/creator/1/2016-12-20T15:40:30/2016-12-20T16:50:40 Request GET /api/Match/game/{gameId}/creator/{creatorId}/{start}/{end} Parameters Name Type Value Notes *gameId integer *creatorId integer *start string *end string Responses Status Code Description Samples 200 Success ApiMatchGet Find a list of all MatchData that match the input parameters. Example Usage: GET api/match/1/data Request GET /api/Match?matchId[&keys] Parameters Name Type Value Notes *matchId integer Id of a User/Group. keys array Array of Key names. Responses Status Code Description Samples 200 Success ApiMatchPost Create a new GameData record. Example Usage: POST api/match/1/data Request POST /api/Match Parameters Name Type Value Notes newData PlayGen.SUGAR.Contracts.EvaluationDataRequest object that holds the details of the new Match Data. Responses Status Code Description Samples 200 Success Resource ApiResourceGet Find a list of all Resources filtered by the , and provided. Example Usage: GET api/resource?actorId=1&gameId=1&key=key1&key=key2 Request GET /api/Resource[?gameId&actorId&keys] Parameters Name Type Value Notes gameId integer ID of a Game. actorId integer ID of a User/Group. keys array Optional array of Key names to filter results by. Responses Status Code Description Samples 200 Success ApiResourcePost Creates or updates a Resource record. Example Usage: POST api/resource Request POST /api/Resource Parameters Name Type Value Notes resourceRequest PlayGen.SUGAR.Contracts.ResourceAddRequest object that holds the details of the ResourceData. Responses Status Code Description Samples 200 Success ApiResourceTransferPost Transfers a quantity of a specific resource. Example Usage: Post api/resource/transfer Request POST /api/Resource/transfer Parameters Name Type Value Notes transferRequest PlayGen.SUGAR.Contracts.ResourceTransferRequest object that holds the details of the resoruce transfer. Responses Status Code Description Samples 200 Success Role ApiRoleListGet Get a list of all Roles. Example Usage: GET api/role/list Request GET /api/Role/list Responses Status Code Description Samples 200 Success ApiRoleScopeByNameGet Get a list of all Roles for the scope with this name. Example Usage: GET api/role/scope/game Request GET /api/Role/scope/{name} Parameters Name Type Value Notes *name string Responses Status Code Description Samples 200 Success ApiRoleScopedefaultByNameGet Get default Role for the scope with this name. Example Usage: GET api/role/scopedefault/game Request GET /api/Role/scopedefault/{name} Parameters Name Type Value Notes *name string Responses Status Code Description Samples 200 Success ApiRolePost Create a new Role. Requires the PlayGen.SUGAR.Contracts.RoleRequest.Name to be unique. Example Usage: POST api/role Request POST /api/Role Parameters Name Type Value Notes newRole PlayGen.SUGAR.Contracts.RoleRequest object that contains the details of the new Role. Responses Status Code Description Samples 200 Success ApiRoleByIdDelete Delete Role with the ID provided. Example Usage: DELETE api/role/1 Request DELETE /api/Role/{id} Parameters Name Type Value Notes *id integer Role ID. Responses Status Code Description Samples 200 Success RoleClaim ApiRoleClaimRoleByIdGet Get a list of all Claims for this Role. Example Usage: GET api/roleclaim/role/1 Request GET /api/RoleClaim/role/{id} Parameters Name Type Value Notes *id integer Responses Status Code Description Samples 200 Success ApiRoleClaimPost Create a new RoleClaim. Example Usage: POST api/roleclaim Request POST /api/RoleClaim Parameters Name Type Value Notes newRoleClaim PlayGen.SUGAR.Contracts.RoleClaimRequest object that contains the details of the new RoleClaim. Responses Status Code Description Samples 200 Success ApiRoleClaimRoleByRoleIdClaimByClaimIdDelete Delete RoleClaim with the ID provided. Example Usage: DELETE api/roleclaim/role/1/claim/1 Request DELETE /api/RoleClaim/role/{roleId}/claim/{claimId} Parameters Name Type Value Notes *roleId integer Role ID. *claimId integer Claim ID. Responses Status Code Description Samples 200 Success Session ApiLoginplatformPost Logs in an account based on the name and password combination. Returns a JsonWebToken used for authorization in any further calls to the API. Example Usage: POST api/loginplatform Request POST /api/loginplatform Parameters Name Type Value Notes accountRequest PlayGen.SUGAR.Contracts.AccountRequest object that contains the account details provided. Responses Status Code Description Samples 200 Success ApiByGameIdLogingamePost Logs in an account based on the name and password combination. Returns a JsonWebToken used for authorization in any further calls to the API. Example Usage: POST api/1/logingame Request POST /api/{gameId}/logingame Parameters Name Type Value Notes *gameId integer Optional Id of the game the account is logging in for. accountRequest PlayGen.SUGAR.Contracts.AccountRequest object that contains the account details provided. Responses Status Code Description Samples 200 Success ApiCreateandloginplatformPost Creates a new account and login that account. Example Usage: POST api/createandloginplatform Request POST /api/createandloginplatform Parameters Name Type Value Notes accountRequest PlayGen.SUGAR.Contracts.AccountRequest object that contains the account details provided. Responses Status Code Description Samples 200 Success ApiByGameIdCreateandlogingamePost Creates a new account and login that account. Example Usage: POST api/1/createandlogingame Request POST /api/{gameId}/createandlogingame Parameters Name Type Value Notes *gameId integer Optional Id of the game the account is logging in for. accountRequest PlayGen.SUGAR.Contracts.AccountRequest object that contains the account details provided. Responses Status Code Description Samples 200 Success ApiHeartbeatGet Heartbeat method to keep the specific session alive. Calling it within a server defined interval will notify the server that the session is still active. Request GET /api/heartbeat Responses Status Code Description Samples 200 Success ApiLogoutGet Logs out the currently logged in account, ending it's session and removing the authorization token. Request GET /api/logout Responses Status Code Description Samples 200 Success Skills ApiSkillsFindByTokenByGameIdGet Find a Skill that matches and . Example Usage: GET api/skills/find/SKILL_TOKEN/1 Request GET /api/Skills/find/{token}/{gameId} Parameters Name Type Value Notes *token string Token of Skill *gameId integer ID of the Game the Skill is for Responses Status Code Description Samples 200 Success ApiSkillsFindByTokenGlobalGet Find a Skill that matches and . Example Usage: GET api/skills/find/SKILL_TOKEN/1 Request GET /api/Skills/find/{token}/global Parameters Name Type Value Notes *token string Token of Skill *gameId integer ID of the Game the Skill is for Responses Status Code Description Samples 200 Success ApiSkillsGlobalListGet Find a list of Skills that match . If global is provided instead of a gameId, get all global skills, ie. skills that are not associated with a specific game. Example Usage: GET api/skills/game/1/list Request GET /api/Skills/global/list Parameters Name Type Value Notes *gameId integer Game ID Responses Status Code Description Samples 200 Success ApiSkillsGameByGameIdListGet Find a list of Skills that match . If global is provided instead of a gameId, get all global skills, ie. skills that are not associated with a specific game. Example Usage: GET api/skills/game/1/list Request GET /api/Skills/game/{gameId}/list Parameters Name Type Value Notes *gameId integer Game ID Responses Status Code Description Samples 200 Success ApiSkillsGameByGameIdEvaluateByActorIdGet Find the current progress for all skills for a for . Example Usage: GET api/skills/game/1/evaluate/1 Request GET /api/Skills/game/{gameId}/evaluate/{actorId} Parameters Name Type Value Notes *gameId integer ID of Game *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiSkillsGlobalEvaluateByActorIdGet Find the current progress for all skills for a for . Example Usage: GET api/skills/game/1/evaluate/1 Request GET /api/Skills/global/evaluate/{actorId} Parameters Name Type Value Notes *gameId integer ID of Game *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiSkillsByTokenByGameIdEvaluateByActorIdGet Find the current progress for a Skill for . Example Usage: GET api/skills/SKILL_TOKEN/1/evaluate/1 Request GET /api/Skills/{token}/{gameId}/evaluate/{actorId} Parameters Name Type Value Notes *token string Token of Skill *gameId integer ID of the Game the Skill is for *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiSkillsByTokenGlobalEvaluateByActorIdGet Find the current progress for a Skill for . Example Usage: GET api/skills/SKILL_TOKEN/1/evaluate/1 Request GET /api/Skills/{token}/global/evaluate/{actorId} Parameters Name Type Value Notes *token string Token of Skill *gameId integer ID of the Game the Skill is for *actorId integer ID of Group/User Responses Status Code Description Samples 200 Success ApiSkillsCreatePost Create a new Skill. Requires PlayGen.SUGAR.Contracts.EvaluationCreateRequest.Name to be unique to that PlayGen.SUGAR.Contracts.EvaluationCreateRequest.GameId. Example Usage: POST api/skills/create Request POST /api/Skills/create Parameters Name Type Value Notes newSkill PlayGen.SUGAR.Contracts.EvaluationCreateRequest object that holds the details of the new Skill. Responses Status Code Description Samples 200 Success ApiSkillsUpdatePut Update an existing Skill. Example Usage: PUT api/skills/update Request PUT /api/Skills/update Parameters Name Type Value Notes skill PlayGen.SUGAR.Contracts.EvaluationCreateRequest object that holds the details of the Skill. Responses Status Code Description Samples 200 Success ApiSkillsByTokenGlobalDelete Delete Skill with the and provided. Example Usage: DELETE api/skills/SKILL_TOKEN/1 Request DELETE /api/Skills/{token}/global Parameters Name Type Value Notes *token string Token of Skill *gameId integer ID of the Game the Skill is for Responses Status Code Description Samples 200 Success ApiSkillsByTokenByGameIdDelete Delete Skill with the and provided. Example Usage: DELETE api/skills/SKILL_TOKEN/1 Request DELETE /api/Skills/{token}/{gameId} Parameters Name Type Value Notes *token string Token of Skill *gameId integer ID of the Game the Skill is for Responses Status Code Description Samples 200 Success User ApiUserListGet Get a list of all Users. Example Usage: GET api/user/list Request GET /api/User/list Responses Status Code Description Samples 200 Success ApiUserFindByNameGet Get a list of Users that match provided. Example Usage: GET api/user/find/user1 Request GET /api/User/find/{name}?exactMatch Parameters Name Type Value Notes *name string User name. *exactMatch boolean Match the name exactly. Responses Status Code Description Samples 200 Success ApiUserFindByNameByExactMatchGet Get a list of Users that match provided. Example Usage: GET api/user/find/user1 Request GET /api/User/find/{name}/{exactMatch} Parameters Name Type Value Notes *name string User name. *exactMatch boolean Match the name exactly. Responses Status Code Description Samples 200 Success ApiUserFindbyidByIdGet Get User that matches provided. Example Usage: GET api/user/findbyid/1 Request GET /api/User/findbyid/{id} Parameters Name Type Value Notes *id integer User id. Responses Status Code Description Samples 200 Success ApiUserPost Create a new User. Requires the PlayGen.SUGAR.Contracts.UserRequest's Name to be unique for Users. Example Usage: POST api/user Request POST /api/User Parameters Name Type Value Notes actor PlayGen.SUGAR.Contracts.UserRequest object that holds the details of the new User. Responses Status Code Description Samples 200 Success ApiUserUpdateByIdPut Update an existing User. Example Usage: PUT api/user/update/1 Request PUT /api/User/update/{id} Parameters Name Type Value Notes *id integer Id of the existing User. user PlayGen.SUGAR.Contracts.UserRequest object that holds the details of the User. Responses Status Code Description Samples 200 Success ApiUserByIdDelete Delete user with the provided. Example Usage: DELETE api/user/1 Request DELETE /api/User/{id} Parameters Name Type Value Notes *id integer User ID. Responses Status Code Description Samples 200 Success UserFriend ApiUserFriendRequestsByUserIdGet Get a list of all Users that have relationship requests for this . Example Usage: GET api/userfriend/requests/1 Request GET /api/UserFriend/requests/{userId} Parameters Name Type Value Notes *userId integer ID of the group. Responses Status Code Description Samples 200 Success ApiUserFriendSentrequestsByUserIdGet Get a list of all Users that have been sent relationship requests for this . Example Usage: GET api/userfriend/sentrequests/1 Request GET /api/UserFriend/sentrequests/{userId} Parameters Name Type Value Notes *userId integer ID of the user. Responses Status Code Description Samples 200 Success ApiUserFriendFriendsByUserIdGet Get a list of all Users that have relationships with this . Example Usage: GET api/userfriend/friends/1 Request GET /api/UserFriend/friends/{userId} Parameters Name Type Value Notes *userId integer ID of the user. Responses Status Code Description Samples 200 Success ApiUserFriendPut Update an existing relationship between and . Requires the relationship to already exist between the two Users. Example Usage: PUT api/userfriend Request PUT /api/UserFriend Parameters Name Type Value Notes relationship PlayGen.SUGAR.Contracts.RelationshipStatusUpdate object that holds the details of the relationship. Responses Status Code Description Samples 200 Success ApiUserFriendPost Create a new relationship request between two Users. Requires a relationship between the two to not already exist. Example Usage: POST api/userfriend Request POST /api/UserFriend Parameters Name Type Value Notes relationship PlayGen.SUGAR.Contracts.RelationshipRequest object that holds the details of the new relationship request. Responses Status Code Description Samples 200 Success ApiUserFriendRequestPut Update an existing relationship request between and . Requires the relationship request to already exist between the two Users. Example Usage: PUT api/userfriend/request Request PUT /api/UserFriend/request Parameters Name Type Value Notes relationship PlayGen.SUGAR.Contracts.RelationshipStatusUpdate object that holds the details of the relationship. Responses Status Code Description Samples 200 Success Version ApiVersionGet Request GET /api/Version Responses Status Code Description Samples 200 Success"
  },
  "development/docker.html": {
    "href": "development/docker.html",
    "title": "Docker | SUGAR",
    "keywords": "Docker Requirements Linux or Windows with Subsytem for Linux enabled . Docker : Lowest tested version is 17. Docker Compose : Compose file format is version 2. Quick Start To run the SUGAR docker services without having to build the SUGAR image, run the docker/docker-compose_image_deploy script. This will use the latest docker image of SUGAR from the Automated Builds and create and link the database container. Automated Builds Using the automated build service , Docker Hub does a build of SUGAR each time a commit is pushed to the master branch on GitHub . You can find and download the image here . Building To build and run SUGAR, run the docker/docker-compose_build_deploy script. This will build the SUGAR image using the Dockerfile in the root of the repository, and then create and link the database container. Configuration Dockerfile The Dockerfile for SUGAR is in the project root. It is built off the base image recommended by Microsoft for .NETCoreApp2.0 applications. It copies the contents of the SUGAR repository into the filesystem of the container. The container contains the necessary environment to build this project thanks to the base image provided by Microsoft. The next steps restore the NuGet packages, build the project and launch the server via the PlayGen.SUGAR.Server.WebAPI entrypoint. Docker-Compose file The SUGAR docker-compose files have been split into 3 parts: docker-compose.image.yml : this has the configuration to pull the SUGAR image from DockerHub. docker-compose.build.yml : this has the configuration to build SUGAR image from source. docker-compose.base.yml : this contains all the shared settings for the SUGAR container as well as the database and inter-container links. docker-compose.image.yml See the docker/docker-compose_image_deploy script. It uses this in conjunction with docker-compose.base.yml . docker-compose.build.yml See the docker/docker-compose_build_deploy script. It uses this in conjunction with docker-compose.base.yml . docker-compose.base.yml The SUGAR compose configuration requires the sugar-mariadb container which hosts the databse. This is simply built from the mariadb image. When launching SUGAR, one of the first steps it does is to setup the database which requires it to be able to connect to the database within the sugar-mariadb container. If the database takes longer to startup than the SUGAR server, the server will attempt to connect to the database and fail. This is the reason for the wait-for-db container. It's purpose is to stay active until the database is fully initialized and ready to accept connections. This compose file along with the command sequence in the docker-compose_deploy scripts ensures that the container SUGAR is only launched after the database is ready. Currently the SUGAR container is set to map port 5000 within the container to 5000 on the host meaning you can access the api on the host machine via: http://localhost:5000/api/version ."
  },
  "development/documentation.html": {
    "href": "development/documentation.html",
    "title": "Documentation | SUGAR",
    "keywords": "Documentation SUGAR's documentation is generated using DocFX using tripple slash code comments and Swagger to generate the REST API. Building There are various build scripts in doc/tools to build, copy and serve the docs. Hosting Docs are built and copied to the PlayGen.SUGAR.WebAPI.Server/wwwroot where they are served from."
  }
}